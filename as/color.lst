   1              	.intel_syntax ;#colorforth, 2001 jul 22, chuck moore, public domain
   2              	
   3              	;#.486p
   4              	
   5              	.ifdef CM2001 ;# Chuck Moore's 2001 code includes AGP-specific video...
   6              	 .equ QUESTIONABLE, 1 ;# ...and other weird stuff found in color.com binary
   7              	 .equ AGP, 1  ;# hard-coded for ATI video
   8              	 .equ E1_STROBE, 1  ;# see 'debugout' macro below
   9              	 .equ AUTO_REFRESH, 1 ;# screen refresh constantly runs
  10              	.endif
  11              	
  12              	.macro debugout
  13              	/* CM referred to this as "Terry Loveall's e1 strobe" in some online docs, but
  14              	/* I can't find anything regarding port 0xe1 anywhere else, and the data
  15              	/* sent doesn't make any sense anyway. The boot failure problems mentioned in
  16              	/* that online document would more likely be due to the hardcoded millisecond
  17              	/* calculations for busy-wait routines than any "strobe" effect.
  18              	/* milliseconds should be calulated, with a single loop, using the
  19              	/* pc clock chip, like bogoMIPS. or, better yet, the clock should be used for
  20              	/* timing rather than busy-wait loops.
  21              	/* */
  22              	.ifdef E1_STROBE
  23              	    out 0xe1, al
  24              	.endif
  25              	.endm
  26              	
  27              	;# can't use loopnz in 32-bit mode
  28              	.macro next adr
  29              	    dec  ecx
  30              	    jnz  \adr
  31              	.endm
  32              	
  33              	;# save contents of eax on data stack
  34              	;# (eax is already a copy of top of data stack)
  35              	.macro dup_
  36              	    lea  esi, [esi-4]
  37              	    mov  [esi], eax
  38              	.endm
  39              	
  40              	;# pop what's at bottom of data stack back into eax
  41              	.macro drop
  42              	    lodsd
  43              	.endm
  44              	
  45              	;# compile Forth words with Huffman coding
  46              	.macro packword words:vararg
  47              	 .irp word, \words
  48              	 .equ packed, 0
  49              	 .equ bitcount, 32
  50              	 .equ stoppacking, 0
  51              	 .irpc letter, "\word"
  52              	  .equ savepacked, packed
  53              	  .equ huffindex, 0
  54              	  .equ huffcode, 0
  55              	  .irpc huffman, " rtoeanismcylgfwdvpbhxuq0123456789j-k.z/;:!+@*,?"
  56              	   .ifeqs "\letter", "\huffman"
  57              	    .equ bitshift, 4 + (huffindex / 8)
  58              	    .ifge bitshift - 6
  59              	     .equ bitshift, 7
  60              	    .endif
  61              	    .ifeq stoppacking
  62              	     .equ packed, packed | (huffcode << (bitcount - bitshift))
  63              	     .equ bitcount, bitcount - bitshift
  64              	    .endif
  65              	   .else
  66              	    .equ huffindex, huffindex + 1
  67              	    .equ huffcode, huffcode + 1
  68              	    .ifeq huffcode - 0b00001000 ;# going from 4-bit to 5-bit code
  69              	     .equ huffcode, 0b00010000
  70              	    .endif
  71              	    .ifeq huffcode - 0b00011000 ;# going from 5-bit to 7-bit code
  72              	     .equ huffcode, 0b01100000
  73              	    .endif
  74              	   .endif
  75              	  .endr
  76              	  .ifne packed & 0xf ;# low 4 bits cannot be occupied with packed stuff
  77              	   .equ packed, savepacked
  78              	   .equ stoppacking, -1
  79              	  .endif
  80              	 .endr
  81              	 .long packed
  82              	 .endr
  83              	.endm
  84              	
  85              	.ifndef SMALLSCREEN
  86              	 .equ hp, 1024 ;# 1024 or 800
  87              	 .equ vp, 768 ;# 768 or 600
  88              	.if CM2001 - 1 == 0
  89              	 .equ vesa, 0x0117 ;# 1024x768 mode
  90              	.elseif JF2005 - 1 == 0
  91              	 .equ vesa, 0x4118
  92              	.else
  93              	 .equ vesa, 0x4117 ;# bit 12 sets linear address mode in 0x117 or 0x114
  94              	.endif ;# CM2001
  95              	.else ;# SMALLSCREEN
  96              	 .equ hp, 800
  97              	 .equ vp, 600
  98              	 .equ vesa, 0x4114
  99              	.endif ;# SMALLSCREEN
 100              	.equ buffer, 604*256
 101              	.include "boot.asm" ;# boot boot0 hard
   1              	.intel_syntax ;# floppy boot segment
   2              	.ifdef DMA
   3              	;# Floppy boot segment. Modified 7/17/01 for Asus P2B-D Floppy I/O Terry Loveall
   4              	;# Modified again by, or at least used by, Jeff Fox in his 2005 binaries
   5              	.endif
   6              	
   7              	.org 0 ;# actually 7c00
   8 ???? EB56     	start: jmp  start0
   9 ???? 90       	    nop
  10 ???? 636D6366 	    .ascii "cmcf 1.0"
  10      20312E30 
  11 ???? 0002     	    .word 512     ;# bytes/sector
  12 ???? 01       	    .byte 1       ;# sector/cluster
  13 ???? 0100     	    .word 1       ;# sector reserved
  14 ???? 02       	    .byte 2       ;# fats
  15 ???? E000     	    .word 16*14   ;# root directory entries
  16 ???? 400B     	    .word 80*2*18 ;# sectors
  17 ???? F0       	    .byte 0x0f0    ;# media
  18 ???? 0900     	    .word 9       ;# sectors/fat
  19 ???? 1200     	    .word 18      ;# sectors/track
  20 ???? 0200     	    .word 2       ;# heads
  21 ???? 00000000 	    .long 0       ;# hidden sectors
  22 ???? 400B0000 	    .long 80*2*18 ;# sectors again
  23 ???? 00       	    .byte 0       ;# drive
  24              	
  25              	command:
  26              	.ifdef CM2001
  27 ???? C5       	    .byte 0xc5 ;# in compiled color.com from CM website
  28              	;# probably just there from save-system or similar command? just a guess
  29              	.else
  30              	    .byte 0
  31              	.endif
  32 ???? 00       	    .byte 0   ;# head, drive
  33              	cylinder:
  34              	.ifdef QUESTIONABLE
  35 ???? 01       	    .byte 1 ;# 1 in compiled color.com from CM website
  36              	;# causes load to skip from cylinder 0 directly to cylinder 2,
  37              	;# missing bytes 0x4800 to 0x9000 in color.com image
  38              	;# same problem in Jeff Fox's 2005 code
  39              	.else
  40              	    .byte 0
  41              	.endif
  42 ???? 00       	    .byte 0   ;# head
  43 ???? 01       	    .byte 1   ;# sector
  44 ???? 02       	    .byte 2   ;# 512 bytes/sector
  45 ???? 12       	    .byte 18  ;# sectors/track
  46 ???? 1B       	    .byte 0x1b ;# gap
  47 ???? FF       	    .byte 0x0ff
  48              	;# if you see any crud in disassembly here it shouldn't matter
  49              	;# different assemblers use different NOP instructions to pad out alignment
  50              	.ifdef CM2001
  51              	     mov eax, eax
  52              	.endif
  53 ???? 89F6     	.align 4
  54 ???? 09000000 	nc: .long 9 ;# forth+icons+blocks 24-161 ;# number of cylinders, 9 (out of 80)
  55 ???? 1700     	gdt: .word 0x17
  56 ???? 40000000 	    .long gdt0
  57              	;# different assemblers use different NOP instructions to pad out alignment
  58              	.ifdef CM2001
  59              	     cs mov eax, eax
  60              	     cs mov eax, eax
  61              	.endif
  62 ???? 8DB60000 	.align 8 ;# more garbage possibly in disassembly here, ignore it
  62      0000
  63 ???? 00000000 	gdt0: .word 0, 0, 0, 0 ;# null descriptor, not used
  63      00000000 
  64 ???? FFFF0000 	    .word 0x0ffff, 0, 0x9a00, 0x0cf ;# code, linear addressing from 0
  64      009ACF00 
  65 ???? FFFF0000 	    .word 0x0ffff, 0, 0x9200, 0x0cf ;# data, linear addressing from 0
  65      0092CF00 
  66              	
  67              	;# code is compiled in protected 32-bit mode.
  68              	;# hence (original code uses) .org .-2  to fix 16-bit words
  69              	;# and 4 hand-assembled instructions.
  70              	;# and eax and ax exchanged
  71              	;# this code is in real 16-bit mode
  72              	
  73              	.code16
  74              	start0:
  75              	.ifdef AGP
  76              	    mov  ax, 0x4f02 ;# video mode
  77              	    mov  bx, vesa ;# hp*vp rgb: 565
  78              	.else  ;# use VBE call to determine RAM address of desired video mode
  79              	    mov  ax, 0x4f01 ;# get video mode info
  80              	    mov  cx, vesa ;# a 16-bit color linear video mode (5:6:5 rgb)
  81              	    mov  di, 0x7e00 ;# use buffer space just past loaded bootsector
  82              	    int  0x10
  83              	    mov  ax, 0x4f02 ;# set video mode
  84              	    mov  bx, cx ;# vesa mode
  85              	.endif
  86 ???? CD10     	    int  0x10
  87 ???? FA       	    cli
  88              	.code32
  89              	    xor  ax, ax    ;# move code to 0
  90              	.ifdef QUESTIONABLE  ;# some things in CM's source which can be left out?
  91              	    mov  bx, ax
  92              	.code32
  93              	    mov  ebx, cs
  94              	    mov  ds, ebx
  95              	    mov  es, eax
  96              	    mov  di, ax
  97              	    mov  si, ax
  98              	.else
  99              	    mov  di, ax
 100              	    mov  bx, cs
 101              	    mov  ds, bx
 102              	    mov  es, ax ;# not necessary at boot but perhaps from comfile
 103              	.endif
 104              	.code16
 105 ???? E80000   	    call loc ;# where are we? ip+4*cs
 106 ???? 8F060000 	loc: pop  si
 107              	    sub  si, offset loc-offset start
 108              	    mov  cx, 512/4 ;# only 256 bytes unless...
 109              	;# compile as 32-bit code here so it moves longwords and not words
 110              	.code32
 111 ???? F366A5   	    rep movsw
 112              	.code16
 113              	;#    jmp  0:relocate
 114 ???? EA       	    .byte 0x0ea
 115 ???? 6A000000 	    .word relocate-start, 0
 116              	
 117              	relocate: ;# this code is executed from an offset of 0, not 0x7c00
 118              	    mov  ds, ax
 119 ???? 0F011634 	    lgdt [gdt]
 119      00
 120              	;#    .byte 0x0f, 1, 0x16
 121              	;#    .word gdt-start
 122              	    mov  al, 1
 123              	    mov  cr0, eax
 124              	;#    jmp  8:protected ;# code selector is offset 8
 125 ???? EA       	    .byte 0x0ea
 126 ???? 74000800 	    .word protected-start, 8
 127              	.code32
 128              	protected: ;# now in protected 32-bit mode
 129              	    mov  al, 0x10 ;# linear data selector (offset into GDT)
 130              	    mov  ds, eax
 131              	    mov  es, eax
 132              	    mov  ss, eax
 133              	    mov  esp, offset gods ;# assembles as a dword ptr without 'offset'
 134              	.ifndef AGP
 135              	    push [ds:0x7e28] ;# physical memory pointer returned by VESA call
 136              	.endif
 137              	    xor  ecx, ecx
 138              	
 139              	a20:
 140              	    mov  al, 0x0d1
 141              	    out  0x64, al ;# to keyboard
 142              	0:  in   al, 0x64
 143 ???? 83250000 	    and  al, 2
 143      000002
 144 ???? 75F7     	    jnz  0b
 145              	    mov  al, 0x4b
 146              	    out  0x60, al ;# to keyboard, enable A20
 147              	.ifdef DMA
 148              	    mov  eax, 512*18*2-1 ;# DMA channel 2 (0x47ff)
 149              	.endif
 150 ???? E88F0000 	    call dma
 150      00
 151              	    shl  ebx, 4
 152              	    add  esi, ebx
 153              	.ifdef QUESTIONABLE
 154 ???? 813D0000 	    cmp  dword ptr [esi], 0x44444444 ;# boot?
 154      00004444 
 154      4444
 155 ???? 7504     	    jnz  cold
 156              	.else
 157              	;# if we just copied the bootsector to 0, ESI will point to 0x7c00+200
 158              	    cmp  si, 0x7e00 ;# boot?
 159              	    jz   cold
 160              	.endif
 161              	    mov  cx, 63*0x100-0x80 ;# nope
 162 ???? F3A5     	    rep  movsd
 163              	    mov  esi, offset godd ;# 0x9f448, 3000 bytes below 0xa0000 (gods)
 164 ???? EB20     	    jmp  start2
 165              	
 166              	cold:
 167              	.ifndef DMA
 168 ???? E8630000 	    call sense_
 168      00
 169 ???? 79F9     	    jns  cold
 170              	.endif
 171              	    mov  esi, offset godd ;# 0x9f448, 3000 bytes below 0xa0000 (gods)
 172              	    xor  edi, edi ;# cylinder 0 on top of address 0
 173              	.ifdef DMA
 174              	    call read
 175              	    inc byte ptr cylinder
 176              	.endif
 177              	    mov  cl, byte ptr nc ;# number of cylinders used
 178              	.ifdef DMA
 179              	    dec  cl
 180              	.endif
 181 ???? FF350000 	0:  push ecx
 181      0000
 182 ???? E88A0000 	    call read
 182      00
 183              	.ifndef DMA
 184 ???? FE052700 	    inc byte ptr cylinder
 184      0000
 185              	.endif
 186 ???? 8F050000 	    pop  ecx
 186      0000
 187 ???? E2E7     	    loop 0b
 188              	start2:
 189 ???? E8580000 	    call stop
 189      00
 190 ???? E9AF0100 	    jmp  start1 ;# start1 is outside of bootsector
 190      00
 191              	.equ us, 1000/6
 192              	.equ ms, 1000*us
 193              	spin:
 194              	.ifdef DMA
 195              	    mov  al, 0x1c
 196              	    call onoff
 197              	    mov  ecx, 400*ms ;# what processor speed was this set for?
 198              	0:  loop 0b  ;# damn but I hate busy-waits (jc)
 199              	;#    mov  cylinder, cl ;# calibrate
 200              	    mov  al, 7 ;# recalibrate command
 201              	    mov  cl, 2
 202              	    jmp  cmdi
 203              	.else
 204              	    mov  cl, 0x1c
 205 ???? E84E0000 	    call onoff
 205      00
 206 ???? E8340000 	0:  call sense_
 206      00
 207 ???? 79F9     	    jns  0b
 208 ???? C6052700 	    mov  byte ptr cylinder, 0 ;# calibrate
 208      000000
 209              	    mov  al, 7
 210              	    mov  cl, 2
 211 ???? E80D0000 	    call cmd
 211      00
 212              	    mov  ecx, 500*ms
 213 ???? E2FE     	0:  loop 0b
 214 ???? E81F0000 	cmdi: call sense_
 214      00
 215 ???? 78F9     	    js   cmdi
 216 ???? C3       	    ret
 217              	.endif
 218              	
 219              	ready: ;#call delay
 220              	    mov  dx, 0x3f4
 221              	0:  in   al, dx
 222              	    debugout
 223              	    shl  al, 1
 224 ???? 73FE     	    jnc  0b
 225              	    lea  edx, [edx+1] ;# doesn't affect flags as INC would
 226 ???? C3       	    ret
 227              	
 228              	.ifndef DMA
 229              	transfer: mov  cl, 9
 230              	cmd:
 231              	    lea  edx, command
 232              	    mov  [edx], al
 233              	cmd0:
 234 ???? FF350000 	    push esi
 234      0000
 235              	    mov  esi, edx
 236              	cmd1:
 237 ???? E8F2FFFF 	    call ready
 237      FF
 238 ???? 7902     	    jns  0f
 239              	    in   al, dx
 240 ???? EBF7     	    jmp  cmd1
 241 ???? AC       	0:  lodsb
 242              	    out  dx, al
 243              	    debugout
 244 ???? E2F4     	    loop cmd1
 245 ???? 8F050000 	    pop  esi
 245      0000
 246 ???? C3       	    ret
 247              	.else
 248              	cmd:
 249              	    lea  edx, command
 250              	    mov  [edx], al
 251              	    push esi
 252              	    mov  esi, edx
 253              	0:  call ready
 254              	    jns  cmd0
 255              	    in   al, dx
 256              	    debugout
 257              	    jmp  0b
 258              	cmd0:
 259              	    lodsb
 260              	    mov  ah, 0x1e  ;# delay loop in JF2005 code
 261              	    out  dx, al
 262              	1:
 263              	    debugout
 264              	    dec  ah
 265              	    jne  1b
 266              	    loop 0b
 267              	    pop  esi
 268              	    ret
 269              	.endif
 270              	sense_: mov  al, 8
 271              	.ifdef CM2001
 272              	    mov  ecx, 1
 273              	.else
 274              	    mov  cl, 1
 275              	.endif
 276 ???? E8E2FFFF 	    call cmd
 276      FF
 277              	.ifndef DMA
 278 ???? E8DAFFFF 	0:  call ready
 278      FF
 279 ???? 79F9     	    jns  0b
 280              	.else
 281              	    call ready
 282              	.endif
 283              	    in   al, dx
 284              	    debugout
 285              	    and  al, al
 286              	;#  cmp  al, 0x80
 287 ???? C3       	    ret
 288              	
 289              	seek:
 290              	.ifdef DMA
 291              	    out 0xb, al
 292              	.endif
 293 ???? E8EEFFFF 	0:  call sense_
 293      FF
 294 ???? 79F9     	    jns  0b
 295              	.ifdef DMA
 296              	    mov  al, 0xf
 297              	    mov  cl, 3
 298              	cmdi:
 299              	    call cmd
 300              	0:  call sense_
 301              	    jz   0b
 302              	.endif
 303 ???? C3       	    ret
 304              	
 305              	stop:
 306              	.ifndef DMA
 307              	    mov  cl, 0x0c ;# motor off
 308              	.else
 309              	    mov  dword ptr trash, buffer*4 ;# 0x97000 in CM2001, used for DMA?
 310              	    mov  al, 0x0c
 311              	.endif
 312              	onoff:
 313              	.ifndef DMA
 314              	    dup_
 315              	    mov  al, cl
 316              	.endif
 317              	    mov  dx, 0x3f2
 318              	.ifdef DMA
 319              	    mov  ah, 0xf  ;# for timing in JF2005 DMA version
 320              	.endif
 321              	    out  dx, al
 322              	0:  debugout
 323              	.ifndef DMA
 324 ???? AD       	    drop
 325              	.else
 326              	    dec  ah
 327              	    jnz  0b
 328              	.endif
 329 ???? C3       	    ret
 330              	
 331              	dma:
 332              	.ifndef DMA
 333 ???? 66C70526 	    mov  word ptr command+1, 0x3a2 ;# l2 s6 u32 ms (e 2)
 333      000000A2 
 333      03
 334              	    mov  al, 3 ;# timing
 335              	    mov  cl, 3
 336 ???? E8C2FFFF 	    call cmd
 336      FF
 337 ???? 66C70526 	    mov  word ptr command+1, 0x7000 ;# +seek -fifo -poll
 337      00000000 
 337      70
 338              	    mov  al, 0x13 ;# configure
 339              	    mov  cl, 4
 340 ???? E8B4FFFF 	    call cmd
 340      FF
 341              	;# the following instruction clears the cylinder number among other things
 342              	    mov  dword ptr command, ecx ;# 0
 343 ???? C3       	    ret
 344              	.else
 345              	    out  5, al ;# set DMA-1 ch.2 base and current count to 0x47ff
 346              	    mov  al, ah
 347              	    out  5, al
 348              	    mov  eax, buffer*4 ;# 0x97000 in CM2001
 349              	    out  4, al ;# set DMA-1 ch.2 base and current address to "trash" buffer
 350              	    mov  al, ah
 351              	    out  4, al
 352              	    shr  eax, 16 ;# load page register value into al (9)
 353              	    out  0x81, al ;# set DMA-1 page register 2 = 09
 354              	    mov  al, 0xb
 355              	    out  0xf, al ;# write all mask bits, address = 0xf, value = 0xb
 356              	    mov  word ptr command+1, 0x2a1 ;# 2 6 16 ms (e 2)
 357              	    mov  al, 3 ;# timing
 358              	    mov  cl, 3
 359              	    call cmd
 360              	    mov  word ptr command+1, 0
 361              	    ret
 362              	
 363              	transfer:
 364              	    mov  cl, 9
 365              	    call cmd
 366              	    inc  byte ptr cylinder
 367              	0:  call ready
 368              	    jns  0b
 369              	    ret
 370              	.endif
 371              	read:
 372              	.ifdef DMA
 373              	    mov  al, 0x16 ;# read DMA 2
 374              	.endif
 375 ???? E8D4FFFF 	    call seek
 375      FF
 376              	    mov  al, 0x0e6 ;# read normal data
 377 ???? E8A9FFFF 	    call transfer
 377      FF
 378              	;# about to read 0x4800, or 18432 bytes
 379              	;# total of 165888 (0x28800) bytes in 9 cylinders, 1.44 MB in 80 cylinders
 380              	;# note that the first call overwrites the cylinder number with 1 from
 381              	;# CM's color.com image; that's why it skips from cylinder 0 to 2
 382              	.ifdef DMA
 383              	    push esi
 384              	    mov  esi, buffer*4
 385              	    mov  ecx, 512*18*2/4
 386              	    rep  movsd
 387              	    pop  esi  
 388              	.else
 389              	    mov  cx, 18*2*512 ;# two heads, 18 sectors/track, 512 bytes/sector
 390 ???? E8A1FFFF 	0:  call ready
 390      FF
 391              	    in   al, dx
 392              	    debugout
 393 ???? AA       	    stosb
 394 ???? 75F8     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 395              	.endif
 396 ???? C3       	    ret
 397              	
 398              	;# don't need 'write' till after bootup
 399              	.ifndef CM2001
 400              	    .org 0x1fe
 401              	    .word 0x0aa55 ;# mark boot sector
 402              	    ;# end of boot sector
 403              	    .long 0x44444444 ;# mark color.com
 404              	.endif
 405              	
 406              	write:
 407              	.ifdef DMA
 408              	    mov  edi, buffer*4
 409              	    mov  ecx, 512*18*2/4
 410              	    rep  movsd
 411              	    mov  al, 0x1a ;# write DMA 2
 412              	    call seek
 413              	    mov  al, 0xc5
 414              	    jmp  transfer
 415              	.else
 416 ???? E8C1FFFF 	    call seek
 416      FF
 417              	    mov  al, 0x0c5 ;# write data
 418 ???? E896FFFF 	    call transfer
 418      FF
 419              	    mov  cx, 18*2*512 ;#two heads, 18 sectors/track, 512 bytes/sector
 420 ???? E88EFFFF 	0:  call ready
 420      FF
 421 ???? AC       	    lodsb
 422              	    out  dx, al
 423              	    debugout
 424 ???? 75F8     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 425 ???? C3       	    ret
 426              	.endif
 427              	
 428              	.ifdef CM2001
 429 ???? 00000000 	    .org 0x1fe
 429      00000000 
 429      00000000 
 429      00000000 
 429      00000000 
 429      00000000 
 429      00000000 
 429      00000000 
 429      00000000 
 429      00000000 
 429      00000000 
 430 ???? 55AA     	    .word 0x0aa55 ;# mark boot sector
 431              	    ;# end of boot sector
 432 ???? 44444444 	    .long 0x44444444 ;# mark color.com
 433              	.endif
 434              	
 435              	flop:
 436              	.ifdef DMA
 437              	    dup_
 438              	    call spin
 439              	    drop
 440              	    mov  ecx, eax
 441              	    drop
 442              	    mov  cylinder, al
 443              	    drop
 444              	    shl  eax, 2
 445              	    ret
 446              	.else
 447              	    mov  cylinder, al ;# c-cx
 448              	    dup_
 449              	    mov  dx, 0x3f2
 450              	    in   al, dx
 451              	    debugout
 452              	    test al, 0x10
 453 ???? 7505     	    jnz  0f
 454 ???? E9B1FEFF 	    jmp  spin
 454      FF
 455 ???? C3       	0:  ret
 456              	.endif
 457              	
 458              	.ifdef DMA
 459              	readf:
 460              	    call flop
 461              	    push edi
 462              	    mov  edi, eax
 463              	0:  push ecx
 464              	    call read
 465              	    pop  ecx
 466              	    next 0b
 467              	    pop  edi
 468              	readf1:
 469              	    call stop
 470              	    drop
 471              	    ret
 472              	
 473              	save_:
 474              	    dup_
 475              	    xor  eax, eax 
 476              	    dup_
 477              	    dup_
 478              	    mov  eax, nc
 479              	
 480              	writef:
 481              	    call flop
 482              	    push esi
 483              	    mov  esi, eax
 484              	0:  push ecx
 485              	    call write
 486              	    pop  ecx
 487              	    next 0b
 488              	    pop  ESI
 489              	    jmp  readf1
 490              	.else
 491              	readf:
 492 ???? E8F3FFFF 	    call flop ;# ac-ac
 492      FF
 493 ???? FF350000 	    push edi
 493      0000
 494              	    mov  edi, [esi+4]
 495              	    shl  edi, 2
 496 ???? E812FFFF 	    call read
 496      FF
 497 ???? 8F050000 	    pop  edi
 497      0000
 498              	readf1:
 499 ???? AD       	    drop
 500              	    inc  eax
 501 ???? 81050000 	    add  dword ptr [esi], 0x1200
 501      00000012 
 501      0000
 502 ???? C3       	    ret
 503              	
 504              	writef:
 505 ???? E8D1FFFF 	    call flop ;# ac-ac
 505      FF
 506 ???? FF350000 	    push esi
 506      0000
 507              	    mov  esi, [esi+4]
 508              	    shl  esi, 2
 509 ???? E803FFFF 	    call write
 509      FF
 510 ???? 8F050000 	    pop  esi
 510      0000
 511 ???? EBDC     	    jmp  readf1
 512              	
 513              	seekf:
 514 ???? E8B9FFFF 	    call flop ;# c-c
 514      FF
 515 ???? E8B7FEFF 	    call seek
 515      FF
 516              	    mov  al, 0x0f
 517              	    mov  cl, 3
 518 ???? E88CFEFF 	    call cmd
 518      FF
 519 ???? E87CFEFF 	    call cmdi
 519      FF
 520 ???? AD       	    drop
 521 ???? C3       	    ret
 522              	
 523              	cmdf: mov  ecx, eax ;# an
 524 ???? AD       	    drop
 525              	    lea  edx, [eax*4]
 526 ???? E87FFEFF 	    call cmd0
 526      FF
 527 ???? AD       	    drop
 528 ???? C3       	    ret
 529              	
 530              	readyf: dup_
 531 ???? E875FEFF 	    call ready
 531      FF
 532 ???? AD       	    drop
 533 ???? C3       	    ret
 534              	.endif
 102              	
 103              	;#   100000 dictionary
 104              	;#    a0000 top of return stack
 105              	;#    9f800 top of data stack
 106              	;#    9d800 free
 107              	;#    97000 floppy buffer
 108              	;#     4800 source ;# block 18, first high-level source block (load screen)
 109              	.equ icons, 12*256*4 ;# 3000, block 12 start of character maps
 110              	;#     7c00 bios boot sector
 111              	;#        0 forth
 112              	
 113              	warm: dup_
 114              	start1:
 115              	.ifdef AGP
 116 ???? E86F0600 	    call ati0  ;# access North Bridge chipset to get display RAM address
 116      00
 117              	.else
 118              	    pop [displ]  ;# use address determined by VBE2 call in boot.asm
 119              	.endif
 120 ???? E86A0000 	    call show0 ;# set up 'main' task to draw screen
 120      00
 121 ???? C705CC05 	    mov  dword ptr forths, offset ((forth1-forth0)/4) ;# number of Forth words
 121      00000000 
 121      0000
 122 ???? C705C805 	    mov  dword ptr macros, offset ((macro1-macro0)/4) ;# number of macros
 122      00000000 
 122      0000
 123              	    mov  eax, 18 ;# load start screen, 18
 124              	;# the start screen loads a bunch of definitions, then 'empty' which shows logo
 125 ???? E8C00200 	    call load
 125      00
 126 ???? E9C40900 	    jmp  accept ;# wait for keyhit
 126      00
 127              	
 128              	;# This version of colorforth has cooperative round-robin multi-tasking.
 129              	;# the tasks are: God (the forth kernel), and main
 130              	;# Each has two grow-down stacks; 's' indicates the
 131              	;# return stack, 'd' indicates the data stack.  Thus 'Gods' and 'Godd'
 132              	;# are the tops of the return and data stacks, respectively, for the
 133              	;# God task.
 134              	.equ gods, 0x28000*4 ;# 0xa0000, top of return stack
 135              	.equ godd, gods-750*4 ;# 0x9f448, top of data stack
 136              	.equ mains, godd-1500*4 ;# 0x9dcd8
 137              	.equ maind, mains-750*4 ;# 0x9d120
 138 ???? 90       	.align 4
 139              	;# 'me' points to the save slot for the current task
 140 ???? A1020000 	me: .long god
 141              	screen:
 142              	.ifdef CM2001
 143 ???? 1F0F1000 	    .long 0x100f1f ;# matches cm2001 color.com binary
 144              	.else
 145              	    .long 0 ;# logo
 146              	.endif
 147              	;# When we switch tasks, we need to switch stacks as well.  We do this
 148              	;# by pushing eax (cached top-of-stack) onto the data stack, pushing
 149              	;# the data stack pointer onto the return stack, and then saving the
 150              	;# return stack pointer into the save slot for the task.
 151              	;#
 152              	;# these are the save slots - each is followed by code to resume the
 153              	;# next task - the last one jumps 'round to the first.
 154 ???? E8210000 	round: call unpause
 154      00
 155              	god:
 156              	.ifdef CM2001
 157 ???? E8FF0900 	    .long 0x9ffe8 ;# found in cm2001 color.com binary
 158              	.else
 159              	    .long 0 ;# gods-2*4
 160              	.endif
 161 ???? E8180000 	    call unpause
 161      00
 162              	main:
 163              	.ifdef CM2001
 164 ???? D0DC0900 	    .long 0x9dcd0
 165              	.else
 166              	    .long 0 ;# mains-2*4
 167              	.endif
 168 ???? EBEC     	    jmp  round
 169              	
 170              	pause: dup_ ;# save cached datum from top of data stack
 171 ???? FF350000 	    push esi ;# save data stack pointer on return stack
 171      0000
 172              	    mov  eax, me ;# get current task
 173              	    mov  [eax], esp ;# put our stack pointer into [me]
 174 ???? 83050000 	    add  eax, 4 ;# skip storage slot, point to round-robin CALL or JMP
 174      000004
 175 ???? E9FCFFFF 	    jmp  eax ;# execute the CALL or JMP
 175      FF
 176              	
 177 ???? 8F050000 	unpause: pop  eax ;# return address is that of 'main' slot above
 177      0000
 178              	    mov  esp, [eax] ;# load 'main' task return stack
 179              	    mov  me, eax ;# 'main' task becomes 'me', current task
 180 ???? 8F050000 	    pop  esi ;# restore my task's data-stack pointer
 180      0000
 181 ???? AD       	    drop ;# load previously dup'd datum back into EAX
 182 ???? C3       	    ret
 183              	
 184              	act: ;# set currently active task
 185              	    mov  edx, maind-4 ;# data stack of 'main' task
 186              	    mov  [edx], eax ;# 0 if called from 'show'
 187              	    mov  eax, mains-4 ;# return stack of 'main' task
 188 ???? 8F050000 	    pop  [eax] ;# return of 'god' task now on 'main' stack
 188      0000
 189 ???? 832D0000 	    sub  eax, 4 ;# down one slot on 'main' stack
 189      000004
 190              	    mov  [eax], edx ;# store 'main' data stack pointer
 191              	    mov  main, eax ;# store 'main' return stack pointer in 'main' slot
 192 ???? AD       	    drop ;# what was 'dup'd before now into eax
 193 ???? C3       	    ret ;# to previous caller, since we already popped 'our' return address
 194              	
 195 ???? E8010000 	show0: call show
 195      00
 196 ???? C3       	    ret
 197 ???? 8F059802 	show: pop  screen ;# pop return address into screen; 'ret' if from show0
 197      0000
 198              	    dup_
 199              	    xor  eax, eax
 200 ???? E8E0FFFF 	    call act ;# make following infinite loop the 'active task'
 200      FF
 201 ???? E8240600 	0:  call graphic ;# just 'ret' in gen.asm
 201      00
 202 ???? FF159802 	    call [screen] ;# ret if called from show0
 202      0000
 203 ???? E81A0600 	    call switch ;# load framebuffer into video, then switch task
 203      00
 204              	    inc  eax ;# why bother?
 205 ???? EBEE     	    jmp  0b ;# loop eternally
 206              	
 207              	c_: mov  esi, godd+4
 208 ???? C3       	    ret
 209              	
 210              	mark: ;# save current state so we can recover later with 'empty'
 211              	    mov  ecx, macros ;# save number of macros in longword mk
 212              	    mov  mk, ecx
 213              	    mov  ecx, forths ;# number of forth words in mk+1
 214              	    mov  mk+4, ecx
 215              	    mov  ecx, h ;# 'here' pointer in mk+2
 216              	    mov  mk+2*4, ecx
 217 ???? C3       	    ret
 218              	
 219              	empty: ;# restore state saved at last 'mark'
 220              	    mov  ecx, mk+2*4
 221              	    mov  h, ecx ;# 'here' pointer restored
 222              	    mov  ecx, mk+4
 223              	    mov  forths, ecx ;# number of forth words restored
 224              	    mov  ecx, mk
 225              	    mov  macros, ecx ;# number of macros restored
 226 ???? C705BC05 	    mov  dword ptr class, 0 ;# (jc) not sure what this is for yet
 226      00000000 
 226      0000
 227 ???? C3       	    ret
 228              	
 229              	mfind: ;# find pointer to macro code
 230              	    mov  ecx, macros ;# number of macros, 1-based
 231 ???? FF350000 	    push edi ;# save destination pointer, we need to use it momentarily
 231      0000
 232              	    lea  edi, [macro0-4+ecx*4] ;# point to last macro
 233 ???? EB06     	    jmp  0f ;# search dictionary
 234              	
 235              	find: ;# locate code of high- or low-level Forth word
 236              	    mov  ecx, forths ;# current number of Forth definitions
 237 ???? FF350000 	    push edi ;# save destination pointer so we can use it
 237      0000
 238              	    lea  edi, [forth0-4+ecx*4] ;# point it to last packed Forth word
 239 ???? FD       	0:  std  ;# search backwards
 240 ???? F2AF     	    repne scasd ;# continue moving until we hit a match
 241 ???? FC       	    cld  ;# clear direction flag again
 242 ???? 8F050000 	    pop  edi ;# no longer need this, can tell from ECX where match was found
 242      0000
 243 ???? C3       	    ret
 244              	
 245 ???? FF0D500C 	ex1: dec dword ptr words ;# from keyboard
 245      0000
 246 ???? 7403     	    jz   0f
 247 ???? AD       	    drop
 248 ???? EBF5     	    jmp  ex1
 249 ???? E8DFFFFF 	0:  call find
 249      FF
 250 ???? 7526     	    jnz  abort1
 251 ???? AD       	    drop
 252 ???? FF259C06 	    jmp  [forth2+ecx*4] ;# jump to low-level code of Forth word or macro
 252      0000
 253              	
 254 ???? C705A405 	execute: mov dword ptr lit, offset alit
 254      00005204 
 254      0000
 255              	    dup_ ;# save EAX on data stack
 256              	    mov  eax, [-4+edi*4]
 257              	ex2:
 258 ???? 83250000 	    and  eax, 0xfffffff0 ;# mask tag bits which indicate word type
 258      0000F0
 259 ???? E8C0FFFF 	    call find ;# look for word in the dictionary
 259      FF
 260 ???? 7507     	    jnz  abort ;# if not found, abort
 261 ???? AD       	    drop ;# restore EAX from data stack
 262 ???? FF259C06 	    jmp  [forth2+ecx*4] ;# execute the Forth word found
 262      0000
 263              	
 264              	abort: mov  curs, edi
 265              	    shr  edi, 10-2
 266              	    mov  blk, edi
 267              	abort1: mov  esp, gods ;# reset return stack pointer
 268 ???? C7057005 	    mov  dword ptr  spaces+3*4, offset forthd ;# reset adefine
 268      0000AB03 
 268      0000
 269 ???? C7057405 	    mov  dword ptr  spaces+4*4, offset qcompile
 269      00007004 
 269      0000
 270 ???? C7057805 	    mov  dword ptr  spaces+5*4, offset cnum
 270      00003D04 
 270      0000
 271 ???? C7057C05 	    mov  dword ptr  spaces+6*4, offset cshort
 271      00004504 
 271      0000
 272              	    mov  eax, 057 ;# '?'
 273 ???? E8BA0600 	    call echo_
 273      00
 274 ???? E9C50800 	    jmp  accept
 274      00
 275              	
 276 ???? 8F057005 	sdefine: pop adefine
 276      0000
 277 ???? C3       	    ret
 278 ???? E8F4FFFF 	macro_: call sdefine
 278      FF
 279              	macrod: mov  ecx, macros
 280 ???? FF05C805 	    inc dword ptr  macros
 280      0000
 281              	    lea  ecx, [macro0+ecx*4]
 282 ???? EB0B     	    jmp  0f
 283              	
 284 ???? E8E7FFFF 	forth: call sdefine
 284      FF
 285              	forthd:
 286              	    mov  ecx, forths ;# current count of Forth words
 287 ???? FF05CC05 	    inc dword ptr forths ;# make it one more
 287      0000
 288              	    lea  ecx, [forth0+ecx*4] ;# point to the slot for the next definition
 289              	0:  mov  edx, [-4+edi*4] ;# load the packed word from ???
 290 ???? 83250000 	    and  edx, 0xfffffff0 ;# mask out the tag bits
 290      0000F0
 291              	    mov  [ecx], edx ;# store the "naked" word in the dictionary
 292              	    mov  edx, h ;# 'here' pointer, place available for new compiled code
 293              	    mov  [forth2-forth0+ecx], edx
 294              	    lea  edx, [forth2-forth0+ecx]
 295              	    shr  edx, 2
 296              	    mov  last, edx
 297              	    mov  list, esp
 298 ???? C705A405 	    mov dword ptr  lit, offset adup
 298      00000804 
 298      0000
 299 ???? F705BC05 	    test dword ptr class, -1
 299      0000FFFF 
 299      FFFF
 300 ???? 7406     	    jz   0f
 301 ???? FF25BC05 	    jmp  [class]
 301      0000
 302 ???? C3       	0:  ret
 303              	
 304              	cdrop: mov  edx, h
 305              	    mov  list, edx
 306 ???? C6050000 	    mov  byte ptr [edx], 0x0ad ;# lodsd
 306      0000AD
 307 ???? FF05B405 	    inc  dword ptr h
 307      0000
 308 ???? C3       	    ret
 309              	
 310              	qdup: mov  edx, h
 311              	    dec  edx
 312              	    cmp  list, edx
 313 ???? 750A     	    jnz  cdup
 314 ???? 803D0000 	    cmp  byte ptr [edx], 0x0ad
 314      0000AD
 315 ???? 7501     	    jnz  cdup
 316              	    mov  h, edx
 317 ???? C3       	    ret
 318              	cdup: mov  edx, h
 319 ???? C7050000 	    mov  dword ptr [edx], 0x89fc768d
 319      00008D76 
 319      FC89
 320 ???? C6050400 	    mov  byte ptr [4+edx], 06
 320      000006
 321 ???? 8305B405 	    add dword ptr  h, 5
 321      000005
 322 ???? C3       	    ret
 323              	
 324              	adup: dup_
 325 ???? C3       	    ret
 326              	
 327              	var1: dup_
 328              	    mov  eax, [4+forth0+ecx*4]
 329 ???? C3       	    ret
 330 ???? E89CFFFF 	variable: call forthd
 330      FF
 331 ???? C705C400 	    mov dword ptr  [forth2-forth0+ecx], offset var1
 331      00000904 
 331      0000
 332 ???? FF05CC05 	    inc dword ptr  forths ;# dummy entry for source address
 332      0000
 333              	    mov  [4+ecx], edi
 334 ???? E87AFFFF 	    call macrod
 334      FF
 335 ???? C705C400 	    mov dword ptr  [forth2-forth0+ecx], offset 0f
 335      00003504 
 335      0000
 336 ???? FF05C805 	    inc dword ptr  macros
 336      0000
 337              	    mov  [4+ecx], edi
 338              	    inc  edi
 339 ???? C3       	    ret
 340 ???? FF15A405 	0:  call [lit]
 340      0000
 341              	    mov  eax, [4+macro0+ecx*4]
 342 ???? EB0E     	    jmp  0f
 343              	
 344 ???? FF15A405 	cnum: call [lit]
 344      0000
 345              	    mov  eax, [edi*4]
 346              	    inc  edi
 347 ???? EB06     	    jmp  0f
 348              	
 349 ???? FF15A405 	cshort: call [lit]
 349      0000
 350              	    mov  eax, [-4+edi*4]
 351              	    sar  eax, 5
 352 ???? E80C0000 	0:  call literal
 352      00
 353 ???? AD       	    drop
 354 ???? C3       	    ret
 355              	
 356 ???? C705A405 	alit: mov dword ptr lit, offset adup
 356      00000804 
 356      0000
 357 ???? E882FFFF 	literal: call qdup
 357      FF
 358              	    mov  edx, list
 359              	    mov  list+4, edx
 360              	    mov  edx, h
 361              	    mov  list, edx
 362 ???? C6050000 	    mov  byte ptr [edx], 0x0b8
 362      0000B8
 363              	    mov  [1+edx], eax
 364 ???? 8305B405 	    add dword ptr  h, 5
 364      000005
 365 ???? C3       	    ret
 366              	
 367 ???? FF15A405 	qcompile: call [lit]
 367      0000
 368              	    mov  eax, [-4+edi*4]
 369 ???? 83250000 	    and  eax, 0xfffffff0 ;# mask out tag bits
 369      0000F0
 370 ???? E88DFEFF 	    call mfind ;# locate word in macro dictionary
 370      FF
 371 ???? 7507     	    jnz  0f ;# if failed, try in Forth dictionary
 372 ???? AD       	    drop ;# restore EAX
 373 ???? FF25D805 	    jmp  [macro2+ecx*4] ;# jmp to macro code
 373      0000
 374 ???? E887FEFF 	0:  call find ;# try to find the word in the Forth dictionary
 374      FF
 375              	    mov  eax, [forth2+ecx*4] ;# load code pointer in case there was a match
 376 ???? 0F85CAFE 	0:  jnz  abort ;# abort if no match in Forth dictionary
 376      FFFF
 377              	call_:
 378              	    mov  edx, h ;# get 'here' pointer to where new compiled code goes
 379              	    mov  list, edx
 380 ???? C6050000 	    mov  byte ptr [edx], 0x0e8 ;# x86 "call" instruction
 380      0000E8
 381 ???? 83050000 	    add  edx, 5
 381      000005
 382              	    sub  eax, edx ;# it has to be a 32-bit offset rather than absolute address
 383              	    mov  [-4+edx], eax ;# store it after the "call" instruction
 384              	    mov  h, edx ;# point 'here' to end of just-compiled code
 385 ???? AD       	    drop ;# restore EAX from data stack
 386 ???? C3       	    ret
 387              	
 388 ???? FF15A405 	compile: call [lit]
 388      0000
 389              	    mov  eax, [-4+edi*4]
 390 ???? 83250000 	    and  eax, 0xfffffff0 ;# mask out tag bits
 390      0000F0
 391 ???? E857FEFF 	    call mfind
 391      FF
 392              	    mov  eax, [macro2+ecx*4]
 393 ???? EBD6     	    jmp  0b
 394              	
 395 ???? C705A405 	short_: mov dword ptr lit, offset alit
 395      00005204 
 395      0000
 396              	    dup_
 397              	    mov  eax, [-4+edi*4]
 398              	    sar  eax, 5
 399 ???? C3       	    ret
 400              	
 401 ???? C705A405 	num: mov dword ptr lit, offset alit
 401      00005204 
 401      0000
 402              	    dup_
 403              	    mov  eax, [edi*4]
 404              	    inc  edi
 405 ???? C3       	    ret
 406              	
 407              	comma: mov  ecx, 4
 408              	0:  mov  edx, h
 409              	    mov  [edx], eax
 410              	    mov  eax, [esi] ;# drop
 411              	    lea  edx, [edx+ecx]
 412              	    lea  esi, [esi+4]
 413              	    mov  h, edx
 414 ???? C3       	    ret
 415              	
 416              	comma1: mov  ecx, 1
 417 ???? EBFD     	    jmp  0b
 418              	
 419              	comma2: mov  ecx, 2
 420 ???? EBFB     	    jmp  0b
 421              	
 422              	comma3: mov  ecx, 3
 423 ???? EBF9     	    jmp  0b
 424              	
 425              	semi: mov  edx, h
 426 ???? 832D0000 	    sub  edx, 5
 426      000005
 427              	    cmp  list, edx
 428 ???? 7510     	    jnz  0f
 429 ???? 803D0000 	    cmp  byte ptr [edx], 0x0e8
 429      0000E8
 430 ???? 7507     	    jnz  0f
 431 ???? FE050000 	    inc  byte ptr [edx] ;# jmp
 431      0000
 432 ???? C3       	    ret
 433 ???? C6050500 	0:  mov  byte ptr [5+edx], 0x0c3 ;# ret
 433      0000C3
 434 ???? FF05B405 	    inc  dword ptr h
 434      0000
 435 ???? C3       	    ret
 436              	
 437              	then: mov  list, esp
 438              	    mov  edx, h
 439              	    sub  edx, eax
 440              	    mov  [-1+eax], dl
 441 ???? AD       	    drop
 442 ???? C3       	    ret
 443              	
 444              	begin: mov  list, esp
 445              	here: dup_
 446              	    mov  eax, h
 447 ???? C3       	    ret
 448              	
 449              	qlit: mov  edx, h
 450              	    lea  edx, [edx-5]
 451              	    cmp  list, edx
 452 ???? 7522     	    jnz  0f
 453 ???? 803D0000 	    cmp  byte ptr [edx], 0x0b8
 453      0000B8
 454 ???? 7519     	    jnz  0f
 455              	    dup_
 456              	    mov  eax, list+4
 457              	    mov  list, eax
 458              	    mov  eax, [1+edx]
 459 ???? 813DFBFF 	    cmp  dword ptr [edx-5], 0x89fc768d ;# dup
 459      FFFF8D76 
 459      FC89
 460 ???? 7405     	    jz   q1
 461              	    mov  h, edx
 462 ???? E9B8FEFF 	    jmp  cdrop
 462      FF
 463 ???? 8305B405 	q1: add dword ptr  h, -10 ;# flag nz
 463      0000F6
 464 ???? C3       	    ret
 465              	0:  xor  edx, edx ;# flag z
 466 ???? C3       	    ret
 467              	
 468              	less: cmp  [esi], eax
 469 ???? 7800     	    js   0f ;# flag nz
 470              	    xor  ecx, ecx ;# flag z
 471 ???? C3       	0:  ret
 472              	
 473 ???? F705FCFF 	qignore: test dword ptr [-4+edi*4], 0xfffffff0 ;# valid packed word?
 473      FFFFF0FF 
 473      FFFF
 474 ???? 750C     	    jnz  nul  ;# return if so
 475 ???? 8F050000 	    pop  edi
 475      0000
 476 ???? 8F050000 	    pop  edi
 476      0000
 477 ???? C3       	nul: ret
 478              	
 479 ???? 8F050000 	jump: pop  edx
 479      0000
 480              	    add  edx, eax
 481              	    lea  edx, [5+eax*4+edx]
 482              	    add  edx, [-4+edx]
 483 ???? AD       	    drop
 484 ???? E9FCFFFF 	    jmp  edx
 484      FF
 485              	
 486              	load: shl  eax, 10-2 ;# multiply by 256 longwords, same as 1024 bytes
 487 ???? FF350000 	    push edi ;# save EDI register, we need it for the inner interpreter loop
 487      0000
 488              	    mov  edi, eax
 489 ???? AD       	    drop ;# block number from data stack
 490              	inter: mov  edx, [edi*4] ;# get next longword from block
 491              	    inc  edi ;# then point to the following one
 492 ???? 83250000 	    and  edx, 017 ;# get only low 4 bits, the type tag
 492      00000F
 493 ???? E8030000 	    call spaces[edx*4] ;# call the routine appropriate to this type
 493      00
 494 ???? EBF2     	    jmp  inter ;# loop till "nul" reached, which ends the loop
 495              	
 496 ???? 90       	.align 4
 497 ???? 29050000 	spaces: .long qignore, execute, num
 497      41030000 
 497      C5040000 
 498              	adefine: ;# where definitions go, either in macrod (dictionary) or forthd
 499              	.ifdef CM2001
 500 ???? AB030000 	    .long forthd ;# as found in CM2001 color.com binary
 501              	.else
 502              	    .long macrod ;# default, the macro dictionary
 503              	.endif
 504 ???? 70040000 	    .long qcompile, cnum, cshort, compile
 504      3D040000 
 504      45040000 
 504      A6040000 
 505 ???? BA040000 	    .long short_, nul, nul, nul
 505      41050000 
 505      41050000 
 505      41050000 
 506 ???? 0A040000 	    .long variable, nul, nul, nul
 506      41050000 
 506      41050000 
 506      41050000 
 507              	
 508 ???? 08040000 	lit: .long adup
 509              	.ifdef CM2001
 510 ???? 2E000000 	mk: .long 0x2e, 0x5e, 0x101028
 510      5E000000 
 510      28101000 
 511 ???? 37111000 	h: .long 0x101137
 512 ???? 9F050000 	last: .long 0x59f
 513 ???? 00000000 	class: .long 0
 514 ???? 32111000 	list: .long 0x101132, 0x10111e
 514      1E111000 
 515 ???? 2E000000 	macros: .long 0x2e
 516 ???? 67000000 	forths: .long 0x67
 517              	.else
 518              	mk: .long 0, 0, 0
 519              	h: .long 0x40000*4 ;# start compiling at 0x100000
 520              	last: .long 0
 521              	class: .long 0
 522              	list: .long 0, 0
 523              	macros: .long 0
 524              	forths: .long 0
 525              	.endif
 526              	
 527              	macro0:
 528              	    packword ";", dup, ?dup, drop, then, begin
 529              	macro1:
 530              	.ifdef CM2001
 531              	/* words are defined starting in block 24... their packed representations
 532              	/* and longword pointers are stored in these tables */
 533              	    packword swap, 0, if, -if, a, a!, 2*, "a," @, !
 534              	    packword nip, +, or, binary, and, u+, ?, over, push, pop
 535              	    packword -, for, *next, next, 0next, -next, i, *end, end, +!
 536              	    packword nop, align, or!, *, */, /mod, /, mod, 2/, time
 537              	    packword p@, p!
 538              	    ;# following that is some nonsense:
 539 ???? 000080C9 	    .long 0xc9800000 ;# hd (a valid packed word but isn't defined anywhere)
 540 ???? 11580000 	    .long 0x00005811 ;# which isn't a valid packed word
 541              	.endif
 542              	    .rept 128 - ((.-macro1)/4) .long 0; .endr ;# room for new macros
 543              	forth0:
 544              	    packword boot, warm, pause, macro, forth, c, stop, read, write, nc
 545              	    packword command, seek, ready, act, show, load, here, ?lit, "3,", "2,"
 546              	    packword "1,", ",", less, jump, accept, pad, erase, copy, mark, empt
 547              	    packword emit, digit, 2emit, ., h., h.n, cr, space, down, edit
 548              	    packword e, lm, rm, graphic, text, keyboard, debug, at, +at, xy
 549              	    packword fov, fifo, box, line, color, octant, sp, last, unpack
 550              	.ifdef MANDELBROT
 551              	    packword vframe
 552              	.endif
 553              	forth1:
 554              	.ifdef CM2001
 555              	;# now we are at address 0xacc
 556              	    packword @, !, +, */, *, /, 2/, dup, negate, min
 557              	    packword abs, max, v+, writes, reads, oadf, save, block, white, red
 558              	    packword green, blue, silver, black, screen, 5*, cf, logo, empty, dump
 559              	    packword icons, print, file, north, colors, blks, w/c, buffer, size, set
 560              	    packword cyls, put, get, .com, format
 561              	;# this brings us to address 0x12cc
 562              	.endif
 563              	    .rept 512 - ((.-forth1)/4) .long 0; .endr
 564              	macro2:
 565 ???? D7040000 	    .long semi, cdup, qdup, cdrop, then, begin
 565      EF030000 
 565      E3030000 
 565      D5030000 
 565      FE040000 
 565      00050000 
 566              	0:
 567              	.ifdef CM2001
 568              	;# slots filled starting with 0x1008d0 at 0x12e4, to 0x0552 at 0x138c.
 569 ???? D0081000 	    .long 0x1008d0, 0x1008ee, 0x100902, 0x100916, 0x10092a
 569      EE081000 
 569      02091000 
 569      16091000 
 569      2A091000 
 570 ???? 3E091000 	    .long 0x10093e, 0x10096d, 0x10097c, 0x100985, 0x1009c0
 570      6D091000 
 570      7C091000 
 570      85091000 
 570      C0091000 
 571 ???? 2B0A1000 	    .long 0x100a2b, 0x100a3a, 0x100a69, 0x100a73, 0x100a99
 571      3A0A1000 
 571      690A1000 
 571      730A1000 
 571      990A1000 
 572 ???? A80A1000 	    .long 0x100aa8, 0x100ad7, 0x100af0, 0x100b04, 0x100b18
 572      D70A1000 
 572      F00A1000 
 572      040B1000 
 572      180B1000 
 573 ???? 2C0B1000 	    .long 0x100b2c, 0x100b3b, 0x100b45, 0x100b4b, 0x100b55
 573      3B0B1000 
 573      450B1000 
 573      4B0B1000 
 573      550B1000 
 574 ???? 7A0B1000 	    .long 0x100b7a, 0x100b89, 0x100b9d, 0x100ba3, 0x100bc3
 574      890B1000 
 574      9D0B1000 
 574      A30B1000 
 574      C30B1000 
 575 ???? 2E0C1000 	    .long 0x100c2e, 0x100c3d, 0x100c57, 0x100c7c, 0x100c90
 575      3D0C1000 
 575      570C1000 
 575      7C0C1000 
 575      900C1000 
 576 ???? B80C1000 	    .long 0x100cb8, 0x100cdb, 0x100ce5, 0x100cef, 0x100cfe
 576      DB0C1000 
 576      E50C1000 
 576      EF0C1000 
 576      FE0C1000 
 577 ???? 58071000 	    .long 0x100758, 0x10076c, 0x000552
 577      6C071000 
 577      52050000 
 578              	.endif
 579              	    .rept 128 - ((.-0b)/4) .long 0; .endr
 580              	forth2:
 581 ???? 3C080000 	    .long boot, warm, pause, macro_, forth, c_, stop, readf, writef, nc_
 581      6B020000 
 581      B0020000 
 581      99030000 
 581      A6030000 
 581      02030000 
 581      0F010000 
 581      0C020000 
 581      2E020000 
 581      AA080000 
 582 ???? 5C020000 	    .long cmdf, seekf, readyf, act, show, load, here, qlit, comma3, comma2
 582      46020000 
 582      64020000 
 582      D0020000 
 582      E5020000 
 582      4E050000 
 582      00050000 
 582      01050000 
 582      D5040000 
 582      D3040000 
 583 ???? D1040000 	    .long comma1, comma, less, jump, accept, pad, erase, copy, mark, empty
 583      D0040000 
 583      26050000 
 583      42050000 
 583      570C0000 
 583      5F130000 
 583      3E080000 
 583      4F080000 
 583      03030000 
 583      04030000 
 584 ???? 5A090000 	    .long emit, edig, emit2, dot10, hdot, hdotn, cr, space, down, edit
 584      3B0E0000 
 584      9D090000 
 584      850E0000 
 584      580E0000 
 584      550E0000 
 584      6F0A0000 
 584      9C090000 
 584      5B0A0000 
 584      15120000 
 585 ???? 16120000 	    .long e, lms, rms, graphic, text1, keyboard, debug, at, pat, xy_
 585      700A0000 
 585      720A0000 
 585      19090000 
 585      DB090000 
 585      CA0A0000 
 585      6C080000 
 585      740A0000 
 585      770A0000 
 585      AB080000 
 586 ???? AC080000 	    .long fov_, fifof, box, line, color, octant, sps, last_, unpack
 586      18090000 
 586      FD090000 
 586      EC090000 
 586      C5080000 
 586      7A0A0000 
 586      AD080000 
 586      AE080000 
 586      B10E0000 
 587              	.ifdef MANDELBROT
 588              	    .long vframe
 589              	.endif
 590              	0:
 591              	.ifdef CM2001
 592              	;# in the CM2001 color.com object file, there are 45 entries, starting
 593              	;# 45 entries, from 0x100d12 at 0x15d0 to 0x1008c1 at 0x1680.
 594 ???? 120D1000 	    .long 0x100d12, 0x100d1a, 0x100d26, 0x100d2c, 0x100d37
 594      1A0D1000 
 594      260D1000 
 594      2C0D1000 
 594      370D1000 
 595 ???? 3E0D1000 	    .long 0x100d3e, 0x100d4d, 0x100d50, 0x100d56, 0x100d5e
 595      4D0D1000 
 595      500D1000 
 595      560D1000 
 595      5E0D1000 
 596 ???? 6F0D1000 	    .long 0x100d6f, 0x100d79, 0x100d88, 0x100d94, 0x100da6
 596      790D1000 
 596      880D1000 
 596      940D1000 
 596      A60D1000 
 597 ???? B80D1000 	    .long 0x100db8, 0x100db8, 0x100ddc, 0x100ded, 0x100dfc
 597      B80D1000 
 597      DC0D1000 
 597      ED0D1000 
 597      FC0D1000 
 598 ???? 0B0E1000 	    .long 0x100e0b, 0x100e1a, 0x100e29, 0x100e38, 0x100e47
 598      1A0E1000 
 598      290E1000 
 598      380E1000 
 598      470E1000 
 599 ???? 740E1000 	    .long 0x100e74, 0x100e8e, 0x100f1a, 0x100fc4, 0x100fce
 599      8E0E1000 
 599      1A0F1000 
 599      C40F1000 
 599      CE0F1000 
 600 ???? DD0F1000 	    .long 0x100fdd, 0x100fec, 0x100ffb, 0x10100a, 0x101019
 600      EC0F1000 
 600      FB0F1000 
 600      0A101000 
 600      19101000 
 601 ???? 28101000 	    .long 0x101028, 0x101039, 0x101044, 0x10104f, 0x10107d
 601      39101000 
 601      44101000 
 601      4F101000 
 601      7D101000 
 602 ???? A5101000 	    .long 0x1010a5, 0x1010d3, 0x1010f5, 0x101119, 0x1008c1
 602      D3101000 
 602      F5101000 
 602      19111000 
 602      C1081000 
 603              	.endif
 604              	    .rept 512 - ((.-0b)/4) .long 0; .endr ;# room for new definitions
 605              	
 606              	boot: mov  al, 0x0fe ;# reset
 607              	    out  0x64, al
 608 ???? EBFE     	    jmp  .
 609              	
 610              	erase:
 611              	    mov  ecx, eax
 612              	    shl  ecx, 8
 613 ???? AD       	    drop
 614 ???? FF350000 	    push edi
 614      0000
 615              	    mov  edi, eax
 616              	    shl  edi, 2+8
 617              	    xor  eax, eax
 618 ???? F3AB     	    rep stosd
 619 ???? 8F050000 	    pop edi
 619      0000
 620 ???? AD       	    drop
 621 ???? C3       	    ret
 622              	
 623              	;# copy block from blk to block number at top-of-stack (in EAX)
 624 ???? 833D0000 	copy: cmp  eax, 12 ;# can't overwrite machine-code blocks...
 624      00000C
 625 ???? 0F8204FB 	    jc   abort1 ;# so if we're asked to, abort the operation
 625      FFFF
 626              	    mov  edi, eax ;# get block number into EDI
 627              	    shl  edi, 2+8 ;# multiply by 1024 to get physical (byte) address
 628 ???? FF350000 	    push esi  ;# save data stack pointer so we can use it for block move
 628      0000
 629              	    mov  esi, blk ;# get current block number from blk
 630              	    shl  esi, 2+8 ;# multiply by 1024 to get address
 631              	    mov  ecx, 256 ;# 256 longwords = 1024 bytes
 632 ???? F3A5     	    rep movsd ;# move the block from source (ESI) to destination (EDI)
 633 ???? 8F050000 	    pop  esi  ;# restore data stack pointer
 633      0000
 634              	    mov  blk, eax ;# destination block becomes new current block (blk)
 635 ???? AD       	    drop ;# no longer need the block number
 636 ???? C3       	    ret
 637              	
 638 ???? C7059608 	debug: mov dword ptr  xy,  offset (3*0x10000+(vc-2)*ih+3)
 638      0000B502 
 638      0300
 639              	    dup_
 640              	    mov  eax, god
 641 ???? FF350000 	    push [eax]
 641      0000
 642 ???? E8E50500 	    call dot
 642      00
 643              	    dup_
 644 ???? 8F050000 	    pop  eax
 644      0000
 645 ???? E8DA0500 	    call dot
 645      00
 646              	    dup_
 647              	    mov  eax, main
 648 ???? E8D50500 	    call dot
 648      00
 649              	    dup_
 650              	    mov  eax, esi
 651 ???? E9D00500 	    jmp  dot
 651      00
 652              	
 653              	.equ iw, 16+6 ;# icon width, including 6 pixels padding
 654              	.equ ih, 24+6 ;# icon height, including padding
 655              	.equ hc, hp/iw ;# 46 ;# number of horizontal characters on screen
 656              	.equ vc, vp/ih ;# 25 ;# number of vertical characters
 657              	;# MASM's 3-byte NOP for alignment is 2e8bc0, cs: mov eax,eax
 658              	;# whereas gas's is 8d7600, lea esi,[esi].
 659              	.ifdef CM2001
 660              	     cs mov eax, eax
 661 ???? E5023D03 	xy: .long 0x033d02e5
 662 ???? 03000000 	lm: .long 3
 663 ???? F4030000 	rm: .long hc*iw
 664 ???? 03000300 	xycr: .long 3*0x10000+3
 665 ???? 004B0000 	fov: .long 10*(2*vp+vp/2)
 666              	.else
 667              	.align 4 
 668              	xy: .long 3*0x10000+3 ;# 3 pixels padding on each side of icons
 669              	lm: .long 3
 670              	rm: .long hc*iw ;# 1012
 671              	xycr: .long 0
 672              	fov: .long 10*(2*vp+vp/2)
 673              	.endif
 674              	
 675              	nc_: dup_
 676              	    mov  eax, (offset nc-offset start)/4
 677 ???? C3       	    ret
 678              	
 679              	xy_: dup_
 680              	    mov  eax, (offset xy-offset start)/4
 681 ???? C3       	    ret
 682              	
 683              	fov_: dup_
 684              	    mov  eax, (offset fov-offset start)/4
 685 ???? C3       	    ret
 686              	
 687              	sps: dup_
 688              	    mov  eax, (offset spaces-offset start)/4
 689 ???? C3       	    ret
 690              	
 691              	last_: dup_
 692              	    mov  eax, (offset last-offset start)/4
 693 ???? C3       	    ret
 694              	
 695              	.include "gen.asm" ;# cce.asm pio.asm ati128.asm ati64.asm gen.asm
   1              	.intel_syntax ;#generic graphics
   2              	
   3              	;# VESA mode numbers and screen sizes,
   4              	;# from http://www.mat.univie.ac.at/~gerald/laptop/vesafb.txt
   5              	;#    | 640x480  800x600  1024x768 1280x1024
   6              	;#----+-------------------------------------
   7              	;#256 |  0x101    0x103    0x105    0x107   
   8              	;#32k |  0x110    0x113    0x116    0x119   
   9              	;#64k |  0x111    0x114    0x117    0x11A   
  10              	;#16M |  0x112    0x115    0x118    0x11B   
  11 ???? 90       	.align 4
  12              	;# top of RAM is 0x2000000 with 32 megs; framebuffer is just below this
  13              	;# multiply vp (vertical pixels) by hp (horizontal pixels) by 2 bytes (16 bits)
  14              	;# to determine the location of the framebuffer
  15 ???? 0000E801 	frame: .long 0x2000000-hp*vp*2 ;# 32 m
  16              	.ifdef AGP ;# match CM2001 color.com binary
  17 ???? 000000F5 	displ: .long 0x0f5000000
  18 ???? C0F70000 	fore:  .long 0x0f7c0 ;# foreground color, low-brightness yellow
  19 ???? 27030000 	xc:    .long 0x0327
  20 ???? E5020000 	yc:    .long 0x02e5
  21              	.else
  22              	displ: .long 0x0f0000000 ;# fujitsu (physical address of video memory)
  23              	fore:  .long 0x0f7de ;# less-brightness white (silver) in 565 color mode
  24              	xc:    .long 0
  25              	yc:    .long 0
  26              	.endif
  27              	
  28              	rgb: ;# change 8:8:8 bit format to 5:6:5
  29              	    ror  eax, 8 ;# rotate blue bits into upper word
  30              	    shr  ax, 2 ;# drop two low bits of green
  31              	    ror  eax, 6 ;# rotate green into upper word, leaving only red in AX
  32              	    shr  al, 3 ;# drop low 3 bits of red
  33              	    rol  eax, 6+5 ;# now rrrrrggggggbbbbb
  34              	    and  eax, 0b1111011111011110 ;# remove low bit of each color
  35 ???? C3       	    ret
  36              	
  37              	white: dup_
  38              	    mov  eax, 0x0ffffff ;# 8:8:8 rgb, full brightness
  39 ???? E8FAFFFF 	color: call rgb ;# change to 5:6:5 bit format
  39      FF
  40              	    mov  fore, eax
  41 ???? AD       	    drop
  42 ???? C3       	    ret
  43              	
  44              	.ifdef AGP ;# from CM's 2001 version at colorforth.com
  45              	north: mov  edx, 0x0cf8
  46              	    out  dx, eax
  47 ???? 83050000 	    add  edx, 4
  47      000004
  48              	    in   eax, dx
  49 ???? C3       	    ret
  50              	
  51              	dev: mov  eax, 0x80001008 ;# find display, start at device 2
  52              	    mov  ecx, 31-1 ;# .end with agp: 10008, bus 1, dev 0
  53              	0:  dup_
  54 ???? E8F3FFFF 	    call north
  54      FF
  55              	    and  eax, 0x0ff000000
  56              	    cmp  eax, 0x3000000
  57 ???? AD       	    drop
  58 ???? 7402     	    jz   0f
  59              	    add  eax, 0x800
  60 ???? 75F6     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
  61 ???? C3       	0:  ret
  62              	
  63 ???? E8F0FFFF 	ati0: call dev
  63      FF
  64 ???? 830DFCFF 	    or   dword ptr [eax-4], 2 ;# enable memory
  64      FFFF02
  65 ???? 83050000 	    add  al, 0x24-8 ;# look for prefetch
  65      00001C
  66              	    mov  cl, 5
  67              	0:  dup_
  68 ???? E8D5FFFF 	    call north
  68      FF
  69 ???? 83350000 	    xor  al, 8
  69      000008
  70 ???? 7416     	    jz   0f
  71 ???? AD       	    drop
  72 ???? 832D0000 	    sub  eax, 4
  72      000004
  73 ???? 75E8     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
  74              	    dup_
  75 ???? E8BDFFFF 	    call north
  75      FF
  76 ???? 83250000 	    and  eax, 0x0fffffff0
  76      0000F0
  77              	0:  mov  displ, eax
  78 ???? AD       	    drop
  79 ???? C3       	    ret
  80              	.endif ;# AGP 
  81              	
  82 ???? AD       	fifof: drop
  83 ???? C3       	graphic: ret
  84              	
  85              	switch: ;# refresh screen, then switch tasks
  86 ???? FF350000 	    push esi
  86      0000
  87              	    mov  esi, frame ;# source address, framebuffer
  88 ???? FF350000 	    push edi
  88      0000
  89              	    mov  edi, displ ;# destination, linear memory of video controller
  90              	    mov  ecx, hp*vp/2 ;# number of 16-bits pixels, divided by 2 for dword movs
  91 ???? F3A5     	    rep  movsd ;# from buffer into video RAM
  92 ???? 8F050000 	    pop  edi
  92      0000
  93 ???? 8F050000 	    pop  esi
  93      0000
  94 ???? E977F9FF 	0:  jmp  pause ;# switch task
  94      FF
  95              	
  96              	clip:
  97              	    mov edi, xy
  98              	    mov  ecx, edi
  99              	    test cx, cx
 100 ???? 7900     	    jns  0f
 101              	    xor  ecx, ecx
 102              	0:  and  ecx, 0x0ffff
 103              	    mov  yc, ecx
 104              	    imul ecx, hp*2
 105              	    sar  edi, 16
 106 ???? 7900     	    jns  0f
 107              	    xor  edi, edi
 108              	0:  mov  xc, edi
 109              	    lea  edi, [edi*2+ecx]
 110              	    add  edi, frame
 111 ???? C3       	    ret
 112              	
 113 ???? 66AD     	bit16: lodsw
 114              	    xchg al, ah
 115              	    mov  ecx, 16
 116              	b16: shl  ax, 1
 117 ???? 7300     	    jnc  0f
 118              	    mov  [edi], dx
 119 ???? 83050000 	0:  add  edi, 2
 119      000002
 120 ???? 75F5     	    next b16
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 121 ???? C3       	    ret
 122              	
 123 ???? 66AD     	bit32: lodsw
 124              	    xchg al, ah
 125              	    mov  ecx, 16
 126              	b32: shl  eax, 1
 127 ???? 7300     	    jnc  0f
 128              	    mov  [edi], dx
 129              	    mov  [edi+2], dx
 130              	    mov  [edi+hp*2], dx
 131              	    mov  [edi+hp*2+2], dx
 132 ???? 83050000 	0:  add  edi, 4
 132      000004
 133 ???? 75F5     	    next b32
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 134 ???? C3       	    ret
 135              	
 136              	emit: ;# paint a character on the screen
 137 ???? E80E0100 	    call qcr ;# issue CRLF if at end of line
 137      00
 138 ???? FF350000 	    push esi ;# save registers we need...
 138      0000
 139 ???? FF350000 	    push edi
 139      0000
 140 ???? FF350000 	    push edx
 140      0000
 141              	    imul eax, 16*24/8 ;# index into icon table...
 142              	    lea  esi, icons[eax] ;# point to the bit-representation of this character
 143 ???? E8C3FFFF 	    call clip
 143      FF
 144              	    mov  edx, fore ;# get foreground color into EDX
 145              	    mov  ecx, 24
 146 ???? FF350000 	0:  push ecx
 146      0000
 147 ???? E8BDFFFF 	    call bit16
 147      FF
 148              	    add  edi, (hp-16)*2
 149 ???? 8F050000 	    pop  ecx
 149      0000
 150 ???? 75ED     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 151 ???? 8F050000 	    pop  edx ;# restore registers...
 151      0000
 152 ???? 8F050000 	    pop  edi
 152      0000
 153 ???? 8F050000 	    pop  esi
 153      0000
 154 ???? AD       	bl_: drop
 155              	space:
 156              	    add dword ptr xy, iw*0x10000
 157 ???? C3       	    ret
 158              	
 159 ???? FF350000 	emit2: push esi
 159      0000
 160 ???? FF350000 	    push edi
 160      0000
 161 ???? FF350000 	    push edx
 161      0000
 162              	    imul eax, 16*24/8
 163              	    lea  esi, icons[eax]
 164 ???? E885FFFF 	    call clip
 164      FF
 165              	    mov  edx, fore
 166              	    mov  ecx, 24
 167 ???? FF350000 	0:  push ecx
 167      0000
 168 ???? E88DFFFF 	    call bit32
 168      FF
 169              	    add  edi, (2*hp-16*2)*2
 170 ???? 8F050000 	    pop  ecx
 170      0000
 171 ???? 75ED     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 172 ???? 8F050000 	    pop  edx
 172      0000
 173 ???? 8F050000 	    pop  edi
 173      0000
 174 ???? 8F050000 	    pop  esi
 174      0000
 175              	    add  dword ptr xy, iw*0x10000*2
 176 ???? AD       	    drop
 177 ???? C3       	    ret
 178              	
 179 ???? E8E5FEFF 	text1: call white
 179      FF
 180 ???? C7059A08 	    mov  dword ptr lm, 3
 180      00000300 
 180      0000
 181              	    mov  dword ptr rm, hc*iw
 182 ???? EB79     	    jmp  top
 183              	
 184 ???? E848FFFF 	line: call clip
 184      FF
 185              	    mov  ecx, [esi]
 186              	    shl  ecx, 1
 187              	    sub  edi, ecx
 188              	    mov  ecx, eax
 189              	    mov  eax, fore
 190 ???? F366AB   	    rep stosw
 191 ???? FF059608 	    inc dword ptr xy
 191      0000
 192 ???? AD       	    drop
 193 ???? AD       	    drop
 194 ???? C3       	    ret
 195              	
 196              	box: ;# draw a box and fill with foreground color
 197 ???? E837FFFF 	    call clip
 197      FF
 198              	    cmp  eax, vp+1 ;# past vertical end of screen?
 199 ???? 7800     	    js   0f ;# continue if not
 200              	    mov  eax, vp ;# else set vertical parameter to end of screen
 201              	0:  mov  ecx, eax
 202              	    sub  ecx, yc
 203 ???? 7E15     	    jng  no
 204              	    cmp  dword ptr [esi], hp+1
 205 ???? 7800     	    js   0f
 206              	    mov  dword ptr [esi], hp
 207              	0:  mov  eax, xc
 208              	    sub  [esi], eax
 209 ???? 7E11     	    jng  no
 210              	    mov  edx, hp
 211              	    sub  edx, [esi]
 212              	    shl  edx, 1
 213              	    mov  eax, fore
 214 ???? FF350000 	0:  push ecx
 214      0000
 215              	    mov  ecx, [esi]
 216 ???? F366AB   	    rep stosw
 217              	    add  edi, edx
 218 ???? 8F050000 	    pop  ecx
 218      0000
 219 ???? 75EF     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 220 ???? AD       	no: drop
 221 ???? AD       	    drop
 222 ???? C3       	    ret
 223              	.ifdef MANDELBROT
 224              	vframe:
 225              	    mov eax, frame
 226              	    dup_
 227              	    ret
 228              	.endif
 696              	
 697              	.equ yellow, 0xffff00 ;# RG0 is yellow
 698              	cyan: dup_
 699              	    mov  eax, 0x00ffff ;# 0GB is cyan
 700 ???? E9A2FEFF 	    jmp  color
 700      FF
 701              	magenta: dup_
 702              	    mov  eax, 0xff00ff ;# R0B is magenta
 703 ???? E99DFEFF 	    jmp  color
 703      FF
 704              	silver: dup_ ;# half-brightness white
 705              	    mov  eax, 0xc0c0c0 ;# rgb, 4 bits of each
 706 ???? E998FEFF 	    jmp  color
 706      FF
 707              	blue: dup_
 708              	    mov  eax, 0x4040ff ;# a little r and g to make it brighter
 709 ???? E993FEFF 	    jmp  color
 709      FF
 710              	red: dup_
 711              	    mov  eax, 0xff0000 ;# pure red
 712 ???? E98EFEFF 	    jmp  color
 712      FF
 713              	green: dup_
 714              	    mov  eax, 0x8000ff00 ;# what's that 0x80 for?
 715 ???? E989FEFF 	    jmp  color
 715      FF
 716              	
 717              	history:
 718              	.ifdef CM2001
 719 ???? 00000000 	    .byte 0, 0, 0, 0, 0, 0, 0, 37, 10, 3, 9
 719      00000025 
 719      0A0309
 720              	.else
 721              	    .rept 11 .byte 0; .endr
 722              	.endif
 723 ???? FF350000 	echo_: push esi
 723      0000
 724              	    mov  ecx, 11-1
 725              	    lea  edi, history
 726              	    lea  esi, [1+edi]
 727 ???? F3A4     	    rep  movsb
 728 ???? 8F050000 	    pop  esi
 728      0000
 729              	    mov  history+11-1, al
 730 ???? AD       	    drop
 731 ???? C3       	    ret
 732              	
 733              	right: dup_
 734              	    mov  ecx, 11
 735              	    lea  edi, history
 736              	    xor  eax, eax
 737 ???? F3AA     	    rep  stosb
 738 ???? AD       	    drop
 739 ???? C3       	    ret
 740              	
 741              	down: dup_
 742              	    xor  edx, edx
 743              	    mov  ecx, ih
 744              	    div  ecx
 745              	    mov  eax, edx
 746              	    add  edx, 3*0x10000+0x8000-ih+3
 747              	    mov  xy, edx
 748              	zero: test eax, eax
 749              	    mov  eax, 0
 750 ???? 7500     	    jnz  0f
 751              	    inc  eax
 752 ???? C3       	0:  ret
 753              	
 754              	blank: dup_
 755              	    xor  eax, eax
 756              	    mov  xy, eax
 757 ???? E862FEFF 	    call color
 757      FF
 758              	    dup_
 759              	    mov  eax, hp
 760              	    dup_
 761              	    mov  eax, vp
 762 ???? EB98     	    jmp  box
 763              	
 764              	top: mov  ecx, lm
 765              	    shl  ecx, 16
 766 ???? 83050000 	    add  ecx, 3
 766      000003
 767              	    mov  xy, ecx
 768              	    mov  xycr, ecx
 769 ???? C3       	    ret
 770              	
 771              	;# insert a carriage return if at end of line
 772              	qcr: mov  cx, word ptr xy+2
 773              	    cmp  cx, word ptr rm
 774 ???? 7800     	    js   0f
 775              	;# insert a carriage return (drop to next line)
 776              	cr: mov  ecx, lm
 777              	    shl  ecx, 16
 778              	    mov  cx, word ptr xy
 779              	    add  ecx, ih
 780              	    mov  xy, ecx
 781 ???? C3       	0:  ret
 782              	
 783              	lms: mov  lm, eax
 784 ???? AD       	    drop
 785 ???? C3       	    ret
 786              	
 787              	rms: mov  rm, eax
 788 ???? AD       	    drop
 789 ???? C3       	    ret
 790              	
 791              	at: mov  word ptr xy, ax
 792 ???? AD       	    drop
 793              	    mov  word ptr xy+2, ax
 794 ???? AD       	    drop
 795 ???? C3       	    ret
 796              	
 797              	pat: add  word ptr xy, ax
 798 ???? AD       	    drop
 799              	    add  word ptr xy+2, ax
 800 ???? AD       	    drop
 801 ???? C3       	    ret
 802              	
 803              	octant: dup_
 804              	    mov  eax, 0x43 ;# poly -last y+ x+ ;0x23 ; last y+ x+
 805              	    mov  edx, [4+esi]
 806              	    test edx, edx
 807 ???? 7907     	    jns  0f
 808              	    neg  edx
 809              	    mov  [4+esi], edx
 810 ???? 83350000 	    xor  al, 1
 810      000001
 811              	0:  cmp  edx, [esi]
 812 ???? 7907     	    jns  0f
 813 ???? 83350000 	    xor  al, 4
 813      000004
 814 ???? C3       	0:  ret
 815              	
 816              	;# keyboard
 817              	;# display one line of the onscreen keyboard (eight icons)
 818              	;# four chars at addr+12, space, four chars at addr.
 819              	;# IN: edi = addr-4
 820              	;# OUT: edi = addr
 821 ???? 83050000 	eight: add  edi, 12
 821      00000C
 822 ???? E80C0000 	    call four
 822      00
 823 ???? E8FEFEFF 	    call space
 823      FF
 824 ???? 832D0000 	    sub  edi, 16
 824      000010
 825              	four: mov  ecx, 4
 826              	;# display ECX chars from EDI+4, incrementing EDI with each char.
 827 ???? FF350000 	four1: push ecx
 827      0000
 828              	    dup_
 829              	    xor  eax, eax
 830              	    mov  al, [4+edi]
 831              	    inc  edi
 832 ???? E8AAFEFF 	    call emit
 832      FF
 833 ???? 8F050000 	    pop  ecx
 833      0000
 834 ???? 75ED     	    next four1
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 835 ???? C3       	    ret
 836              	
 837              	stack: mov  edi, godd-4
 838              	0:  mov  edx, god
 839              	    cmp  [edx], edi
 840 ???? 730E     	    jnc  0f
 841              	    dup_
 842              	    mov  eax, [edi]
 843 ???? 832D0000 	    sub  edi, 4
 843      000004
 844 ???? E8B50300 	    call qdot
 844      00
 845 ???? EBF0     	    jmp  0b
 846 ???? C3       	0:  ret
 847              	
 848 ???? E80CFFFF 	keyboard: call text1
 848      FF
 849              	    mov  edi, board
 850              	    dup_
 851              	    mov  eax, keyc
 852 ???? E8F1FDFF 	    call color
 852      FF
 853              	    mov dword ptr  rm, hc*iw
 854              	    mov dword ptr  lm, hp-9*iw+3
 855              	    mov dword ptr  xy, (hp-9*iw+3)*0x10000+vp-4*ih+3
 856 ???? E8B4FFFF 	    call eight
 856      FF
 857 ???? E8AFFFFF 	    call eight
 857      FF
 858 ???? E8AAFFFF 	    call eight
 858      FF
 859 ???? E887FFFF 	    call cr
 859      FF
 860              	    add dword ptr  xy, 4*iw*0x10000
 861              	    mov  edi, shift
 862 ???? 83050000 	    add  edi, 4*4-4
 862      00000C
 863              	    mov  ecx, 3
 864 ???? E8B1FFFF 	    call four1
 864      FF
 865 ???? C7059A08 	    mov dword ptr  lm, 3
 865      00000300 
 865      0000
 866 ???? 66C70598 	    mov  word ptr xy+2, 3
 866      08000003 
 866      00
 867 ???? E8ADFFFF 	    call stack
 867      FF
 868              	    mov  word ptr xy+2, hp-(11+9)*iw+3
 869              	    lea  edi, history-4
 870              	    mov  ecx, 11
 871 ???? EB97     	    jmp  four1
 872              	
 873 ???? 0D0A010C 	alpha: .byte 015, 012,  1 , 014
 874 ???? 14020608 	    .byte 024,  2 ,  6 , 010
 875 ???? 13090F11 	    .byte 023, 011, 017, 021
 876 ???? 120B0E07 	    .byte 022, 013, 016,  7
 877 ???? 05030416 	    .byte  5 ,  3 ,  4 , 026
 878 ???? 17241510 	    .byte 027, 044, 025, 020
 879 ???? 191A1B00 	graphics: .byte 031, 032, 033, 0 ;# 1 2 3
 880 ???? 1C1D1E18 	    .byte 034, 035, 036, 030 ;# 4 5 6 0
 881 ???? 1F20212F 	    .byte 037, 040, 041, 057 ;# 7 8 9 ?
 882 ???? 29282A2C 	    .byte 051, 050, 052, 054 ;# : ; ! @
 883 ???? 2622252E 	    .byte 046, 042, 045, 056 ;# z j . ,
 884 ???? 2D272B23 	    .byte 055, 047, 053, 043 ;# * / + -
 885 ???? 191A1B00 	numbers: .byte 031, 032, 033, 0 ;# 1 2 3
 886 ???? 1C1D1E18 	    .byte 034, 035, 036, 030 ;# 4 5 6 0
 887 ???? 1F202100 	    .byte 037, 040, 041,  0  ;# 7 8 9 ?
 888 ???? 00000000 	    .byte  0,   0 ,  0 ,  0
 889 ???? 00000000 	    .byte  0,   0 ,  0 ,  0
 890 ???? 00000000 	    .byte  0,   0 ,  0 ,  0
 891 ???? 191A1B00 	octals: .byte 031, 032, 033, 0 ;# 1 2 3
 892 ???? 1C1D1E18 	    .byte 034, 035, 036, 030 ;# 4 5 6 0
 893 ???? 1F202100 	    .byte 037, 040, 041,  0  ;# 7 8 9
 894 ???? 0005130A 	    .byte  0 ,  5 , 023, 012
 895 ???? 0010040E 	    .byte  0 , 020,  4 , 016
 896 ???? 00000000 	    .byte  0 ,  0 ,  0 ,  0
 897              	letter:
 898 ???? 833D0000 	    cmp  al, 4
 898      000004
 899 ???? 7800     	    js   0f
 900              	    mov  edx, board
 901              	    mov  al, [edx][eax]
 902 ???? C3       	0:  ret
 903              	
 904 ???? 10111213 	keys: .byte 16, 17, 18, 19,  0,  0,  4,  5 ;# 20
 904      00000405 
 905 ???? 06070000 	    .byte  6,  7,  0,  0,  0,  0, 20, 21
 905      00001415 
 906 ???? 16170000 	    .byte 22, 23,  0,  0,  8,  9, 10, 11 ;# 40
 906      08090A0B 
 907 ???? 00000000 	    .byte  0,  0,  0,  0, 24, 25, 26, 27
 907      18191A1B 
 908 ???? 00010C0D 	    .byte  0,  1, 12, 13, 14, 15,  0,  0 ;# 60 n
 908      0E0F0000 
 909 ???? 0302     	    .byte  3,  2 ;# alt space
 910              	
 911              	key: ;# loop forever, returning keyhits when available
 912              	/* the original CM2001 version uses this as the multitasking loop,
 913              	/* by calling 'pause' each time through the loop. this is what enables
 914              	/* the constant screen refresh, which causes significant delays in
 915              	/* keystroke processing under Bochs. */
 916              	    dup_             ;# save copy of return stack pointer(?)
 917              	    xor  eax, eax    ;# used as index later, so clear it
 918 ???? E809F7FF 	0:  call pause       ;# give other task a chance to run
 918      FF
 919              	    in   al, 0x64    ;# keyboard status port
 920              	    test al, 1       ;# see if there is a byte waiting
 921 ???? 74F9     	    jz   0b          ;# if not, loop
 922              	    in   al, 0x60    ;# fetch the scancode
 923              	    test al, 0xf0    ;# top row of keyboard generates scancodes < 0x10
 924 ???? 74F7     	    jz   0b          ;# we don't use that row (the numbers row), so ignore it
 925 ???? 833D0000 	    cmp  al, 58      ;# 57, right shift, is the highest scancode we use
 925      00003A
 926 ???? 73EE     	    jnc  0b          ;# so if it's over, ignore that too
 927              	    /* since we're ignoring scancodes less than 0x10, we subtract that
 928              	    /* before indexing into the table, that way the table doesn't have
 929              	    /* to have 16 wasted bytes */
 930              	    mov  al, [keys-0x10+eax] ;# index into key table
 931 ???? C3       	    ret
 932              	
 933 ???? 8D7600   	.align 4
 934              	;# layouts for the thumb (shift) keys
 935              	;# these sort of go in pairs:
 936              	;# foo0 is for the first character of a word
 937              	;# foo1 is used for the rest
 938 ???? 540C0000 	graph0: .long nul0, nul0, nul0, alph0
 938      540C0000 
 938      540C0000 
 938      DD0D0000 
 939 ???? 00000500 	    .byte  0 ,  0 ,  5 , 0 ;#     a
 940 ???? 0F0D0000 	graph1: .long word0, x, lj, alph
 940      BE0C0000 
 940      A40C0000 
 940      F90D0000 
 941 ???? 15250500 	    .byte 025, 045,  5 , 0 ;# x . a
 942 ???? 540C0000 	alpha0: .long nul0, nul0, number, star0
 942      540C0000 
 942      990D0000 
 942      E90D0000 
 943 ???? 00212D00 	    .byte  0 , 041, 055, 0 ;#   9 *
 944 ???? 0F0D0000 	alpha1: .long word0, x, lj, graph
 944      BE0C0000 
 944      A40C0000 
 944      050E0000 
 945 ???? 15252D00 	    .byte 025, 045, 055, 0 ;# x . *
 946 ???? 540C0000 	numb0: .long nul0, minus, alphn, octal
 946      940D0000 
 946      DC0D0000 
 946      550D0000 
 947 ???? 23050E00 	    .byte 043,  5 , 016, 0 ;# - a f
 948 ???? 960D0000 	numb1: .long number0, xn, endn, number0
 948      6E0D0000 
 948      D00D0000 
 948      960D0000 
 949 ???? 15250000 	    .byte 025, 045,  0 , 0 ;# x .
 950              	
 951 ???? 0A0B0000 	board: .long alpha-4
 952              	.ifdef CM2001
 953 ???? F40B0000 	shift: .long alpha1
 954 ???? 0A000000 	base: .long 10
 955 ???? 170D0000 	current: .long decimal
 956 ???? 00FFFF00 	keyc: .long yellow
 957 ???? 05000000 	chars: .long 5
 958 ???? 28030000 	aword: .long ex1
 959 ???? 41050000 	anumber: .long nul
 960 ???? 00000000 	words: .long 0
 961              	.else
 962              	shift: .long alpha0
 963              	base: .long 10
 964              	current: .long decimal
 965              	keyc: .long yellow
 966              	chars: .long 1
 967              	aword: .long ex1
 968              	anumber: .long nul
 969              	words: .long 1
 970              	.endif
 971              	
 972 ???? AD       	nul0: drop
 973 ???? EB0A     	    jmp  0f
 974              	accept:
 975 ???? C705340C 	acceptn: mov dword ptr  shift, offset alpha0
 975      0000E00B 
 975      0000
 976              	    lea  edi, alpha-4
 977              	accept1: mov  board, edi
 978 ???? E83CFFFF 	0:  call key
 978      FF
 979 ???? 833D0000 	    cmp  al, 4
 979      000004
 980 ???? 0F89A101 	    jns  first
 980      0000
 981              	    mov  edx, shift
 982 ???? FF250000 	    jmp  dword ptr [edx+eax*4]
 982      0000
 983              	
 984              	bits: ;# number of bits available in word for packing more Huffman codes
 985              	.ifdef CM2001
 986 ???? 07       	   .byte 7 ;# matches CM2001 color.com binary
 987              	.else
 988              	   .byte 28
 989              	.endif
 990              	/* for reference, Huffman codes are in groups of 8, the prefixes being:
 991              	  0xxx, 10xxx, 1100xxx, 1101xxx, 1110xxx, 1111xxx
 992              	  "pack" packs one letter (character code at a time, 
 993              	  into a Huffman-coded word at [ESI] (stack item) */
 994 ???? 83050000 	0:  add  eax, 0b01010000 ;# make 0b00010000 into 0b01100000, high 2 bits set
 994      000050
 995              	    mov  cl, 7 ;# this is a 7-bit Huffman code
 996 ???? EB12     	    jmp  0f ;# continue below
 997 ???? 833D0000 	pack: cmp  al, 0b00010000 ;# character code greater than 16?
 997      000010
 998 ???? 73EE     	    jnc  0b ;# if so, it's a 7-bitter, see above
 999              	    mov  cl, 4 ;# otherwise assume it's a 4-bit code
 1000              	    test al, 0b00001000 ;# character code more than 7?
 1001 ???? 7407     	    jz   0f ;# if so, it's a 5-bit Huffman code
 1002              	    inc  ecx ;# make the 4 into a 5
 1003 ???? 83350000 	    xor  al, 0b00011000 ;# and change prefix to 10xxx
 1003      000018
 1004              	;# common entry point for 4, 5, and 7-bit Huffman codes
 1005              	0:  mov  edx, eax ;# copy Huffman code into EDX
 1006              	    mov  ch, cl ;# copy Huffman-code bitcount into 8-bit CH register
 1007              	0:  cmp  bits, cl ;# do we have enough bits left in the word?
 1008 ???? 7304     	    jnc  0f  ;# if so, continue on
 1009              	    shr  al, 1 ;# low bit of character code set?
 1010 ???? 7212     	    jc   full ;# if so, word is full, need to start an extension word instead
 1011              	    dec  cl  ;# subtract one from bitcount
 1012 ???? EBFA     	    jmp  0b ;# keep going; as long as we don't find any set bits, it'll fit
 1013              	0:  shl  dword ptr [esi], cl ;# shift over just the amount of bits necessary
 1014              	    xor  [esi], eax ;# 'or' or 'add' would have worked as well (and clearer?)
 1015              	    sub  bits, cl ;# reduce remaining bitcount by what we just used
 1016 ???? C3       	    ret
 1017              	
 1018              	;# left-justification routine packs Huffman codes into the MSBs of the word
 1019              	lj0: mov  cl, bits ;# bits remaining into CL register
 1020 ???? 83050000 	    add  cl, 4 ;# add to that the 4 reserved bits for type tag
 1020      000004
 1021              	    shl  dword ptr [esi], cl ;# shift packed word into MSBs
 1022 ???? C3       	    ret
 1023              	
 1024              	;# this is just the high-level entry point to the above routine
 1025 ???? E8F3FFFF 	lj: call lj0
 1025      FF
 1026 ???? AD       	    drop
 1027 ???? C3       	    ret
 1028              	
 1029              	;# the packed word is full, so finish processing
 1030 ???? E8ECFFFF 	full: call lj0 ;# left-justify the packed word
 1030      FF
 1031 ???? FF05500C 	    inc dword ptr words ;# bump the count
 1031      0000
 1032 ???? C605790C 	    mov byte ptr bits, 32-4 ;# reset bit count, still saving 4 bits for tag
 1032      00001C
 1033              	;# we were processing a character when we found the word full, so add it in
 1034              	    sub  bits, ch ;# subtract saved bitcount of this Huffman code
 1035              	    mov  eax, edx ;# restore top-of-stack with partial packed word
 1036              	    dup_
 1037 ???? C3       	    ret
 1038              	
 1039 ???? E894FDFF 	x:  call right
 1039      FF
 1040              	    mov  eax, words
 1041              	    lea  esi, [eax*4+esi]
 1042 ???? AD       	    drop
 1043 ???? EB91     	    jmp  accept
 1044              	
 1045 ???? E88CFDFF 	word_: call right
 1045      FF
 1046 ???? C705500C 	    mov dword ptr  words, 1
 1046      00000100 
 1046      0000
 1047 ???? C705440C 	    mov dword ptr  chars, 1
 1047      00000100 
 1047      0000
 1048              	    dup_
 1049 ???? C7050000 	    mov  dword ptr [esi], 0
 1049      00000000 
 1049      0000
 1050 ???? C605790C 	    mov byte ptr bits, 28
 1050      00001C
 1051 ???? E879FEFF 	word1: call letter
 1051      FF
 1052 ???? 7906     	    jns  0f
 1053              	    mov  edx, shift
 1054 ???? FF250000 	    jmp  dword ptr [edx+eax*4]
 1054      0000
 1055              	0:  test al, al
 1056 ???? 7410     	    jz   word0
 1057              	    dup_
 1058 ???? E843FDFF 	    call echo_
 1058      FF
 1059 ???? E87AFFFF 	    call pack
 1059      FF
 1060 ???? FF05440C 	    inc dword ptr  chars
 1060      0000
 1061 ???? AD       	word0: drop
 1062 ???? E88DFEFF 	    call key
 1062      FF
 1063 ???? EBD9     	    jmp  word1
 1064              	
 1065 ???? C705380C 	decimal: mov dword ptr  base, 10
 1065      00000A00 
 1065      0000
 1066 ???? C705340C 	    mov dword ptr  shift, offset numb0
 1066      0000080C 
 1066      0000
 1067 ???? C705300C 	    mov dword ptr  board, offset numbers-4
 1067      00003A0B 
 1067      0000
 1068 ???? C3       	    ret
 1069              	
 1070 ???? C705380C 	hex: mov dword ptr  base, 16
 1070      00001000 
 1070      0000
 1071 ???? C705340C 	    mov dword ptr  shift, offset numb0 ;# oct0
 1071      0000080C 
 1071      0000
 1072 ???? C705300C 	    mov dword ptr  board, offset octals-4
 1072      0000520B 
 1072      0000
 1073 ???? C3       	    ret
 1074              	
 1075 ???? 81353C0C 	octal: xor dword ptr current, (offset decimal-offset start) ^ (offset hex-offset start)
****  Error:Unrecognized token `^(offset hex-offset start)'

 1075      0000170D 
 1075      0000
 1076 ???? 80351A0C 	    xor  byte ptr numb0+18, 041 ^ 016 ;# f vs 9
****  Error:Unrecognized token `^016'

 1076      000021
 1077 ???? FF153C0C 	    call [current]
 1077      0000
 1078 ???? EB28     	    jmp  number0
 1079              	
 1080 ???? AD       	xn: drop
 1081 ???? AD       	    drop
 1082 ???? E9E2FEFF 	    jmp  acceptn
 1082      FF
 1083              	
 1084 ???? 0E0A0000 	digit: .byte 14, 10,  0,  0
 1085 ???? 00000C00 	    .byte  0,  0, 12,  0,  0,  0, 15,  0
 1085      00000F00 
 1086 ???? 0D00000B 	    .byte 13,  0,  0, 11,  0,  0,  0,  0
 1086      00000000 
 1087 ???? 00010203 	    .byte  0,  1,  2,  3,  4,  5,  6,  7
 1087      04050607 
 1088 ???? 0809     	    .byte  8,  9
 1089 ???? 00       	sign: .byte 0
 1090              	minus:
 1091              	    mov  sign, al
 1092 ???? EB2D     	    jmp  number2
 1093              	
 1094 ???? AD       	number0: drop
 1095 ???? EB0D     	    jmp  number3
 1096 ???? FF153C0C 	number: call [current]
 1096      0000
 1097 ???? C605930D 	    mov byte ptr sign, 0
 1097      000000
 1098              	    xor  eax, eax
 1099 ???? E8F7FDFF 	number3: call key
 1099      FF
 1100 ???? E8BEFDFF 	    call letter
 1100      FF
 1101 ???? 7906     	    jns  0f
 1102              	    mov  edx, shift
 1103 ???? FF250000 	    jmp  dword ptr [edx+eax*4]
 1103      0000
 1104              	0:  test al, al
 1105 ???? 74DC     	    jz   number0
 1106              	    mov  al, [digit-4+eax]
 1107 ???? F605930D 	    test byte ptr sign, 037
 1107      00001F
 1108 ???? 7400     	    jz   0f
 1109              	    neg  eax
 1110              	0:  mov  edx, [esi]
 1111              	    imul edx, base
 1112              	    add  edx, eax
 1113              	0:  mov  [esi], edx
 1114 ???? AD       	number2: drop
 1115 ???? C705340C 	    mov  dword ptr  shift, offset numb1
 1115      00001C0C 
 1115      0000
 1116 ???? EBD6     	    jmp  number3
 1117              	
 1118 ???? AD       	endn: drop
 1119 ???? FF154C0C 	    call [anumber]
 1119      0000
 1120 ???? E97BFEFF 	    jmp  acceptn
 1120      FF
 1121              	
 1122 ???? AD       	alphn: drop
 1123 ???? C705340C 	alph0: mov dword ptr  shift, offset alpha0
 1123      0000E00B 
 1123      0000
 1124              	    lea  edi, alpha-4
 1125 ???? EB0A     	    jmp  0f
 1126 ???? C705340C 	star0: mov dword ptr  shift, offset graph0
 1126      0000B80B 
 1126      0000
 1127              	    lea  edi, graphics-4
 1128 ???? AD       	0:  drop
 1129 ???? E968FEFF 	    jmp  accept1
 1129      FF
 1130              	
 1131 ???? C705340C 	alph: mov dword ptr  shift, offset alpha1
 1131      0000F40B 
 1131      0000
 1132              	    /* variable 'board' holds a pointer to the keyboard currently in use:
 1133              	    /* alphabetic, numeric, graphic, etc.
 1134              	    /* since valid key codes start at 1, subtract length of 1 address
 1135              	    /* (4 bytes) from the start of the table into which we index */
 1136              	    lea  edi, alpha-4
 1137 ???? EB0A     	    jmp  0f
 1138 ???? C705340C 	graph: mov dword ptr shift, offset graph1
 1138      0000CC0B 
 1138      0000
 1139              	    lea  edi, graphics-4
 1140              	0:  mov  board, edi
 1141 ???? E9FBFEFF 	    jmp  word0
 1141      FF
 1142              	
 1143 ???? 8305340C 	first: add dword ptr shift, 4*4+4
 1143      000014
 1144 ???? E8A6FEFF 	    call word_
 1144      FF
 1145 ???? FF15480C 	    call [aword]
 1145      0000
 1146 ???? E92CFEFF 	    jmp  accept
 1146      FF
 1147              	
 1148 ???? 18191A1B 	hicon: .byte 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f
 1148      1C1D1E1F 
 1149 ???? 20210513 	    .byte 0x20, 0x21,  5 , 0x13, 0xa, 0x10,  4 , 0xe
 1149      0A10040E 
 1150              	edig1: dup_
 1151 ???? FF350000 	edig: push ecx
 1151      0000
 1152              	    mov  al, hicon[eax]
 1153 ???? E814FBFF 	    call emit
 1153      FF
 1154 ???? 8F050000 	    pop  ecx
 1154      0000
 1155 ???? C3       	    ret
 1156              	
 1157              	odig: rol  eax, 4
 1158              	    dup_
 1159 ???? 83250000 	    and  eax, 0x0f
 1159      00000F
 1160 ???? C3       	    ret
 1161              	
 1162              	hdotn: mov  edx, eax
 1163              	    neg  eax
 1164              	    lea  ecx, [32+eax*4]
 1165 ???? AD       	    drop
 1166              	    rol  eax, cl
 1167              	    mov  ecx, edx
 1168 ???? EB00     	    jmp  0f
 1169              	hdot: mov  ecx, 8
 1170 ???? E8F0FFFF 	0:  call odig
 1170      FF
 1171 ???? E8D9FFFF 	    call edig
 1171      FF
 1172 ???? 75F4     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 1173 ???? AD       	    drop
 1174 ???? C3       	    ret
 1175              	
 1176              	/* '.', 'dot' is the original Forth 'word' for
 1177              	/* displaying a number off the stack */
 1178              	dot: mov  ecx, 7
 1179 ???? E8E2FFFF 	0:  call odig
 1179      FF
 1180              	    jnz  @h
 1181 ???? AD       	    drop
 1182 ???? 75F8     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 1183              	    inc  ecx
 1184 ???? E8DAFFFF 	0:  call odig
 1184      FF
 1185              	@h1: call edig
 1186 ???? 75F9     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 1187 ???? E822FBFF 	    call space
 1187      FF
 1188 ???? AD       	    drop
 1189 ???? C3       	    ret
 1190              	@h: inc  ecx
 1191              	    jmp  @h1
 1192              	
 1193 ???? 833D380C 	qdot: cmp dword ptr  base, 10
 1193      00000A
 1194 ???? 75E1     	    jnz  dot
 1195              	dot10: mov  edx, eax
 1196              	    test edx, edx
 1197 ???? 7905     	    jns  0f
 1198              	    neg  edx
 1199              	    dup_
 1200              	    mov  eax, 043
 1201 ???? E8CEFAFF 	    call emit
 1201      FF
 1202              	0:  mov  ecx, 8
 1203              	0:  mov  eax, edx
 1204              	    xor  edx, edx
 1205 ???? F7357010 	    div dword ptr  tens[ecx*4]
 1205      0000
 1206              	    test eax, eax
 1207 ???? 750A     	    jnz  d_1
 1208              	    dec  ecx
 1209 ???? 79F6     	    jns  0b
 1210 ???? EB0D     	    jmp  d_2
 1211              	0:  mov  eax, edx
 1212              	    xor  edx, edx
 1213 ???? F7357010 	    div dword ptr  tens[ecx*4]
 1213      0000
 1214 ???? E898FFFF 	d_1: call edig1
 1214      FF
 1215              	    dec  ecx
 1216 ???? 79F3     	    jns  0b
 1217              	d_2: mov  eax, edx
 1218 ???? E891FFFF 	    call edig1
 1218      FF
 1219 ???? E8EDFAFF 	    call space ;# spcr
 1219      FF
 1220 ???? AD       	    drop
 1221 ???? C3       	    ret
 1222              	
 1223              	/* unpack the Huffman-coded characters in a 32-bit word */
 1224              	unpack: dup_
 1225              	    test eax, eax
 1226 ???? 780F     	    js   0f
 1227 ???? C1250000 	    shl  dword ptr [esi], 4
 1227      000004
 1228              	    rol  eax, 4
 1229 ???? 83250000 	    and  eax, 7
 1229      000007
 1230 ???? C3       	    ret
 1231              	0:  shl  eax, 1
 1232 ???? 7816     	    js   0f
 1233 ???? C1250000 	    shl  dword ptr [esi], 5
 1233      000005
 1234              	    rol  eax, 4
 1235 ???? 83250000 	    and  eax, 7
 1235      000007
 1236 ???? 83350000 	    xor  al, 0x8
 1236      000008
 1237 ???? C3       	    ret
 1238 ???? C1250000 	0:  shl  dword ptr [esi], 7
 1238      000007
 1239              	    rol  eax, 6
 1240 ???? 83250000 	    and  eax, 0x3f
 1240      00003F
 1241 ???? 832D0000 	    sub  al, 0x10
 1241      000010
 1242 ???? C3       	    ret
 1243              	
 1244              	qring: dup_
 1245 ???? FF050000 	    inc  dword ptr [esi]
 1245      0000
 1246              	    cmp  curs, edi ;# from abort, insert
 1247 ???? 7500     	    jnz  0f
 1248              	    mov  curs, eax
 1249              	0:  cmp  eax, curs
 1250 ???? 7404     	    jz   ring
 1251 ???? 7900     	    jns  0f
 1252              	    mov  pcad, edi
 1253 ???? AD       	0:  drop
 1254 ???? C3       	    ret
 1255              	
 1256              	ring:
 1257              	    mov  cad, edi
 1258              	    sub dword ptr xy, iw*0x10000 ;# bksp
 1259              	    dup_
 1260              	    mov  eax, 0x0e04000 ;# ochre-colored cursor
 1261 ???? E8C2F9FF 	    call color
 1261      FF
 1262              	    mov  eax, 060
 1263              	    mov  cx, word ptr xy+2
 1264              	    cmp  cx, word ptr rm
 1265 ???? 7806     	    js   0f
 1266 ???? E850FAFF 	    call emit
 1266      FF
 1267              	    sub dword ptr xy, iw*0x10000 ;# bksp
 1268 ???? C3       	    ret
 1269 ???? E94AFAFF 	0:  jmp  emit
 1269      FF
 1270              	
 1271              	rw: mov  cx, word ptr xy+2
 1272              	    cmp  cx, word ptr lm
 1273 ???? 7405     	    jz   0f
 1274 ???? E858FBFF 	    call cr
 1274      FF
 1275 ???? E816FBFF 	0:  call red
 1275      FF
 1276 ???? EB7C     	    jmp  type_
 1277              	
 1278 ???? E814FBFF 	gw: call green
 1278      FF
 1279 ???? EB75     	    jmp  type_
 1280 ???? E8F4FAFF 	mw: call cyan
 1280      FF
 1281 ???? EB6E     	    jmp  type_
 1282              	ww: dup_
 1283              	    mov  eax, yellow
 1284 ???? E894F9FF 	    call color
 1284      FF
 1285 ???? EB67     	    jmp  type_
 1286              	
 1287              	type0: ;# display continuation of previous word
 1288              	    sub  dword ptr xy, iw*0x10000 ;# call bspcr
 1289 ???? F705FCFF 	    test dword ptr [-4+edi*4], 0xfffffff0 ;# valid packed word?
 1289      FFFFF0FF 
 1289      FFFF
 1290 ???? 755B     	    jnz  type1
 1291              	    dec  edi
 1292              	    mov  lcad, edi
 1293 ???? E858FAFF 	    call space
 1293      FF
 1294 ???? E8A7FFFF 	    call qring
 1294      FF
 1295 ???? 8F050000 	    pop  edx ;# .end of block
 1295      0000
 1296 ???? AD       	    drop
 1297 ???? E975FBFF 	    jmp  keyboard
 1297      FF
 1298              	
 1299              	cap: ;# display a capitalized comment word
 1300 ???? E86BF9FF 	    call white
 1300      FF
 1301              	    dup_
 1302              	    mov  eax, [-4+edi*4]
 1303 ???? 83250000 	    and  eax, 0xfffffff0 ;# mask out tag bits
 1303      0000F0
 1304 ???? E84BFFFF 	    call unpack
 1304      FF
 1305 ???? 83050000 	    add  al, 48
 1305      000030
 1306 ???? E8E8F9FF 	    call emit
 1306      FF
 1307 ???? EB2D     	    jmp  type2
 1308              	
 1309              	caps: ;# display an all-caps comment word
 1310 ???? E84CF9FF 	    call white
 1310      FF
 1311              	    dup_
 1312              	    mov  eax, [-4+edi*4]
 1313 ???? 83250000 	    and  eax, 0xfffffff0 ;# mask out tag bits
 1313      0000F0
 1314 ???? E82CFFFF 	0:  call unpack
 1314      FF
 1315 ???? 7428     	    jz   0f ;# space if it unpacked to nothing
 1316 ???? 83050000 	    add  al, 48
 1316      000030
 1317 ???? E8C7F9FF 	    call emit
 1317      FF
 1318 ???? EBEB     	    jmp  0b
 1319              	
 1320 ???? E82BF9FF 	text: call white
 1320      FF
 1321              	type_:
 1322              	type1: dup_
 1323              	    mov  eax, [-4+edi*4]
 1324 ???? 83250000 	    and  eax, 0xfffffff0 ;# mask out tag bits
 1324      0000F0
 1325 ???? E80BFFFF 	type2: call unpack
 1325      FF
 1326 ???? 7407     	    jz   0f
 1327 ???? E8ADF9FF 	    call emit
 1327      FF
 1328 ???? EBF2     	    jmp  type2
 1329 ???? E8E8F9FF 	0:  call space
 1329      FF
 1330 ???? AD       	    drop
 1331 ???? AD       	    drop
 1332 ???? C3       	    ret
 1333              	
 1334              	;# green (compiled) short (27 bits) word
 1335              	gsw: mov  edx, [-4+edi*4]
 1336              	    sar  edx, 5 ;# shift into position
 1337 ???? EB0A     	    jmp  gnw1
 1338              	
 1339              	var: ;# within editor, display a variable name
 1340 ???? E865FAFF 	    call magenta
 1340      FF
 1341 ???? E8D7FFFF 	    call type_
 1341      FF
 1342              	;# fall through to next routine to display its value
 1343              	;# green (compiled) normal (32 bits) word
 1344              	gnw: mov  edx, [edi*4]
 1345              	    inc  edi
 1346              	gnw1: dup_
 1347              	    mov  eax, 0x0f800 ;# green
 1348 ???? 813D9410 	    cmp dword ptr bas, offset dot10 ;# is it base 10?
 1348      0000850E 
 1348      0000
 1349 ???? 7410     	    jz   0f ;# bright green if so
 1350              	    mov  eax, 0x0c000 ;# else dark green
 1351 ???? EB0E     	    jmp  0f
 1352              	
 1353              	;# short (27 bits) yellow (executable) word
 1354              	sw: mov  edx, [-4+edi*4]
 1355              	    sar  edx, 5 ;# shift into position
 1356 ???? EB00     	    jmp  nw1
 1357              	
 1358              	;# normal (32 bits) yellow (executable) word
 1359              	nw: mov  edx, [edi*4]
 1360              	    inc  edi
 1361              	nw1: dup_
 1362              	    mov  eax, yellow
 1363 ???? 813D9410 	    cmp dword ptr bas, offset dot10 ;# is it base 10?
 1363      0000850E 
 1363      0000
 1364 ???? 7400     	    jz   0f ;# bright yellow if so
 1365              	    mov  eax, 0x0c0c000 ;# else dark yellow
 1366 ???? E8E1F8FF 	0:  call color
 1366      FF
 1367              	    dup_
 1368              	    mov  eax, edx
 1369 ???? FF259410 	    jmp  [bas]
 1369      0000
 1370              	
 1371 ???? E8F6F2FF 	refresh: call show
 1371      FF
 1372 ???? E86AFAFF 	    call blank
 1372      FF
 1373 ???? E8E2F9FF 	    call text1
 1373      FF
 1374              	    dup_            ;# counter
 1375              	    mov  eax, lcad
 1376              	    mov  cad, eax ;# for curs beyond .end
 1377              	    xor  eax, eax
 1378              	    mov  edi, blk
 1379              	    shl  edi, 10-2
 1380              	    mov  pcad, edi ;# for curs=0
 1381 ???? F7050000 	ref1: test dword ptr [edi*4], 0x0f
 1381      00000F00 
 1381      0000
 1382 ???? 7405     	    jz   0f
 1383 ???? E8E6FEFF 	    call qring
 1383      FF
 1384              	0:  mov  edx, [edi*4]
 1385              	    inc  edi
 1386 ???? C7059410 	    mov dword ptr  bas, offset dot10
 1386      0000850E 
 1386      0000
 1387              	    test dl, 020
 1388 ???? 740A     	    jz   0f
 1389 ???? C7059410 	    mov dword ptr  bas, offset dot
 1389      0000660E 
 1389      0000
 1390 ???? 83250000 	0:  and  edx, 017
 1390      00000F
 1391 ???? E8040000 	    call display[edx*4]
 1391      00
 1392 ???? EBCB     	    jmp  ref1
 1393              	
 1394 ???? 89F6     	.align 4
 1395 ???? 330F0000 	display: .long type0, ww, nw, rw
 1395      2C0F0000 
 1395      D30F0000 
 1395      100F0000 
 1396 ???? 1E0F0000 	    .long gw, gnw, gsw, mw
 1396      C30F0000 
 1396      B70F0000 
 1396      250F0000 
 1397 ???? D10F0000 	    .long sw, text, cap, caps
 1397      950F0000 
 1397      550F0000 
 1397      740F0000 
 1398 ???? B90F0000 	    .long var, nul, nul, nul
 1398      41050000 
 1398      41050000 
 1398      41050000 
 1399 ???? 0A000000 	tens: .long 10, 100, 1000, 10000, 100000, 1000000
 1399      64000000 
 1399      E8030000 
 1399      10270000 
 1399      A0860100 
 1399      40420F00 
 1400 ???? 80969800 	    .long 10000000, 100000000, 1000000000
 1400      00E1F505 
 1400      00CA9A3B 
 1401 ???? 850E0000 	bas: .long dot10
 1402 ???? 12000000 	blk: .long 18
 1403              	.ifdef CM2001 ;# match CM2001 color.com binary
 1404 ???? 02000000 	curs: .long 2
 1405 ???? 04120000 	cad: .long 0x1204
 1406 ???? 02120000 	pcad: .long 0x1202
 1407 ???? 2C120000 	lcad: .long 0x122c
 1408 ???? 0C700900 	trash: .long buffer*4+12
 1409              	.else
 1410              	curs: .long 0
 1411              	cad: .long 0
 1412              	pcad: .long 0
 1413              	lcad: .long 0
 1414              	trash: .long buffer*4
 1415              	.endif
 1416              	
 1417              	/* the editor keys and their actions */
 1418              	ekeys:
 1419              	;# delete (cut), exit editor, insert (paste)
 1420 ???? 41050000 	    .long nul, del, eout, destack ;# n<space><alt>
 1420      30130000 
 1420      57120000 
 1420      89120000 
 1421              	;# white (yellow), red, green, to shadow block
 1422 ???? 71110000 	    .long act1, act3, act4, shadow ;# uiop=yrg*
 1422      73110000 
 1422      75110000 
 1422      03120000 
 1423              	;# left, up, down, right
 1424 ???? B1110000 	    .long mcur, mmcur, ppcur, pcur ;# jkl;=ludr
 1424      C0110000 
 1424      D4110000 
 1424      B9110000 
 1425              	;# previous block, magenta (variable), cyan (macro), next block
 1426 ???? EB110000 	    .long mblk, actv, act7, pblk ;# m,./=-mc+
 1426      93110000 
 1426      7D110000 
 1426      DC110000 
 1427              	;# white (comment) all caps, white (comment) capitalized, white (comment)
 1428 ???? 41050000 	    .long nul, act11, act10, act9 ;# wer=SCt
 1428      7B110000 
 1428      79110000 
 1428      77110000 
 1429 ???? 41050000 	    .long nul, nul, nul, nul ;# df=fj (find and jump) not in this version
 1429      41050000 
 1429      41050000 
 1429      41050000 
 1430              	;# these are the huffman encodings of the characters to display
 1431 ???? 41050000 	ekbd0: .long nul, nul, nul, nul
 1431      41050000 
 1431      41050000 
 1431      41050000 
 1432 ???? 15250700 	    .byte 21, 37,  7,  0  ;# x  .  i
 1433              	ekbd:
 1434 ???? 0F010D2D 	    .byte 15,  1, 13, 45  ;# w  r  g  *
 1435 ???? 0C161001 	    .byte 12, 22, 16,  1  ;# l  u  d  r
 1436 ???? 23090A2B 	    .byte 35,  9, 10, 43  ;# -  m  c  +
 1437 ???? 00383A02 	    .byte  0, 56, 58,  2  ;#    S  C  t
 1438 ???? 00000000 	    .byte  0,  0,  0,  0
 1439 ???? 00000000 	    .byte  0,  0,  0,  0
 1440              	;# 1-based array of colors used for various action modes
 1441              	actc:
 1442 ???? 00FFFF00 	    .long yellow, 0, 0x0ff0000, 0x0c000 ;# 1=yellow, 2=none, 3=red, 4=green
 1442      00000000 
 1442      0000FF00 
 1442      00C00000 
 1443 ???? 00000000 	    .long 0, 0, 0x0ffff, 0 ;# 7=cyan
 1443      00000000 
 1443      FFFF0000 
 1443      00000000 
 1444 ???? FFFFFF00 	    .long 0x0ffffff, 0x0ffffff, 0x0ffffff, 0x8080ff ;# 9-11=white, 12=magenta
 1444      FFFFFF00 
 1444      FFFFFF00 
 1444      FF808000 
 1445 ???? 00000000 	vector: .long 0
 1446              	.ifdef CM2001
 1447 ???? 0A       	action: .byte 10 ;# matches CM2001 color.com binary
 1448              	.else
 1449              	action: .byte 1
 1450              	.endif
 1451              	
 1452              	act1: mov  al, 1 ;# word execute, yellow
 1453 ???? EB0A     	    jmp  0f
 1454              	act3: mov  al, 3 ;# word define, red
 1455 ???? EB08     	    jmp  0f
 1456              	act4: mov  al, 4 ;# word compile, green
 1457 ???? EB06     	    jmp  0f
 1458              	act9: mov  al, 9 ;# word comment, white
 1459 ???? EB04     	    jmp  0f
 1460              	act10: mov  al, 10 ;# word comment, white Capitalized
 1461 ???? EB02     	    jmp  0f
 1462              	act11: mov  al, 11 ;# word comment, ALL CAPS
 1463 ???? EB00     	    jmp  0f
 1464              	act7: mov  al, 7 ;# macro compile, cyan
 1465              	0:  mov  action, al ;# number of action
 1466              	    mov  eax, [actc-4+eax*4] ;# load color corresponding to action
 1467 ???? C705480C 	    mov dword ptr aword, offset insert ;# "insert" becomes the active word
 1467      0000BF12 
 1467      0000
 1468              	;# action for number
 1469              	actn: mov  keyc, eax
 1470 ???? 8F050000 	    pop  eax
 1470      0000
 1471 ???? AD       	    drop
 1472 ???? E9C4FAFF 	    jmp  accept
 1472      FF
 1473              	;# after 'm' pressed, change color and prepare to store variable name
 1474 ???? C6057011 	actv: mov byte ptr action, 12 ;# variable
 1474      00000C
 1475              	    mov  eax, 0x0ff00ff ;# magenta
 1476 ???? C705480C 	    mov dword ptr aword, offset 0f
 1476      0000A611 
 1476      0000
 1477 ???? EBE1     	    jmp  actn
 1478              	;# this is the action performed after the variable name is entered
 1479              	0:  dup_ ;# save EAX (packed word) on stack
 1480              	    xor  eax, eax ;# zero out EAX
 1481 ???? FF05500C 	    inc  dword ptr words ;# add one to count of words
 1481      0000
 1482 ???? E90E0100 	    jmp  insert ;# insert new word into dictionary
 1482      00
 1483              	
 1484 ???? FF0D9C10 	mcur: dec dword ptr curs ;# minus cursor: move left
 1484      0000
 1485 ???? 7906     	    jns  0f  ;# just return if it didn't go negative, otherwise undo it...
 1486 ???? FF059C10 	pcur: inc dword ptr curs ;# plus cursor: move right
 1486      0000
 1487 ???? C3       	0:  ret
 1488              	
 1489 ???? 832D9C10 	mmcur: sub dword ptr curs, 8 ;# move up one row
 1489      000008
 1490 ???? 790A     	    jns  0f  ;# return if it didn't go negative
 1491 ???? C7059C10 	    mov dword ptr curs, 0  ;# otherwise set to 0
 1491      00000000 
 1491      0000
 1492 ???? C3       	0:  ret
 1493 ???? 83059C10 	ppcur: add dword ptr curs, 8 ;# move down one row
 1493      000008
 1494 ???? C3       	    ret  ;# guess it's ok to increment beyond end of screen (?)
 1495              	
 1496 ???? 83059810 	pblk: add dword ptr  blk, 2 ;# plus one block (+2 since odd are shadows)
 1496      000002
 1497 ???? 83050000 	    add  dword ptr [esi], 2
 1497      000002
 1498 ???? C3       	    ret
 1499 ???? 833D9810 	mblk: cmp dword ptr  blk, 20 ;# minus one block unless below 20
 1499      000014
 1500 ???? 780E     	    js   0f ;# (18 is first block available for editing)
 1501 ???? 832D9810 	    sub dword ptr  blk, 2
 1501      000002
 1502 ???? 832D0000 	    sub  dword ptr [esi], 2
 1502      000002
 1503 ???? C3       	0:  ret
 1504              	;# shadow screens in Forth are documentation for corresponding source screens
 1505 ???? 83359810 	shadow: xor dword ptr  blk, 1 ;# switch between shadow and source
 1505      000001
 1506 ???? 83350000 	    xor  dword ptr [esi], 1 ;# change odd to even and vice versa
 1506      000001
 1507 ???? C3       	    ret
 1508              	
 1509 ???? AD       	e0: drop
 1510 ???? EB21     	    jmp  0f
 1511              	
 1512              	/* colorForth editor */
 1513              	;# when invoked with 'edit', the block number is passed on the stack
 1514              	edit: mov  blk, eax
 1515 ???? AD       	    drop
 1516              	;# when invoked with 'e', uses block number in blk, by default 18
 1517              	e:  dup_
 1518              	    mov  eax, blk
 1519 ???? C7054C0C 	    mov dword ptr  anumber, offset format
 1519      0000C912 
 1519      0000
 1520 ???? C605F00B 	    mov  byte ptr alpha0+4*4, 045 ;# .
 1520      000025
 1521 ???? C705E40B 	    mov dword ptr alpha0+4, offset e0
 1521      00001212 
 1521      0000
 1522 ???? E8B4FDFF 	    call refresh
 1522      FF
 1523 ???? C705340C 	0:  mov dword ptr shift, offset ekbd0
 1523      00001011 
 1523      0000
 1524 ???? C705300C 	    mov dword ptr board, offset ekbd-4
 1524      00002011 
 1524      0000
 1525              	    mov dword ptr keyc, yellow ;# default key color, yellow
 1526              	;# this is the main loop
 1527 ???? E853F9FF 	0:  call key
 1527      FF
 1528 ???? E85CFEFF 	    call ekeys[eax*4]
 1528      FF
 1529 ???? AD       	    drop
 1530 ???? EBF3     	    jmp  0b
 1531              	
 1532              	/* exit editor */
 1533 ???? 8F050000 	eout: pop  eax
 1533      0000
 1534 ???? AD       	    drop
 1535 ???? AD       	    drop
 1536 ???? C705480C 	    mov  dword ptr aword, offset ex1
 1536      00002803 
 1536      0000
 1537 ???? C7054C0C 	    mov  dword ptr anumber, offset nul
 1537      00004105 
 1537      0000
 1538 ???? C605F00B 	    mov  byte ptr alpha0+4*4, 0
 1538      000000
 1539 ???? C705E40B 	    mov  dword ptr alpha0+4, offset nul0
 1539      0000540C 
 1539      0000
 1540              	    mov  dword ptr keyc, yellow ;# restore key color to yellow
 1541 ???? E9CEF9FF 	    jmp  accept ;# revert to command-line processing
 1541      FF
 1542              	
 1543              	/* insert, or paste */
 1544              	destack: mov  edx, trash ;# grab what was left by last "cut" operation
 1545              	    cmp  edx, buffer*4 ;# anything in there?
 1546 ???? 7501     	    jnz  0f ;# continue if so...
 1547 ???? C3       	    ret  ;# otherwise, 'insert' is already the default action so nothing to do
 1548 ???? 832D0000 	0:  sub  edx, 2*4
 1548      000008
 1549              	    mov  ecx, [edx+1*4]
 1550              	    mov  words, ecx
 1551              	0:  dup_
 1552              	    mov  eax, [edx]
 1553 ???? 832D0000 	    sub  edx, 1*4
 1553      000004
 1554 ???? 75F7     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 1555 ???? 83050000 	    add  edx, 1*4
 1555      000004
 1556              	    mov  trash, edx
 1557              	
 1558              	insert0: mov  ecx, lcad  ;# room available?
 1559              	    add  ecx, words
 1560              	    xor  ecx, lcad
 1561              	    and  ecx, -0x100
 1562 ???? 7404     	    jz   insert1
 1563              	    mov  ecx, words ;# no
 1564 ???? AD       	0:  drop
 1565 ???? 75FD     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 1566 ???? C3       	    ret
 1567 ???? FF350000 	insert1: push esi
 1567      0000
 1568              	    mov  esi, lcad
 1569              	    mov  ecx, esi
 1570              	    dec  esi
 1571              	    mov  edi, esi
 1572              	    add  edi, words
 1573              	    shl  edi, 2
 1574              	    sub  ecx, cad
 1575 ???? 7804     	    js   0f
 1576              	    shl  esi, 2
 1577 ???? FD       	    std
 1578 ???? F3A5     	    rep movsd
 1579 ???? FC       	    cld
 1580 ???? 8F050000 	0:  pop  esi
 1580      0000
 1581              	    shr  edi, 2
 1582              	    inc  edi
 1583              	    mov  curs, edi ;# like abort
 1584              	    mov  ecx, words
 1585              	0:  dec  edi
 1586              	    mov  [edi*4], eax
 1587 ???? AD       	    drop ;# requires cld
 1588 ???? 75FD     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 1589 ???? C3       	    ret
 1590              	
 1591 ???? E8DFFFFF 	insert: call insert0
 1591      FF
 1592              	    mov  cl, action
 1593              	    xor  [edi*4], cl
 1594 ???? E98EF9FF 	    jmp  accept
 1594      FF
 1595              	
 1596 ???? F6057011 	format: test byte ptr action, 012 ;# ignore 3 and 9
 1596      00000A
 1597 ???? 7402     	    jz   0f
 1598 ???? AD       	    drop
 1599 ???? C3       	    ret
 1600              	0:  mov  edx, eax
 1601              	    and  edx, 0x0fc000000
 1602 ???? 7402     	    jz   0f
 1603              	    cmp  edx, 0x0fc000000
 1604 ???? 7533     	    jnz  format2
 1605              	0:  shl  eax, 5
 1606 ???? 83350000 	    xor  al, 2 ;# 6
 1606      000002
 1607 ???? 803D7011 	    cmp  byte ptr  action, 4
 1607      000004
 1608 ???? 7407     	    jz   0f
 1609 ???? 83350000 	    xor  al, 013 ;# 8
 1609      00000B
 1610 ???? 833D380C 	0:  cmp  dword ptr base, 10 ;# base 10?
 1610      00000A
 1611 ???? 7407     	    jz   0f ;# continue if so...
 1612 ???? 83350000 	    xor  al, 0x10 ;# otherwise remove 'hex' bit
 1612      000010
 1613 ???? C705500C 	0:  mov  dword ptr words, 1
 1613      00000100 
 1613      0000
 1614 ???? EBB4     	    jmp  insert
 1615              	
 1616              	format2: dup_
 1617              	    mov  eax, 1 ;# 5
 1618 ???? 803D7011 	    cmp  byte ptr  action, 4
 1618      000004
 1619 ???? 7400     	    jz   0f
 1620              	    mov  al, 3 ;# 2
 1621 ???? 833D380C 	0:  cmp  dword ptr base, 10 ;# base 10?
 1621      00000A
 1622 ???? 7407     	    jz   0f ;# continue if so...
 1623 ???? 83350000 	    xor  al, 0x10 ;# otherwise remove 'hex' bit
 1623      000010
 1624              	0:  xchg eax, [esi]
 1625 ???? C705500C 	    mov  dword ptr words, 2
 1625      00000200 
 1625      0000
 1626 ???? EB8F     	    jmp  insert
 1627              	
 1628              	;# delete, or cut, current word in editor (to the left of pacman cursor)
 1629 ???? E8130000 	del: call enstack
 1629      00
 1630              	    mov  edi, pcad
 1631              	    mov  ecx, lcad
 1632              	    sub  ecx, edi
 1633              	    shl  edi, 2
 1634 ???? FF350000 	    push esi
 1634      0000
 1635              	    mov  esi, cad
 1636              	    shl  esi, 2
 1637 ???? F3A5     	    rep  movsd
 1638 ???? 8F050000 	    pop  esi
 1638      0000
 1639 ???? E969FEFF 	    jmp  mcur
 1639      FF
 1640              	
 1641              	enstack: dup_
 1642              	    mov  eax, cad
 1643              	    sub  eax, pcad
 1644 ???? 7413     	    jz   ens
 1645              	    mov  ecx, eax
 1646              	    xchg eax, edx
 1647 ???? FF350000 	    push esi
 1647      0000
 1648              	    mov  esi, cad
 1649              	    lea  esi, [esi*4-4]
 1650              	    mov  edi, trash
 1651 ???? FD       	0:  std
 1652 ???? AD       	    lodsd
 1653 ???? FC       	    cld
 1654 ???? AB       	    stosd
 1655 ???? 75FA     	    next 0b
****  Error:no instruction mnemonic suffix given and no register operands; can't size instruction
 1656              	    xchg eax, edx
 1657 ???? AB       	    stosd
 1658              	    mov  trash, edi
 1659 ???? 8F050000 	    pop  esi
 1659      0000
 1660 ???? AD       	ens: drop
 1661 ???? C3       	    ret
 1662              	
 1663 ???? 8F050000 	pad: pop  edx
 1663      0000
 1664              	    mov  vector, edx
 1665              	    add  edx, 28*5
 1666              	    mov  board, edx
 1667 ???? 832D0000 	    sub  edx, 4*4
 1667      000010
 1668              	    mov  shift, edx
 1669 ???? E831F8FF 	0:  call key
 1669      FF
 1670              	    mov  edx, vector
 1671              	    add  edx, eax
 1672              	    lea  edx, [5+eax*4+edx]
 1673              	    add  edx, [-4+edx]
 1674 ???? AD       	    drop
 1675 ???? E8FCFFFF 	    call edx
 1675      FF
 1676 ???? EBF3     	    jmp  0b
 1677              	
 1678              	.ifdef OBSOLETE_CM2001
 1679              	 .org (0x1200-1)*4
 1680              	    .long 0
 1681              	.else
 1682              	 .include "chars.asm"
   1              	;# compile character map from data stored as "######.......###"
   2              	;# the above should compile to the two bytes 0xfc 0x07
   3              	.macro CHR16X24 row
   4              	 .equ packed, 0
   5              	 .irpc pixel, "\row"
   6              	  .equ packed, packed << 1
   7              	  .ifeqs "\pixel", "#"
   8              	   .equ packed, packed | 1
   9              	  .endif
  10              	 .endr
  11              	 .byte packed >> 8, packed & 0xff
  12              	.endm
  13              	
  14              	;# compile character map from data stored as "######........#######..........#"
  15              	;# the above should compile to the bytes 0xfc 0x03 0xf8 0x01
  16              	.macro CHR32X32 row
  17              	 .equ packed, 0
  18              	 .equ bitcount, 0
  19              	 .irpc pixel, "\row"
  20              	  .equ packed, packed << 1
  21              	  .ifeqs "\pixel", "#"
  22              	   .equ packed, packed | 1
  23              	  .endif
  24              	  .equ bitcount, bitcount + 1
  25              	  .ifeq bitcount - 8
  26              	   .byte packed
  27              	   .equ packed, 0
  28              	   .equ bitcount, 0
  29              	  .endif
  30              	 .endr
  31              	.endm
  32              	
  33 ???? 00000000 	.org 0x3000  ;# block 12 through block 17
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  34 ???? 0000     	CHR16X24 "................"
  35 ???? 0000     	CHR16X24 "................"
  36 ???? 0000     	CHR16X24 "................"
  37 ???? 0000     	CHR16X24 "................"
  38 ???? 0000     	CHR16X24 "................"
  39 ???? 0000     	CHR16X24 "................"
  40 ???? 0000     	CHR16X24 "................"
  41 ???? 0000     	CHR16X24 "................"
  42 ???? 0000     	CHR16X24 "................"
  43 ???? 0000     	CHR16X24 "................"
  44 ???? 0000     	CHR16X24 "................"
  45 ???? 0000     	CHR16X24 "................"
  46 ???? 0000     	CHR16X24 "................"
  47 ???? 0000     	CHR16X24 "................"
  48 ???? 0000     	CHR16X24 "................"
  49 ???? 0000     	CHR16X24 "................"
  50 ???? 0000     	CHR16X24 "................"
  51 ???? 0000     	CHR16X24 "................"
  52 ???? 0000     	CHR16X24 "................"
  53 ???? 0000     	CHR16X24 "................"
  54 ???? 0000     	CHR16X24 "................"
  55 ???? 0000     	CHR16X24 "................"
  56 ???? 0000     	CHR16X24 "................"
  57 ???? 0000     	CHR16X24 "................"
  58              	
  59 ???? 0000     	CHR16X24 "................"
  60 ???? 0000     	CHR16X24 "................"
  61 ???? 0000     	CHR16X24 "................"
  62 ???? 0000     	CHR16X24 "................"
  63 ???? 0000     	CHR16X24 "................"
  64 ???? 0000     	CHR16X24 "................"
  65 ???? E3F8     	CHR16X24 "###...#######..."
  66 ???? F7FE     	CHR16X24 "####.##########."
  67 ???? FFFF     	CHR16X24 "################"
  68 ???? FC07     	CHR16X24 "######.......###"
  69 ???? F801     	CHR16X24 "#####..........#"
  70 ???? F000     	CHR16X24 "####............"
  71 ???? F000     	CHR16X24 "####............"
  72 ???? F000     	CHR16X24 "####............"
  73 ???? F000     	CHR16X24 "####............"
  74 ???? F000     	CHR16X24 "####............"
  75 ???? F000     	CHR16X24 "####............"
  76 ???? F000     	CHR16X24 "####............"
  77 ???? F000     	CHR16X24 "####............"
  78 ???? F000     	CHR16X24 "####............"
  79 ???? 0000     	CHR16X24 "................"
  80 ???? 0000     	CHR16X24 "................"
  81 ???? 0000     	CHR16X24 "................"
  82 ???? 0000     	CHR16X24 "................"
  83              	
  84 ???? 03C0     	CHR16X24 "......####......"
  85 ???? 03C0     	CHR16X24 "......####......"
  86 ???? 03C0     	CHR16X24 "......####......"
  87 ???? 03C0     	CHR16X24 "......####......"
  88 ???? 3FFC     	CHR16X24 "..############.."
  89 ???? 3FFC     	CHR16X24 "..############.."
  90 ???? 3FFC     	CHR16X24 "..############.."
  91 ???? 03C0     	CHR16X24 "......####......"
  92 ???? 03C0     	CHR16X24 "......####......"
  93 ???? 03C0     	CHR16X24 "......####......"
  94 ???? 03C0     	CHR16X24 "......####......"
  95 ???? 03C0     	CHR16X24 "......####......"
  96 ???? 03C0     	CHR16X24 "......####......"
  97 ???? 03C0     	CHR16X24 "......####......"
  98 ???? 03C0     	CHR16X24 "......####......"
  99 ???? 03C0     	CHR16X24 "......####......"
 100 ???? 03C0     	CHR16X24 "......####......"
 101 ???? 03C0     	CHR16X24 "......####......"
 102 ???? 03C0     	CHR16X24 "......####......"
 103 ???? 03C0     	CHR16X24 "......####......"
 104 ???? 0000     	CHR16X24 "................"
 105 ???? 0000     	CHR16X24 "................"
 106 ???? 0000     	CHR16X24 "................"
 107 ???? 0000     	CHR16X24 "................"
 108              	
 109 ???? 0000     	CHR16X24 "................"
 110 ???? 0000     	CHR16X24 "................"
 111 ???? 0000     	CHR16X24 "................"
 112 ???? 0000     	CHR16X24 "................"
 113 ???? 0000     	CHR16X24 "................"
 114 ???? 0000     	CHR16X24 "................"
 115 ???? 1FF8     	CHR16X24 "...##########..."
 116 ???? 7FFE     	CHR16X24 ".##############."
 117 ???? 7FFE     	CHR16X24 ".##############."
 118 ???? F81F     	CHR16X24 "#####......#####"
 119 ???? F00F     	CHR16X24 "####........####"
 120 ???? F00F     	CHR16X24 "####........####"
 121 ???? F00F     	CHR16X24 "####........####"
 122 ???? F00F     	CHR16X24 "####........####"
 123 ???? F00F     	CHR16X24 "####........####"
 124 ???? F00F     	CHR16X24 "####........####"
 125 ???? F81F     	CHR16X24 "#####......#####"
 126 ???? 7FFE     	CHR16X24 ".##############."
 127 ???? 7FFE     	CHR16X24 ".##############."
 128 ???? 1FF8     	CHR16X24 "...##########..."
 129 ???? 0000     	CHR16X24 "................"
 130 ???? 0000     	CHR16X24 "................"
 131 ???? 0000     	CHR16X24 "................"
 132 ???? 0000     	CHR16X24 "................"
 133              	
 134 ???? 0000     	CHR16X24 "................"
 135 ???? 0000     	CHR16X24 "................"
 136 ???? 0000     	CHR16X24 "................"
 137 ???? 0000     	CHR16X24 "................"
 138 ???? 0000     	CHR16X24 "................"
 139 ???? 0000     	CHR16X24 "................"
 140 ???? 1FF8     	CHR16X24 "...##########..."
 141 ???? 7FFE     	CHR16X24 ".##############."
 142 ???? 7FFE     	CHR16X24 ".##############."
 143 ???? F00F     	CHR16X24 "####........####"
 144 ???? F00F     	CHR16X24 "####........####"
 145 ???? F01F     	CHR16X24 "####.......#####"
 146 ???? FFFE     	CHR16X24 "###############."
 147 ???? FFFC     	CHR16X24 "##############.."
 148 ???? F000     	CHR16X24 "####............"
 149 ???? F000     	CHR16X24 "####............"
 150 ???? F800     	CHR16X24 "#####..........."
 151 ???? 7FFE     	CHR16X24 ".##############."
 152 ???? 7FFE     	CHR16X24 ".##############."
 153 ???? 1FF8     	CHR16X24 "...##########..."
 154 ???? 0000     	CHR16X24 "................"
 155 ???? 0000     	CHR16X24 "................"
 156 ???? 0000     	CHR16X24 "................"
 157 ???? 0000     	CHR16X24 "................"
 158              	
 159 ???? 0000     	CHR16X24 "................"
 160 ???? 0000     	CHR16X24 "................"
 161 ???? 0000     	CHR16X24 "................"
 162 ???? 0000     	CHR16X24 "................"
 163 ???? 0000     	CHR16X24 "................"
 164 ???? 0000     	CHR16X24 "................"
 165 ???? 1FF8     	CHR16X24 "...##########..."
 166 ???? 7FFE     	CHR16X24 ".##############."
 167 ???? 7FFE     	CHR16X24 ".##############."
 168 ???? 001F     	CHR16X24 "...........#####"
 169 ???? 000F     	CHR16X24 "............####"
 170 ???? 000F     	CHR16X24 "............####"
 171 ???? 3FFF     	CHR16X24 "..##############"
 172 ???? 7FFF     	CHR16X24 ".###############"
 173 ???? F80F     	CHR16X24 "#####.......####"
 174 ???? F00F     	CHR16X24 "####........####"
 175 ???? F01F     	CHR16X24 "####.......#####"
 176 ???? 7FFF     	CHR16X24 ".###############"
 177 ???? 7FFF     	CHR16X24 ".###############"
 178 ???? 1FF7     	CHR16X24 "...#########.###"
 179 ???? 0000     	CHR16X24 "................"
 180 ???? 0000     	CHR16X24 "................"
 181 ???? 0000     	CHR16X24 "................"
 182 ???? 0000     	CHR16X24 "................"
 183              	
 184 ???? 0000     	CHR16X24 "................"
 185 ???? 0000     	CHR16X24 "................"
 186 ???? 0000     	CHR16X24 "................"
 187 ???? 0000     	CHR16X24 "................"
 188 ???? 0000     	CHR16X24 "................"
 189 ???? 0000     	CHR16X24 "................"
 190 ???? E3F8     	CHR16X24 "###...#######..."
 191 ???? F7FE     	CHR16X24 "####.##########."
 192 ???? FFFE     	CHR16X24 "###############."
 193 ???? FC1F     	CHR16X24 "######.....#####"
 194 ???? F80F     	CHR16X24 "#####.......####"
 195 ???? F00F     	CHR16X24 "####........####"
 196 ???? F00F     	CHR16X24 "####........####"
 197 ???? F00F     	CHR16X24 "####........####"
 198 ???? F00F     	CHR16X24 "####........####"
 199 ???? F00F     	CHR16X24 "####........####"
 200 ???? F00F     	CHR16X24 "####........####"
 201 ???? F00F     	CHR16X24 "####........####"
 202 ???? F00F     	CHR16X24 "####........####"
 203 ???? F00F     	CHR16X24 "####........####"
 204 ???? 0000     	CHR16X24 "................"
 205 ???? 0000     	CHR16X24 "................"
 206 ???? 0000     	CHR16X24 "................"
 207 ???? 0000     	CHR16X24 "................"
 208              	
 209 ???? 03C0     	CHR16X24 "......####......"
 210 ???? 03C0     	CHR16X24 "......####......"
 211 ???? 03C0     	CHR16X24 "......####......"
 212 ???? 03C0     	CHR16X24 "......####......"
 213 ???? 0000     	CHR16X24 "................"
 214 ???? 0000     	CHR16X24 "................"
 215 ???? 0000     	CHR16X24 "................"
 216 ???? 03C0     	CHR16X24 "......####......"
 217 ???? 03C0     	CHR16X24 "......####......"
 218 ???? 03C0     	CHR16X24 "......####......"
 219 ???? 03C0     	CHR16X24 "......####......"
 220 ???? 03C0     	CHR16X24 "......####......"
 221 ???? 03C0     	CHR16X24 "......####......"
 222 ???? 03C0     	CHR16X24 "......####......"
 223 ???? 03C0     	CHR16X24 "......####......"
 224 ???? 03C0     	CHR16X24 "......####......"
 225 ???? 03C0     	CHR16X24 "......####......"
 226 ???? 03C0     	CHR16X24 "......####......"
 227 ???? 03C0     	CHR16X24 "......####......"
 228 ???? 03C0     	CHR16X24 "......####......"
 229 ???? 0000     	CHR16X24 "................"
 230 ???? 0000     	CHR16X24 "................"
 231 ???? 0000     	CHR16X24 "................"
 232 ???? 0000     	CHR16X24 "................"
 233              	
 234 ???? 0000     	CHR16X24 "................"
 235 ???? 0000     	CHR16X24 "................"
 236 ???? 0000     	CHR16X24 "................"
 237 ???? 0000     	CHR16X24 "................"
 238 ???? 0000     	CHR16X24 "................"
 239 ???? 0000     	CHR16X24 "................"
 240 ???? 1FF8     	CHR16X24 "...##########..."
 241 ???? 7FFE     	CHR16X24 ".##############."
 242 ???? 7FFE     	CHR16X24 ".##############."
 243 ???? F802     	CHR16X24 "#####.........#."
 244 ???? F000     	CHR16X24 "####............"
 245 ???? F000     	CHR16X24 "####............"
 246 ???? 7FFC     	CHR16X24 ".#############.."
 247 ???? 3FFE     	CHR16X24 "..#############."
 248 ???? 000F     	CHR16X24 "............####"
 249 ???? 000F     	CHR16X24 "............####"
 250 ???? 401F     	CHR16X24 ".#.........#####"
 251 ???? 7FFE     	CHR16X24 ".##############."
 252 ???? 7FFE     	CHR16X24 ".##############."
 253 ???? 1FF8     	CHR16X24 "...##########..."
 254 ???? 0000     	CHR16X24 "................"
 255 ???? 0000     	CHR16X24 "................"
 256 ???? 0000     	CHR16X24 "................"
 257 ???? 0000     	CHR16X24 "................"
 258              	
 259 ???? 0000     	CHR16X24 "................"
 260 ???? 0000     	CHR16X24 "................"
 261 ???? 0000     	CHR16X24 "................"
 262 ???? 0000     	CHR16X24 "................"
 263 ???? 0000     	CHR16X24 "................"
 264 ???? 0000     	CHR16X24 "................"
 265 ???? DC3C     	CHR16X24 "##.###....####.."
 266 ???? FE7E     	CHR16X24 "#######..######."
 267 ???? FFFF     	CHR16X24 "################"
 268 ???? FFFF     	CHR16X24 "################"
 269 ???? F3CF     	CHR16X24 "####..####..####"
 270 ???? E187     	CHR16X24 "###....##....###"
 271 ???? E007     	CHR16X24 "###..........###"
 272 ???? E007     	CHR16X24 "###..........###"
 273 ???? E007     	CHR16X24 "###..........###"
 274 ???? E007     	CHR16X24 "###..........###"
 275 ???? E007     	CHR16X24 "###..........###"
 276 ???? E007     	CHR16X24 "###..........###"
 277 ???? E007     	CHR16X24 "###..........###"
 278 ???? E007     	CHR16X24 "###..........###"
 279 ???? 0000     	CHR16X24 "................"
 280 ???? 0000     	CHR16X24 "................"
 281 ???? 0000     	CHR16X24 "................"
 282 ???? 0000     	CHR16X24 "................"
 283              	
 284 ???? 0000     	CHR16X24 "................"
 285 ???? 0000     	CHR16X24 "................"
 286 ???? 0000     	CHR16X24 "................"
 287 ???? 0000     	CHR16X24 "................"
 288 ???? 0000     	CHR16X24 "................"
 289 ???? 0000     	CHR16X24 "................"
 290 ???? 1FF8     	CHR16X24 "...##########..."
 291 ???? 7FFE     	CHR16X24 ".##############."
 292 ???? 7FFE     	CHR16X24 ".##############."
 293 ???? F80F     	CHR16X24 "#####.......####"
 294 ???? F001     	CHR16X24 "####...........#"
 295 ???? F000     	CHR16X24 "####............"
 296 ???? F000     	CHR16X24 "####............"
 297 ???? F000     	CHR16X24 "####............"
 298 ???? F000     	CHR16X24 "####............"
 299 ???? F001     	CHR16X24 "####...........#"
 300 ???? F80F     	CHR16X24 "#####.......####"
 301 ???? 7FFE     	CHR16X24 ".##############."
 302 ???? 7FFE     	CHR16X24 ".##############."
 303 ???? 1FF8     	CHR16X24 "...##########..."
 304 ???? 0000     	CHR16X24 "................"
 305 ???? 0000     	CHR16X24 "................"
 306 ???? 0000     	CHR16X24 "................"
 307 ???? 0000     	CHR16X24 "................"
 308              	
 309 ???? 0000     	CHR16X24 "................"
 310 ???? 0000     	CHR16X24 "................"
 311 ???? 0000     	CHR16X24 "................"
 312 ???? 0000     	CHR16X24 "................"
 313 ???? 0000     	CHR16X24 "................"
 314 ???? 0000     	CHR16X24 "................"
 315 ???? E007     	CHR16X24 "###..........###"
 316 ???? F00F     	CHR16X24 "####........####"
 317 ???? F81F     	CHR16X24 "#####......#####"
 318 ???? 7C3E     	CHR16X24 ".#####....#####."
 319 ???? 3E7C     	CHR16X24 "..#####..#####.."
 320 ???? 1FF8     	CHR16X24 "...##########..."
 321 ???? 0FF0     	CHR16X24 "....########...."
 322 ???? 07E0     	CHR16X24 ".....######....."
 323 ???? 07C0     	CHR16X24 ".....#####......"
 324 ???? 0F80     	CHR16X24 "....#####......."
 325 ???? 1F00     	CHR16X24 "...#####........"
 326 ???? 3E00     	CHR16X24 "..#####........."
 327 ???? 7C00     	CHR16X24 ".#####.........."
 328 ???? F800     	CHR16X24 "#####..........."
 329 ???? F000     	CHR16X24 "####............"
 330 ???? E000     	CHR16X24 "###............."
 331 ???? C000     	CHR16X24 "##.............."
 332 ???? 8000     	CHR16X24 "#..............."
 333              	
 334 ???? 0700     	CHR16X24 ".....###........"
 335 ???? 0780     	CHR16X24 ".....####......."
 336 ???? 0780     	CHR16X24 ".....####......."
 337 ???? 0780     	CHR16X24 ".....####......."
 338 ???? 0780     	CHR16X24 ".....####......."
 339 ???? 0780     	CHR16X24 ".....####......."
 340 ???? 0780     	CHR16X24 ".....####......."
 341 ???? 0780     	CHR16X24 ".....####......."
 342 ???? 0780     	CHR16X24 ".....####......."
 343 ???? 0780     	CHR16X24 ".....####......."
 344 ???? 0780     	CHR16X24 ".....####......."
 345 ???? 0780     	CHR16X24 ".....####......."
 346 ???? 0780     	CHR16X24 ".....####......."
 347 ???? 0780     	CHR16X24 ".....####......."
 348 ???? 0780     	CHR16X24 ".....####......."
 349 ???? 0780     	CHR16X24 ".....####......."
 350 ???? 07C0     	CHR16X24 ".....#####......"
 351 ???? 07C0     	CHR16X24 ".....#####......"
 352 ???? 03E0     	CHR16X24 "......#####....."
 353 ???? 01E0     	CHR16X24 ".......####....."
 354 ???? 0000     	CHR16X24 "................"
 355 ???? 0000     	CHR16X24 "................"
 356 ???? 0000     	CHR16X24 "................"
 357 ???? 0000     	CHR16X24 "................"
 358              	
 359 ???? 0000     	CHR16X24 "................"
 360 ???? 0000     	CHR16X24 "................"
 361 ???? 0000     	CHR16X24 "................"
 362 ???? 0000     	CHR16X24 "................"
 363 ???? 0000     	CHR16X24 "................"
 364 ???? 0000     	CHR16X24 "................"
 365 ???? 1FE7     	CHR16X24 "...########..###"
 366 ???? 7FF7     	CHR16X24 ".###########.###"
 367 ???? 7FFF     	CHR16X24 ".###############"
 368 ???? F81F     	CHR16X24 "#####......#####"
 369 ???? F00F     	CHR16X24 "####........####"
 370 ???? F00F     	CHR16X24 "####........####"
 371 ???? F00F     	CHR16X24 "####........####"
 372 ???? F00F     	CHR16X24 "####........####"
 373 ???? F81F     	CHR16X24 "#####......#####"
 374 ???? 7FFF     	CHR16X24 ".###############"
 375 ???? 7FFF     	CHR16X24 ".###############"
 376 ???? 1FFF     	CHR16X24 "...#############"
 377 ???? 000F     	CHR16X24 "............####"
 378 ???? 000F     	CHR16X24 "............####"
 379 ???? 601F     	CHR16X24 ".##........#####"
 380 ???? 7FFE     	CHR16X24 ".##############."
 381 ???? 7FFE     	CHR16X24 ".##############."
 382 ???? 1FF8     	CHR16X24 "...##########..."
 383              	
 384 ???? 01F0     	CHR16X24 ".......#####...."
 385 ???? 03F8     	CHR16X24 "......#######..."
 386 ???? 0788     	CHR16X24 ".....####...#..."
 387 ???? 0780     	CHR16X24 ".....####......."
 388 ???? 3FE0     	CHR16X24 "..#########....."
 389 ???? 3FF0     	CHR16X24 "..##########...."
 390 ???? 3FF0     	CHR16X24 "..##########...."
 391 ???? 0780     	CHR16X24 ".....####......."
 392 ???? 0780     	CHR16X24 ".....####......."
 393 ???? 0780     	CHR16X24 ".....####......."
 394 ???? 0780     	CHR16X24 ".....####......."
 395 ???? 0780     	CHR16X24 ".....####......."
 396 ???? 0780     	CHR16X24 ".....####......."
 397 ???? 0780     	CHR16X24 ".....####......."
 398 ???? 0780     	CHR16X24 ".....####......."
 399 ???? 0780     	CHR16X24 ".....####......."
 400 ???? 0780     	CHR16X24 ".....####......."
 401 ???? 0780     	CHR16X24 ".....####......."
 402 ???? 0780     	CHR16X24 ".....####......."
 403 ???? 0780     	CHR16X24 ".....####......."
 404 ???? 0000     	CHR16X24 "................"
 405 ???? 0000     	CHR16X24 "................"
 406 ???? 0000     	CHR16X24 "................"
 407 ???? 0000     	CHR16X24 "................"
 408              	
 409 ???? 0000     	CHR16X24 "................"
 410 ???? 0000     	CHR16X24 "................"
 411 ???? 0000     	CHR16X24 "................"
 412 ???? 0000     	CHR16X24 "................"
 413 ???? 0000     	CHR16X24 "................"
 414 ???? 0000     	CHR16X24 "................"
 415 ???? C003     	CHR16X24 "##............##"
 416 ???? E007     	CHR16X24 "###..........###"
 417 ???? E007     	CHR16X24 "###..........###"
 418 ???? E007     	CHR16X24 "###..........###"
 419 ???? F18F     	CHR16X24 "####...##...####"
 420 ???? 718E     	CHR16X24 ".###...##...###."
 421 ???? 718E     	CHR16X24 ".###...##...###."
 422 ???? 7BDE     	CHR16X24 ".####.####.####."
 423 ???? 3BDC     	CHR16X24 "..###.####.###.."
 424 ???? 3FFC     	CHR16X24 "..############.."
 425 ???? 1E78     	CHR16X24 "...####..####..."
 426 ???? 1E78     	CHR16X24 "...####..####..."
 427 ???? 0C30     	CHR16X24 "....##....##...."
 428 ???? 0C30     	CHR16X24 "....##....##...."
 429 ???? 0000     	CHR16X24 "................"
 430 ???? 0000     	CHR16X24 "................"
 431 ???? 0000     	CHR16X24 "................"
 432 ???? 0000     	CHR16X24 "................"
 433              	
 434 ???? 000F     	CHR16X24 "............####"
 435 ???? 000F     	CHR16X24 "............####"
 436 ???? 000F     	CHR16X24 "............####"
 437 ???? 000F     	CHR16X24 "............####"
 438 ???? 000F     	CHR16X24 "............####"
 439 ???? 000F     	CHR16X24 "............####"
 440 ???? 1FEF     	CHR16X24 "...########.####"
 441 ???? 7FFF     	CHR16X24 ".###############"
 442 ???? 7FFF     	CHR16X24 ".###############"
 443 ???? F81F     	CHR16X24 "#####......#####"
 444 ???? F00F     	CHR16X24 "####........####"
 445 ???? F00F     	CHR16X24 "####........####"
 446 ???? F00F     	CHR16X24 "####........####"
 447 ???? F00F     	CHR16X24 "####........####"
 448 ???? F00F     	CHR16X24 "####........####"
 449 ???? F00F     	CHR16X24 "####........####"
 450 ???? F81F     	CHR16X24 "#####......#####"
 451 ???? 7FFF     	CHR16X24 ".###############"
 452 ???? 7FFF     	CHR16X24 ".###############"
 453 ???? 1FEF     	CHR16X24 "...########.####"
 454 ???? 0000     	CHR16X24 "................"
 455 ???? 0000     	CHR16X24 "................"
 456 ???? 0000     	CHR16X24 "................"
 457 ???? 0000     	CHR16X24 "................"
 458              	
 459 ???? 0000     	CHR16X24 "................"
 460 ???? 0000     	CHR16X24 "................"
 461 ???? 0000     	CHR16X24 "................"
 462 ???? 0000     	CHR16X24 "................"
 463 ???? 0000     	CHR16X24 "................"
 464 ???? 0000     	CHR16X24 "................"
 465 ???? E007     	CHR16X24 "###..........###"
 466 ???? E007     	CHR16X24 "###..........###"
 467 ???? F00F     	CHR16X24 "####........####"
 468 ???? 700E     	CHR16X24 ".###........###."
 469 ???? 781E     	CHR16X24 ".####......####."
 470 ???? 381C     	CHR16X24 "..###......###.."
 471 ???? 3C3C     	CHR16X24 "..####....####.."
 472 ???? 1C38     	CHR16X24 "...###....###..."
 473 ???? 1E78     	CHR16X24 "...####..####..."
 474 ???? 0E70     	CHR16X24 "....###..###...."
 475 ???? 0FF0     	CHR16X24 "....########...."
 476 ???? 07E0     	CHR16X24 ".....######....."
 477 ???? 03C0     	CHR16X24 "......####......"
 478 ???? 0180     	CHR16X24 ".......##......."
 479 ???? 0000     	CHR16X24 "................"
 480 ???? 0000     	CHR16X24 "................"
 481 ???? 0000     	CHR16X24 "................"
 482 ???? 0000     	CHR16X24 "................"
 483              	
 484 ???? 0000     	CHR16X24 "................"
 485 ???? 0000     	CHR16X24 "................"
 486 ???? 0000     	CHR16X24 "................"
 487 ???? 0000     	CHR16X24 "................"
 488 ???? 0000     	CHR16X24 "................"
 489 ???? 0000     	CHR16X24 "................"
 490 ???? E3F8     	CHR16X24 "###...#######..."
 491 ???? F7FE     	CHR16X24 "####.##########."
 492 ???? FFFE     	CHR16X24 "###############."
 493 ???? FE1F     	CHR16X24 "#######....#####"
 494 ???? FC0F     	CHR16X24 "######......####"
 495 ???? F80F     	CHR16X24 "#####.......####"
 496 ???? F00F     	CHR16X24 "####........####"
 497 ???? F00F     	CHR16X24 "####........####"
 498 ???? F81F     	CHR16X24 "#####......#####"
 499 ???? FFFE     	CHR16X24 "###############."
 500 ???? FFFE     	CHR16X24 "###############."
 501 ???? F7F8     	CHR16X24 "####.########..."
 502 ???? F000     	CHR16X24 "####............"
 503 ???? F000     	CHR16X24 "####............"
 504 ???? F000     	CHR16X24 "####............"
 505 ???? F000     	CHR16X24 "####............"
 506 ???? F000     	CHR16X24 "####............"
 507 ???? F000     	CHR16X24 "####............"
 508              	
 509 ???? F000     	CHR16X24 "####............"
 510 ???? F000     	CHR16X24 "####............"
 511 ???? F000     	CHR16X24 "####............"
 512 ???? F000     	CHR16X24 "####............"
 513 ???? F000     	CHR16X24 "####............"
 514 ???? F000     	CHR16X24 "####............"
 515 ???? F7F8     	CHR16X24 "####.########..."
 516 ???? FFFE     	CHR16X24 "###############."
 517 ???? FFFE     	CHR16X24 "###############."
 518 ???? F81F     	CHR16X24 "#####......#####"
 519 ???? F00F     	CHR16X24 "####........####"
 520 ???? F00F     	CHR16X24 "####........####"
 521 ???? F00F     	CHR16X24 "####........####"
 522 ???? F00F     	CHR16X24 "####........####"
 523 ???? F00F     	CHR16X24 "####........####"
 524 ???? F00F     	CHR16X24 "####........####"
 525 ???? F81F     	CHR16X24 "#####......#####"
 526 ???? FFFE     	CHR16X24 "###############."
 527 ???? EFFE     	CHR16X24 "###.###########."
 528 ???? E7F8     	CHR16X24 "###..########..."
 529 ???? 0000     	CHR16X24 "................"
 530 ???? 0000     	CHR16X24 "................"
 531 ???? 0000     	CHR16X24 "................"
 532 ???? 0000     	CHR16X24 "................"
 533              	
 534 ???? F000     	CHR16X24 "####............"
 535 ???? F000     	CHR16X24 "####............"
 536 ???? F000     	CHR16X24 "####............"
 537 ???? F000     	CHR16X24 "####............"
 538 ???? F000     	CHR16X24 "####............"
 539 ???? F000     	CHR16X24 "####............"
 540 ???? F3F8     	CHR16X24 "####..#######..."
 541 ???? F7FE     	CHR16X24 "####.##########."
 542 ???? FFFE     	CHR16X24 "###############."
 543 ???? FC1F     	CHR16X24 "######.....#####"
 544 ???? F80F     	CHR16X24 "#####.......####"
 545 ???? F00F     	CHR16X24 "####........####"
 546 ???? F00F     	CHR16X24 "####........####"
 547 ???? F00F     	CHR16X24 "####........####"
 548 ???? F00F     	CHR16X24 "####........####"
 549 ???? F00F     	CHR16X24 "####........####"
 550 ???? F00F     	CHR16X24 "####........####"
 551 ???? F00F     	CHR16X24 "####........####"
 552 ???? F00F     	CHR16X24 "####........####"
 553 ???? F00F     	CHR16X24 "####........####"
 554 ???? 0000     	CHR16X24 "................"
 555 ???? 0000     	CHR16X24 "................"
 556 ???? 0000     	CHR16X24 "................"
 557 ???? 0000     	CHR16X24 "................"
 558              	
 559 ???? 0000     	CHR16X24 "................"
 560 ???? 0000     	CHR16X24 "................"
 561 ???? 0000     	CHR16X24 "................"
 562 ???? 0000     	CHR16X24 "................"
 563 ???? 0000     	CHR16X24 "................"
 564 ???? 0000     	CHR16X24 "................"
 565 ???? F00F     	CHR16X24 "####........####"
 566 ???? F81F     	CHR16X24 "#####......#####"
 567 ???? 7C3E     	CHR16X24 ".#####....#####."
 568 ???? 3E7C     	CHR16X24 "..#####..#####.."
 569 ???? 1FF8     	CHR16X24 "...##########..."
 570 ???? 0FF0     	CHR16X24 "....########...."
 571 ???? 07E0     	CHR16X24 ".....######....."
 572 ???? 07E0     	CHR16X24 ".....######....."
 573 ???? 0FF0     	CHR16X24 "....########...."
 574 ???? 1FF8     	CHR16X24 "...##########..."
 575 ???? 3E7C     	CHR16X24 "..#####..#####.."
 576 ???? 7C3E     	CHR16X24 ".#####....#####."
 577 ???? F81F     	CHR16X24 "#####......#####"
 578 ???? F00F     	CHR16X24 "####........####"
 579 ???? 0000     	CHR16X24 "................"
 580 ???? 0000     	CHR16X24 "................"
 581 ???? 0000     	CHR16X24 "................"
 582 ???? 0000     	CHR16X24 "................"
 583              	
 584 ???? 0000     	CHR16X24 "................"
 585 ???? 0000     	CHR16X24 "................"
 586 ???? 0000     	CHR16X24 "................"
 587 ???? 0000     	CHR16X24 "................"
 588 ???? 0000     	CHR16X24 "................"
 589 ???? 0000     	CHR16X24 "................"
 590 ???? F00F     	CHR16X24 "####........####"
 591 ???? F00F     	CHR16X24 "####........####"
 592 ???? F00F     	CHR16X24 "####........####"
 593 ???? F00F     	CHR16X24 "####........####"
 594 ???? F00F     	CHR16X24 "####........####"
 595 ???? F00F     	CHR16X24 "####........####"
 596 ???? F00F     	CHR16X24 "####........####"
 597 ???? F00F     	CHR16X24 "####........####"
 598 ???? F00F     	CHR16X24 "####........####"
 599 ???? F00F     	CHR16X24 "####........####"
 600 ???? F81F     	CHR16X24 "#####......#####"
 601 ???? 7FFE     	CHR16X24 ".##############."
 602 ???? 7FFE     	CHR16X24 ".##############."
 603 ???? 1FF8     	CHR16X24 "...##########..."
 604 ???? 0000     	CHR16X24 "................"
 605 ???? 0000     	CHR16X24 "................"
 606 ???? 0000     	CHR16X24 "................"
 607 ???? 0000     	CHR16X24 "................"
 608              	
 609 ???? 0000     	CHR16X24 "................"
 610 ???? 0000     	CHR16X24 "................"
 611 ???? 0000     	CHR16X24 "................"
 612 ???? 0000     	CHR16X24 "................"
 613 ???? 0000     	CHR16X24 "................"
 614 ???? 0000     	CHR16X24 "................"
 615 ???? 1FC7     	CHR16X24 "...#######...###"
 616 ???? 7FEF     	CHR16X24 ".##########.####"
 617 ???? 7FFF     	CHR16X24 ".###############"
 618 ???? F83F     	CHR16X24 "#####.....######"
 619 ???? F01F     	CHR16X24 "####.......#####"
 620 ???? F00F     	CHR16X24 "####........####"
 621 ???? F00F     	CHR16X24 "####........####"
 622 ???? F00F     	CHR16X24 "####........####"
 623 ???? F81F     	CHR16X24 "#####......#####"
 624 ???? 7FFF     	CHR16X24 ".###############"
 625 ???? 7FFF     	CHR16X24 ".###############"
 626 ???? 1FEF     	CHR16X24 "...########.####"
 627 ???? 000F     	CHR16X24 "............####"
 628 ???? 000F     	CHR16X24 "............####"
 629 ???? 000F     	CHR16X24 "............####"
 630 ???? 000F     	CHR16X24 "............####"
 631 ???? 000F     	CHR16X24 "............####"
 632 ???? 000E     	CHR16X24 "............###."
 633              	
 634 ???? 1FF8     	CHR16X24 "...##########..."
 635 ???? 7FFE     	CHR16X24 ".##############."
 636 ???? 7FFE     	CHR16X24 ".##############."
 637 ???? F81F     	CHR16X24 "#####......#####"
 638 ???? F00F     	CHR16X24 "####........####"
 639 ???? F00F     	CHR16X24 "####........####"
 640 ???? F00F     	CHR16X24 "####........####"
 641 ???? F00F     	CHR16X24 "####........####"
 642 ???? F00F     	CHR16X24 "####........####"
 643 ???? F00F     	CHR16X24 "####........####"
 644 ???? F00F     	CHR16X24 "####........####"
 645 ???? F00F     	CHR16X24 "####........####"
 646 ???? F00F     	CHR16X24 "####........####"
 647 ???? F00F     	CHR16X24 "####........####"
 648 ???? F00F     	CHR16X24 "####........####"
 649 ???? F00F     	CHR16X24 "####........####"
 650 ???? F81F     	CHR16X24 "#####......#####"
 651 ???? 7FFE     	CHR16X24 ".##############."
 652 ???? 7FFE     	CHR16X24 ".##############."
 653 ???? 1FF8     	CHR16X24 "...##########..."
 654 ???? 0000     	CHR16X24 "................"
 655 ???? 0000     	CHR16X24 "................"
 656 ???? 0000     	CHR16X24 "................"
 657 ???? 0000     	CHR16X24 "................"
 658              	
 659 ???? 01E0     	CHR16X24 ".......####....."
 660 ???? 03E0     	CHR16X24 "......#####....."
 661 ???? 03E0     	CHR16X24 "......#####....."
 662 ???? 07E0     	CHR16X24 ".....######....."
 663 ???? 07E0     	CHR16X24 ".....######....."
 664 ???? 05E0     	CHR16X24 ".....#.####....."
 665 ???? 01E0     	CHR16X24 ".......####....."
 666 ???? 01E0     	CHR16X24 ".......####....."
 667 ???? 01E0     	CHR16X24 ".......####....."
 668 ???? 01E0     	CHR16X24 ".......####....."
 669 ???? 01E0     	CHR16X24 ".......####....."
 670 ???? 01E0     	CHR16X24 ".......####....."
 671 ???? 01E0     	CHR16X24 ".......####....."
 672 ???? 01E0     	CHR16X24 ".......####....."
 673 ???? 01E0     	CHR16X24 ".......####....."
 674 ???? 01E0     	CHR16X24 ".......####....."
 675 ???? 01E0     	CHR16X24 ".......####....."
 676 ???? 01E0     	CHR16X24 ".......####....."
 677 ???? 01E0     	CHR16X24 ".......####....."
 678 ???? 01E0     	CHR16X24 ".......####....."
 679 ???? 0000     	CHR16X24 "................"
 680 ???? 0000     	CHR16X24 "................"
 681 ???? 0000     	CHR16X24 "................"
 682 ???? 0000     	CHR16X24 "................"
 683              	
 684 ???? 1FF8     	CHR16X24 "...##########..."
 685 ???? 7FFE     	CHR16X24 ".##############."
 686 ???? 7FFE     	CHR16X24 ".##############."
 687 ???? F01F     	CHR16X24 "####.......#####"
 688 ???? 000F     	CHR16X24 "............####"
 689 ???? 000F     	CHR16X24 "............####"
 690 ???? 000F     	CHR16X24 "............####"
 691 ???? 000F     	CHR16X24 "............####"
 692 ???? 001F     	CHR16X24 "...........#####"
 693 ???? 1FFE     	CHR16X24 "...############."
 694 ???? 7FFE     	CHR16X24 ".##############."
 695 ???? 7FF8     	CHR16X24 ".############..."
 696 ???? F800     	CHR16X24 "#####..........."
 697 ???? F000     	CHR16X24 "####............"
 698 ???? F000     	CHR16X24 "####............"
 699 ???? F000     	CHR16X24 "####............"
 700 ???? F000     	CHR16X24 "####............"
 701 ???? FFFF     	CHR16X24 "################"
 702 ???? FFFF     	CHR16X24 "################"
 703 ???? FFFF     	CHR16X24 "################"
 704 ???? 0000     	CHR16X24 "................"
 705 ???? 0000     	CHR16X24 "................"
 706 ???? 0000     	CHR16X24 "................"
 707 ???? 0000     	CHR16X24 "................"
 708              	
 709 ???? 1FF8     	CHR16X24 "...##########..."
 710 ???? 7FFE     	CHR16X24 ".##############."
 711 ???? 7FFE     	CHR16X24 ".##############."
 712 ???? F01F     	CHR16X24 "####.......#####"
 713 ???? 000F     	CHR16X24 "............####"
 714 ???? 000F     	CHR16X24 "............####"
 715 ???? 000F     	CHR16X24 "............####"
 716 ???? 000F     	CHR16X24 "............####"
 717 ???? 001F     	CHR16X24 "...........#####"
 718 ???? 07FE     	CHR16X24 ".....##########."
 719 ???? 07FC     	CHR16X24 ".....#########.."
 720 ???? 07FE     	CHR16X24 ".....##########."
 721 ???? 001F     	CHR16X24 "...........#####"
 722 ???? 000F     	CHR16X24 "............####"
 723 ???? 000F     	CHR16X24 "............####"
 724 ???? 000F     	CHR16X24 "............####"
 725 ???? F01F     	CHR16X24 "####.......#####"
 726 ???? 7FFE     	CHR16X24 ".##############."
 727 ???? 7FFE     	CHR16X24 ".##############."
 728 ???? 1FF8     	CHR16X24 "...##########..."
 729 ???? 0000     	CHR16X24 "................"
 730 ???? 0000     	CHR16X24 "................"
 731 ???? 0000     	CHR16X24 "................"
 732 ???? 0000     	CHR16X24 "................"
 733              	
 734 ???? F0F0     	CHR16X24 "####....####...."
 735 ???? F0F0     	CHR16X24 "####....####...."
 736 ???? F0F0     	CHR16X24 "####....####...."
 737 ???? F0F0     	CHR16X24 "####....####...."
 738 ???? F0F0     	CHR16X24 "####....####...."
 739 ???? F0F0     	CHR16X24 "####....####...."
 740 ???? F0F0     	CHR16X24 "####....####...."
 741 ???? F0F0     	CHR16X24 "####....####...."
 742 ???? F0F0     	CHR16X24 "####....####...."
 743 ???? FFFF     	CHR16X24 "################"
 744 ???? FFFF     	CHR16X24 "################"
 745 ???? FFFF     	CHR16X24 "################"
 746 ???? 00F0     	CHR16X24 "........####...."
 747 ???? 00F0     	CHR16X24 "........####...."
 748 ???? 00F0     	CHR16X24 "........####...."
 749 ???? 00F0     	CHR16X24 "........####...."
 750 ???? 00F0     	CHR16X24 "........####...."
 751 ???? 00F0     	CHR16X24 "........####...."
 752 ???? 00F0     	CHR16X24 "........####...."
 753 ???? 00F0     	CHR16X24 "........####...."
 754 ???? 0000     	CHR16X24 "................"
 755 ???? 0000     	CHR16X24 "................"
 756 ???? 0000     	CHR16X24 "................"
 757 ???? 0000     	CHR16X24 "................"
 758              	
 759 ???? FFFF     	CHR16X24 "################"
 760 ???? FFFF     	CHR16X24 "################"
 761 ???? FFFF     	CHR16X24 "################"
 762 ???? F000     	CHR16X24 "####............"
 763 ???? F000     	CHR16X24 "####............"
 764 ???? F000     	CHR16X24 "####............"
 765 ???? F000     	CHR16X24 "####............"
 766 ???? F000     	CHR16X24 "####............"
 767 ???? F000     	CHR16X24 "####............"
 768 ???? FFF8     	CHR16X24 "#############..."
 769 ???? FFFE     	CHR16X24 "###############."
 770 ???? FFFE     	CHR16X24 "###############."
 771 ???? 001F     	CHR16X24 "...........#####"
 772 ???? 000F     	CHR16X24 "............####"
 773 ???? 000F     	CHR16X24 "............####"
 774 ???? 000F     	CHR16X24 "............####"
 775 ???? F01F     	CHR16X24 "####.......#####"
 776 ???? 7FFE     	CHR16X24 ".##############."
 777 ???? 7FFE     	CHR16X24 ".##############."
 778 ???? 1FF8     	CHR16X24 "...##########..."
 779 ???? 0000     	CHR16X24 "................"
 780 ???? 0000     	CHR16X24 "................"
 781 ???? 0000     	CHR16X24 "................"
 782 ???? 0000     	CHR16X24 "................"
 783              	
 784 ???? 1FF8     	CHR16X24 "...##########..."
 785 ???? 7FFE     	CHR16X24 ".##############."
 786 ???? 7FFE     	CHR16X24 ".##############."
 787 ???? F80F     	CHR16X24 "#####.......####"
 788 ???? F000     	CHR16X24 "####............"
 789 ???? F000     	CHR16X24 "####............"
 790 ???? F000     	CHR16X24 "####............"
 791 ???? F000     	CHR16X24 "####............"
 792 ???? F800     	CHR16X24 "#####..........."
 793 ???? FFF8     	CHR16X24 "#############..."
 794 ???? FFFE     	CHR16X24 "###############."
 795 ???? FFFE     	CHR16X24 "###############."
 796 ???? F81F     	CHR16X24 "#####......#####"
 797 ???? F00F     	CHR16X24 "####........####"
 798 ???? F00F     	CHR16X24 "####........####"
 799 ???? F00F     	CHR16X24 "####........####"
 800 ???? F81F     	CHR16X24 "#####......#####"
 801 ???? 7FFE     	CHR16X24 ".##############."
 802 ???? 7FFE     	CHR16X24 ".##############."
 803 ???? 1FF8     	CHR16X24 "...##########..."
 804 ???? 0000     	CHR16X24 "................"
 805 ???? 0000     	CHR16X24 "................"
 806 ???? 0000     	CHR16X24 "................"
 807 ???? 0000     	CHR16X24 "................"
 808              	
 809 ???? FFFF     	CHR16X24 "################"
 810 ???? FFFF     	CHR16X24 "################"
 811 ???? FFFF     	CHR16X24 "################"
 812 ???? 0007     	CHR16X24 ".............###"
 813 ???? 000F     	CHR16X24 "............####"
 814 ???? 001F     	CHR16X24 "...........#####"
 815 ???? 003E     	CHR16X24 "..........#####."
 816 ???? 007C     	CHR16X24 ".........#####.."
 817 ???? 00F8     	CHR16X24 "........#####..."
 818 ???? 01F0     	CHR16X24 ".......#####...."
 819 ???? 03E0     	CHR16X24 "......#####....."
 820 ???? 07C0     	CHR16X24 ".....#####......"
 821 ???? 0F80     	CHR16X24 "....#####......."
 822 ???? 1F00     	CHR16X24 "...#####........"
 823 ???? 3E00     	CHR16X24 "..#####........."
 824 ???? 7C00     	CHR16X24 ".#####.........."
 825 ???? F800     	CHR16X24 "#####..........."
 826 ???? F000     	CHR16X24 "####............"
 827 ???? E000     	CHR16X24 "###............."
 828 ???? C000     	CHR16X24 "##.............."
 829 ???? 0000     	CHR16X24 "................"
 830 ???? 0000     	CHR16X24 "................"
 831 ???? 0000     	CHR16X24 "................"
 832 ???? 0000     	CHR16X24 "................"
 833              	
 834 ???? 1FF8     	CHR16X24 "...##########..."
 835 ???? 7FFE     	CHR16X24 ".##############."
 836 ???? 7FFE     	CHR16X24 ".##############."
 837 ???? F81F     	CHR16X24 "#####......#####"
 838 ???? F00F     	CHR16X24 "####........####"
 839 ???? F00F     	CHR16X24 "####........####"
 840 ???? F00F     	CHR16X24 "####........####"
 841 ???? F00F     	CHR16X24 "####........####"
 842 ???? F81F     	CHR16X24 "#####......#####"
 843 ???? 7FFE     	CHR16X24 ".##############."
 844 ???? 3FFC     	CHR16X24 "..############.."
 845 ???? 7FFE     	CHR16X24 ".##############."
 846 ???? F81F     	CHR16X24 "#####......#####"
 847 ???? F00F     	CHR16X24 "####........####"
 848 ???? F00F     	CHR16X24 "####........####"
 849 ???? F00F     	CHR16X24 "####........####"
 850 ???? F81F     	CHR16X24 "#####......#####"
 851 ???? 7FFE     	CHR16X24 ".##############."
 852 ???? 7FFE     	CHR16X24 ".##############."
 853 ???? 1FF8     	CHR16X24 "...##########..."
 854 ???? 0000     	CHR16X24 "................"
 855 ???? 0000     	CHR16X24 "................"
 856 ???? 0000     	CHR16X24 "................"
 857 ???? 0000     	CHR16X24 "................"
 858              	
 859 ???? 1FF8     	CHR16X24 "...##########..."
 860 ???? 7FFE     	CHR16X24 ".##############."
 861 ???? 7FFE     	CHR16X24 ".##############."
 862 ???? F81F     	CHR16X24 "#####......#####"
 863 ???? F00F     	CHR16X24 "####........####"
 864 ???? F00F     	CHR16X24 "####........####"
 865 ???? F00F     	CHR16X24 "####........####"
 866 ???? F00F     	CHR16X24 "####........####"
 867 ???? F81F     	CHR16X24 "#####......#####"
 868 ???? 7FFF     	CHR16X24 ".###############"
 869 ???? 7FFF     	CHR16X24 ".###############"
 870 ???? 1FEF     	CHR16X24 "...########.####"
 871 ???? 000F     	CHR16X24 "............####"
 872 ???? 000F     	CHR16X24 "............####"
 873 ???? 000F     	CHR16X24 "............####"
 874 ???? 000F     	CHR16X24 "............####"
 875 ???? F01F     	CHR16X24 "####.......#####"
 876 ???? 7FFE     	CHR16X24 ".##############."
 877 ???? 7FFE     	CHR16X24 ".##############."
 878 ???? 1FF8     	CHR16X24 "...##########..."
 879 ???? 0000     	CHR16X24 "................"
 880 ???? 0000     	CHR16X24 "................"
 881 ???? 0000     	CHR16X24 "................"
 882 ???? 0000     	CHR16X24 "................"
 883              	
 884 ???? 0078     	CHR16X24 ".........####..."
 885 ???? 0078     	CHR16X24 ".........####..."
 886 ???? 0078     	CHR16X24 ".........####..."
 887 ???? 0078     	CHR16X24 ".........####..."
 888 ???? 0000     	CHR16X24 "................"
 889 ???? 0000     	CHR16X24 "................"
 890 ???? 0000     	CHR16X24 "................"
 891 ???? 0078     	CHR16X24 ".........####..."
 892 ???? 0078     	CHR16X24 ".........####..."
 893 ???? 0078     	CHR16X24 ".........####..."
 894 ???? 0078     	CHR16X24 ".........####..."
 895 ???? 0078     	CHR16X24 ".........####..."
 896 ???? 0078     	CHR16X24 ".........####..."
 897 ???? 0078     	CHR16X24 ".........####..."
 898 ???? 0078     	CHR16X24 ".........####..."
 899 ???? 0078     	CHR16X24 ".........####..."
 900 ???? 0078     	CHR16X24 ".........####..."
 901 ???? 0078     	CHR16X24 ".........####..."
 902 ???? 0078     	CHR16X24 ".........####..."
 903 ???? 0078     	CHR16X24 ".........####..."
 904 ???? 1CF8     	CHR16X24 "...###..#####..."
 905 ???? 1FF0     	CHR16X24 "...#########...."
 906 ???? 0FF0     	CHR16X24 "....########...."
 907 ???? 07C0     	CHR16X24 ".....#####......"
 908              	
 909 ???? 0000     	CHR16X24 "................"
 910 ???? 0000     	CHR16X24 "................"
 911 ???? 0000     	CHR16X24 "................"
 912 ???? 0000     	CHR16X24 "................"
 913 ???? 0000     	CHR16X24 "................"
 914 ???? 0000     	CHR16X24 "................"
 915 ???? 0000     	CHR16X24 "................"
 916 ???? 0000     	CHR16X24 "................"
 917 ???? 0000     	CHR16X24 "................"
 918 ???? 0000     	CHR16X24 "................"
 919 ???? 0000     	CHR16X24 "................"
 920 ???? 7FFF     	CHR16X24 ".###############"
 921 ???? 7FFF     	CHR16X24 ".###############"
 922 ???? FFFE     	CHR16X24 "###############."
 923 ???? FFFE     	CHR16X24 "###############."
 924 ???? 0000     	CHR16X24 "................"
 925 ???? 0000     	CHR16X24 "................"
 926 ???? 0000     	CHR16X24 "................"
 927 ???? 0000     	CHR16X24 "................"
 928 ???? 0000     	CHR16X24 "................"
 929 ???? 0000     	CHR16X24 "................"
 930 ???? 0000     	CHR16X24 "................"
 931 ???? 0000     	CHR16X24 "................"
 932 ???? 0000     	CHR16X24 "................"
 933              	
 934 ???? F000     	CHR16X24 "####............"
 935 ???? F000     	CHR16X24 "####............"
 936 ???? F000     	CHR16X24 "####............"
 937 ???? F000     	CHR16X24 "####............"
 938 ???? F000     	CHR16X24 "####............"
 939 ???? F000     	CHR16X24 "####............"
 940 ???? F03C     	CHR16X24 "####......####.."
 941 ???? F0FC     	CHR16X24 "####....######.."
 942 ???? F3FC     	CHR16X24 "####..########.."
 943 ???? FFE0     	CHR16X24 "###########....."
 944 ???? FF80     	CHR16X24 "#########......."
 945 ???? FF00     	CHR16X24 "########........"
 946 ???? FF00     	CHR16X24 "########........"
 947 ???? FFC0     	CHR16X24 "##########......"
 948 ???? FFF0     	CHR16X24 "############...."
 949 ???? F3FC     	CHR16X24 "####..########.."
 950 ???? F0FF     	CHR16X24 "####....########"
 951 ???? F03F     	CHR16X24 "####......######"
 952 ???? F00F     	CHR16X24 "####........####"
 953 ???? F003     	CHR16X24 "####..........##"
 954 ???? 0000     	CHR16X24 "................"
 955 ???? 0000     	CHR16X24 "................"
 956 ???? 0000     	CHR16X24 "................"
 957 ???? 0000     	CHR16X24 "................"
 958              	
 959 ???? 0000     	CHR16X24 "................"
 960 ???? 0000     	CHR16X24 "................"
 961 ???? 0000     	CHR16X24 "................"
 962 ???? 0000     	CHR16X24 "................"
 963 ???? 0000     	CHR16X24 "................"
 964 ???? 0000     	CHR16X24 "................"
 965 ???? 0000     	CHR16X24 "................"
 966 ???? 0000     	CHR16X24 "................"
 967 ???? 0000     	CHR16X24 "................"
 968 ???? 0000     	CHR16X24 "................"
 969 ???? 0000     	CHR16X24 "................"
 970 ???? 0000     	CHR16X24 "................"
 971 ???? 0000     	CHR16X24 "................"
 972 ???? 0000     	CHR16X24 "................"
 973 ???? 0600     	CHR16X24 ".....##........."
 974 ???? 0F00     	CHR16X24 "....####........"
 975 ???? 1F80     	CHR16X24 "...######......."
 976 ???? 1F80     	CHR16X24 "...######......."
 977 ???? 0F00     	CHR16X24 "....####........"
 978 ???? 0600     	CHR16X24 ".....##........."
 979 ???? 0000     	CHR16X24 "................"
 980 ???? 0000     	CHR16X24 "................"
 981 ???? 0000     	CHR16X24 "................"
 982 ???? 0000     	CHR16X24 "................"
 983              	
 984 ???? 0000     	CHR16X24 "................"
 985 ???? 0000     	CHR16X24 "................"
 986 ???? 0000     	CHR16X24 "................"
 987 ???? 0000     	CHR16X24 "................"
 988 ???? 0000     	CHR16X24 "................"
 989 ???? 0000     	CHR16X24 "................"
 990 ???? FFFF     	CHR16X24 "################"
 991 ???? FFFF     	CHR16X24 "################"
 992 ???? FFFF     	CHR16X24 "################"
 993 ???? 001F     	CHR16X24 "...........#####"
 994 ???? 003F     	CHR16X24 "..........######"
 995 ???? 00FE     	CHR16X24 "........#######."
 996 ???? 03F8     	CHR16X24 "......#######..."
 997 ???? 0FE0     	CHR16X24 "....#######....."
 998 ???? 3F80     	CHR16X24 "..#######......."
 999 ???? FE00     	CHR16X24 "#######........."
 1000 ???? F800     	CHR16X24 "#####..........."
 1001 ???? FFFF     	CHR16X24 "################"
 1002 ???? FFFF     	CHR16X24 "################"
 1003 ???? FFFF     	CHR16X24 "################"
 1004 ???? 0000     	CHR16X24 "................"
 1005 ???? 0000     	CHR16X24 "................"
 1006 ???? 0000     	CHR16X24 "................"
 1007 ???? 0000     	CHR16X24 "................"
 1008              	
 1009 ???? 000F     	CHR16X24 "............####"
 1010 ???? 001F     	CHR16X24 "...........#####"
 1011 ???? 001F     	CHR16X24 "...........#####"
 1012 ???? 003E     	CHR16X24 "..........#####."
 1013 ???? 007C     	CHR16X24 ".........#####.."
 1014 ???? 007C     	CHR16X24 ".........#####.."
 1015 ???? 00F8     	CHR16X24 "........#####..."
 1016 ???? 01F0     	CHR16X24 ".......#####...."
 1017 ???? 01F0     	CHR16X24 ".......#####...."
 1018 ???? 03E0     	CHR16X24 "......#####....."
 1019 ???? 07C0     	CHR16X24 ".....#####......"
 1020 ???? 07C0     	CHR16X24 ".....#####......"
 1021 ???? 0F80     	CHR16X24 "....#####......."
 1022 ???? 1F00     	CHR16X24 "...#####........"
 1023 ???? 1F00     	CHR16X24 "...#####........"
 1024 ???? 3E00     	CHR16X24 "..#####........."
 1025 ???? 7C00     	CHR16X24 ".#####.........."
 1026 ???? 7C00     	CHR16X24 ".#####.........."
 1027 ???? F800     	CHR16X24 "#####..........."
 1028 ???? F800     	CHR16X24 "#####..........."
 1029 ???? 0000     	CHR16X24 "................"
 1030 ???? 0000     	CHR16X24 "................"
 1031 ???? 0000     	CHR16X24 "................"
 1032 ???? 0000     	CHR16X24 "................"
 1033              	
 1034 ???? 0000     	CHR16X24 "................"
 1035 ???? 0000     	CHR16X24 "................"
 1036 ???? 0000     	CHR16X24 "................"
 1037 ???? 0700     	CHR16X24 ".....###........"
 1038 ???? 0F80     	CHR16X24 "....#####......."
 1039 ???? 1FC0     	CHR16X24 "...#######......"
 1040 ???? 1FC0     	CHR16X24 "...#######......"
 1041 ???? 1FC0     	CHR16X24 "...#######......"
 1042 ???? 0F80     	CHR16X24 "....#####......."
 1043 ???? 0700     	CHR16X24 ".....###........"
 1044 ???? 0000     	CHR16X24 "................"
 1045 ???? 0000     	CHR16X24 "................"
 1046 ???? 0000     	CHR16X24 "................"
 1047 ???? 0700     	CHR16X24 ".....###........"
 1048 ???? 0F80     	CHR16X24 "....#####......."
 1049 ???? 1FC0     	CHR16X24 "...#######......"
 1050 ???? 1FC0     	CHR16X24 "...#######......"
 1051 ???? 1FC0     	CHR16X24 "...#######......"
 1052 ???? 0F80     	CHR16X24 "....#####......."
 1053 ???? 0780     	CHR16X24 ".....####......."
 1054 ???? 0380     	CHR16X24 "......###......."
 1055 ???? 0700     	CHR16X24 ".....###........"
 1056 ???? 0E00     	CHR16X24 "....###........."
 1057 ???? 1C00     	CHR16X24 "...###.........."
 1058              	
 1059 ???? 0000     	CHR16X24 "................"
 1060 ???? 0000     	CHR16X24 "................"
 1061 ???? 0000     	CHR16X24 "................"
 1062 ???? 0700     	CHR16X24 ".....###........"
 1063 ???? 0F80     	CHR16X24 "....#####......."
 1064 ???? 1FC0     	CHR16X24 "...#######......"
 1065 ???? 1FC0     	CHR16X24 "...#######......"
 1066 ???? 1FC0     	CHR16X24 "...#######......"
 1067 ???? 0F80     	CHR16X24 "....#####......."
 1068 ???? 0700     	CHR16X24 ".....###........"
 1069 ???? 0000     	CHR16X24 "................"
 1070 ???? 0000     	CHR16X24 "................"
 1071 ???? 0000     	CHR16X24 "................"
 1072 ???? 0700     	CHR16X24 ".....###........"
 1073 ???? 0F80     	CHR16X24 "....#####......."
 1074 ???? 1FC0     	CHR16X24 "...#######......"
 1075 ???? 1FC0     	CHR16X24 "...#######......"
 1076 ???? 1FC0     	CHR16X24 "...#######......"
 1077 ???? 0F80     	CHR16X24 "....#####......."
 1078 ???? 0700     	CHR16X24 ".....###........"
 1079 ???? 0000     	CHR16X24 "................"
 1080 ???? 0000     	CHR16X24 "................"
 1081 ???? 0000     	CHR16X24 "................"
 1082 ???? 0000     	CHR16X24 "................"
 1083              	
 1084 ???? 0180     	CHR16X24 ".......##......."
 1085 ???? 03C0     	CHR16X24 "......####......"
 1086 ???? 03C0     	CHR16X24 "......####......"
 1087 ???? 07E0     	CHR16X24 ".....######....."
 1088 ???? 07E0     	CHR16X24 ".....######....."
 1089 ???? 07E0     	CHR16X24 ".....######....."
 1090 ???? 07E0     	CHR16X24 ".....######....."
 1091 ???? 07E0     	CHR16X24 ".....######....."
 1092 ???? 03C0     	CHR16X24 "......####......"
 1093 ???? 03C0     	CHR16X24 "......####......"
 1094 ???? 0180     	CHR16X24 ".......##......."
 1095 ???? 0180     	CHR16X24 ".......##......."
 1096 ???? 0180     	CHR16X24 ".......##......."
 1097 ???? 0000     	CHR16X24 "................"
 1098 ???? 0000     	CHR16X24 "................"
 1099 ???? 0000     	CHR16X24 "................"
 1100 ???? 03C0     	CHR16X24 "......####......"
 1101 ???? 03C0     	CHR16X24 "......####......"
 1102 ???? 03C0     	CHR16X24 "......####......"
 1103 ???? 03C0     	CHR16X24 "......####......"
 1104 ???? 0000     	CHR16X24 "................"
 1105 ???? 0000     	CHR16X24 "................"
 1106 ???? 0000     	CHR16X24 "................"
 1107 ???? 0000     	CHR16X24 "................"
 1108              	
 1109 ???? 0000     	CHR16X24 "................"
 1110 ???? 0000     	CHR16X24 "................"
 1111 ???? 0000     	CHR16X24 "................"
 1112 ???? 0000     	CHR16X24 "................"
 1113 ???? 0000     	CHR16X24 "................"
 1114 ???? 0000     	CHR16X24 "................"
 1115 ???? 03C0     	CHR16X24 "......####......"
 1116 ???? 03C0     	CHR16X24 "......####......"
 1117 ???? 03C0     	CHR16X24 "......####......"
 1118 ???? 03C0     	CHR16X24 "......####......"
 1119 ???? 03C0     	CHR16X24 "......####......"
 1120 ???? 7FFE     	CHR16X24 ".##############."
 1121 ???? 7FFE     	CHR16X24 ".##############."
 1122 ???? 7FFE     	CHR16X24 ".##############."
 1123 ???? 7FFE     	CHR16X24 ".##############."
 1124 ???? 03C0     	CHR16X24 "......####......"
 1125 ???? 03C0     	CHR16X24 "......####......"
 1126 ???? 03C0     	CHR16X24 "......####......"
 1127 ???? 03C0     	CHR16X24 "......####......"
 1128 ???? 03C0     	CHR16X24 "......####......"
 1129 ???? 0000     	CHR16X24 "................"
 1130 ???? 0000     	CHR16X24 "................"
 1131 ???? 0000     	CHR16X24 "................"
 1132 ???? 0000     	CHR16X24 "................"
 1133              	
 1134 ???? 1FF8     	CHR16X24 "...##########..."
 1135 ???? 7FFE     	CHR16X24 ".##############."
 1136 ???? 7FFE     	CHR16X24 ".##############."
 1137 ???? F00F     	CHR16X24 "####........####"
 1138 ???? E007     	CHR16X24 "###..........###"
 1139 ???? E007     	CHR16X24 "###..........###"
 1140 ???? E1C7     	CHR16X24 "###....###...###"
 1141 ???? E3E7     	CHR16X24 "###...#####..###"
 1142 ???? E3E7     	CHR16X24 "###...#####..###"
 1143 ???? E3E7     	CHR16X24 "###...#####..###"
 1144 ???? E3FF     	CHR16X24 "###...##########"
 1145 ???? E3FE     	CHR16X24 "###...#########."
 1146 ???? E3FE     	CHR16X24 "###...#########."
 1147 ???? E1F8     	CHR16X24 "###....######..."
 1148 ???? E000     	CHR16X24 "###............."
 1149 ???? E000     	CHR16X24 "###............."
 1150 ???? F00F     	CHR16X24 "####........####"
 1151 ???? 7FFE     	CHR16X24 ".##############."
 1152 ???? 7FFE     	CHR16X24 ".##############."
 1153 ???? 1FF8     	CHR16X24 "...##########..."
 1154 ???? 0000     	CHR16X24 "................"
 1155 ???? 0000     	CHR16X24 "................"
 1156 ???? 0000     	CHR16X24 "................"
 1157 ???? 0000     	CHR16X24 "................"
 1158              	
 1159 ???? 0000     	CHR16X24 "................"
 1160 ???? 0000     	CHR16X24 "................"
 1161 ???? 0000     	CHR16X24 "................"
 1162 ???? 0000     	CHR16X24 "................"
 1163 ???? 0000     	CHR16X24 "................"
 1164 ???? 0000     	CHR16X24 "................"
 1165 ???? 0000     	CHR16X24 "................"
 1166 ???? 0830     	CHR16X24 "....#.....##...."
 1167 ???? 1C78     	CHR16X24 "...###...####..."
 1168 ???? 1EF0     	CHR16X24 "...####.####...."
 1169 ???? 0FE0     	CHR16X24 "....#######....."
 1170 ???? 07C0     	CHR16X24 ".....#####......"
 1171 ???? 03E0     	CHR16X24 "......#####....."
 1172 ???? 07F0     	CHR16X24 ".....#######...."
 1173 ???? 0F78     	CHR16X24 "....####.####..."
 1174 ???? 1E38     	CHR16X24 "...####...###..."
 1175 ???? 0C10     	CHR16X24 "....##.....#...."
 1176 ???? 0000     	CHR16X24 "................"
 1177 ???? 0000     	CHR16X24 "................"
 1178 ???? 0000     	CHR16X24 "................"
 1179 ???? 0000     	CHR16X24 "................"
 1180 ???? 0000     	CHR16X24 "................"
 1181 ???? 0000     	CHR16X24 "................"
 1182 ???? 0000     	CHR16X24 "................"
 1183              	
 1184 ???? 0000     	CHR16X24 "................"
 1185 ???? 0000     	CHR16X24 "................"
 1186 ???? 0000     	CHR16X24 "................"
 1187 ???? 0000     	CHR16X24 "................"
 1188 ???? 0000     	CHR16X24 "................"
 1189 ???? 0000     	CHR16X24 "................"
 1190 ???? 0000     	CHR16X24 "................"
 1191 ???? 0000     	CHR16X24 "................"
 1192 ???? 0000     	CHR16X24 "................"
 1193 ???? 0000     	CHR16X24 "................"
 1194 ???? 0000     	CHR16X24 "................"
 1195 ???? 0000     	CHR16X24 "................"
 1196 ???? 0000     	CHR16X24 "................"
 1197 ???? 0700     	CHR16X24 ".....###........"
 1198 ???? 0F80     	CHR16X24 "....#####......."
 1199 ???? 1FC0     	CHR16X24 "...#######......"
 1200 ???? 1FC0     	CHR16X24 "...#######......"
 1201 ???? 1FC0     	CHR16X24 "...#######......"
 1202 ???? 0FC0     	CHR16X24 "....######......"
 1203 ???? 07C0     	CHR16X24 ".....#####......"
 1204 ???? 0380     	CHR16X24 "......###......."
 1205 ???? 0700     	CHR16X24 ".....###........"
 1206 ???? 0E00     	CHR16X24 "....###........."
 1207 ???? 1C00     	CHR16X24 "...###.........."
 1208              	
 1209 ???? 1FF8     	CHR16X24 "...##########..."
 1210 ???? 7FFE     	CHR16X24 ".##############."
 1211 ???? 7FFE     	CHR16X24 ".##############."
 1212 ???? F00F     	CHR16X24 "####........####"
 1213 ???? 0007     	CHR16X24 ".............###"
 1214 ???? 0007     	CHR16X24 ".............###"
 1215 ???? 000F     	CHR16X24 "............####"
 1216 ???? 007E     	CHR16X24 ".........######."
 1217 ???? 01FE     	CHR16X24 ".......########."
 1218 ???? 01F8     	CHR16X24 ".......######..."
 1219 ???? 03E0     	CHR16X24 "......#####....."
 1220 ???? 03C0     	CHR16X24 "......####......"
 1221 ???? 03C0     	CHR16X24 "......####......"
 1222 ???? 0000     	CHR16X24 "................"
 1223 ???? 0000     	CHR16X24 "................"
 1224 ???? 0000     	CHR16X24 "................"
 1225 ???? 03C0     	CHR16X24 "......####......"
 1226 ???? 03C0     	CHR16X24 "......####......"
 1227 ???? 03C0     	CHR16X24 "......####......"
 1228 ???? 03C0     	CHR16X24 "......####......"
 1229 ???? 0000     	CHR16X24 "................"
 1230 ???? 0000     	CHR16X24 "................"
 1231 ???? 0000     	CHR16X24 "................"
 1232 ???? 0000     	CHR16X24 "................"
 1233              	
 1234 ???? FFF0     	CHR16X24 "############...."
 1235 ???? FFFC     	CHR16X24 "##############.."
 1236 ???? FFFE     	CHR16X24 "###############."
 1237 ???? 7FFE     	CHR16X24 ".##############."
 1238 ???? 3FFF     	CHR16X24 "..##############"
 1239 ???? 1FFF     	CHR16X24 "...#############"
 1240 ???? 0FFF     	CHR16X24 "....############"
 1241 ???? 07FF     	CHR16X24 ".....###########"
 1242 ???? 03FF     	CHR16X24 "......##########"
 1243 ???? 01FF     	CHR16X24 ".......#########"
 1244 ???? 00FF     	CHR16X24 "........########"
 1245 ???? 00FF     	CHR16X24 "........########"
 1246 ???? 00FF     	CHR16X24 "........########"
 1247 ???? 00FF     	CHR16X24 "........########"
 1248 ???? 01FF     	CHR16X24 ".......#########"
 1249 ???? 03FF     	CHR16X24 "......##########"
 1250 ???? 07FF     	CHR16X24 ".....###########"
 1251 ???? 0FFF     	CHR16X24 "....############"
 1252 ???? 1FFF     	CHR16X24 "...#############"
 1253 ???? 3FFF     	CHR16X24 "..##############"
 1254 ???? 7FFE     	CHR16X24 ".##############."
 1255 ???? FFFE     	CHR16X24 "###############."
 1256 ???? FFFC     	CHR16X24 "##############.."
 1257 ???? FFF0     	CHR16X24 "############...."
 1258              	
 1259 ???? FFF8     	CHR16X24 "#############..."
 1260 ???? FFFE     	CHR16X24 "###############."
 1261 ???? FFFE     	CHR16X24 "###############."
 1262 ???? FFFF     	CHR16X24 "################"
 1263 ???? F01F     	CHR16X24 "####.......#####"
 1264 ???? F00F     	CHR16X24 "####........####"
 1265 ???? F00F     	CHR16X24 "####........####"
 1266 ???? F00F     	CHR16X24 "####........####"
 1267 ???? F01F     	CHR16X24 "####.......#####"
 1268 ???? FFFF     	CHR16X24 "################"
 1269 ???? FFFE     	CHR16X24 "###############."
 1270 ???? FFFE     	CHR16X24 "###############."
 1271 ???? FFF8     	CHR16X24 "#############..."
 1272 ???? FFC0     	CHR16X24 "##########......"
 1273 ???? F7E0     	CHR16X24 "####.######....."
 1274 ???? F3F0     	CHR16X24 "####..######...."
 1275 ???? F1F8     	CHR16X24 "####...######..."
 1276 ???? F0FC     	CHR16X24 "####....######.."
 1277 ???? F07E     	CHR16X24 "####.....######."
 1278 ???? F03F     	CHR16X24 "####......######"
 1279 ???? F01F     	CHR16X24 "####.......#####"
 1280 ???? F00F     	CHR16X24 "####........####"
 1281 ???? 0000     	CHR16X24 "................"
 1282 ???? 0000     	CHR16X24 "................"
 1283              	
 1284 ???? FFFF     	CHR16X24 "################"
 1285 ???? FFFF     	CHR16X24 "################"
 1286 ???? FFFF     	CHR16X24 "################"
 1287 ???? FFFF     	CHR16X24 "################"
 1288 ???? 03C0     	CHR16X24 "......####......"
 1289 ???? 03C0     	CHR16X24 "......####......"
 1290 ???? 03C0     	CHR16X24 "......####......"
 1291 ???? 03C0     	CHR16X24 "......####......"
 1292 ???? 03C0     	CHR16X24 "......####......"
 1293 ???? 03C0     	CHR16X24 "......####......"
 1294 ???? 03C0     	CHR16X24 "......####......"
 1295 ???? 03C0     	CHR16X24 "......####......"
 1296 ???? 03C0     	CHR16X24 "......####......"
 1297 ???? 03C0     	CHR16X24 "......####......"
 1298 ???? 03C0     	CHR16X24 "......####......"
 1299 ???? 03C0     	CHR16X24 "......####......"
 1300 ???? 03C0     	CHR16X24 "......####......"
 1301 ???? 03C0     	CHR16X24 "......####......"
 1302 ???? 03C0     	CHR16X24 "......####......"
 1303 ???? 03C0     	CHR16X24 "......####......"
 1304 ???? 03C0     	CHR16X24 "......####......"
 1305 ???? 03C0     	CHR16X24 "......####......"
 1306 ???? 0000     	CHR16X24 "................"
 1307 ???? 0000     	CHR16X24 "................"
 1308              	
 1309 ???? 1FF8     	CHR16X24 "...##########..."
 1310 ???? 7FFE     	CHR16X24 ".##############."
 1311 ???? 7FFE     	CHR16X24 ".##############."
 1312 ???? FFFF     	CHR16X24 "################"
 1313 ???? F81F     	CHR16X24 "#####......#####"
 1314 ???? F00F     	CHR16X24 "####........####"
 1315 ???? F00F     	CHR16X24 "####........####"
 1316 ???? F00F     	CHR16X24 "####........####"
 1317 ???? F00F     	CHR16X24 "####........####"
 1318 ???? F00F     	CHR16X24 "####........####"
 1319 ???? F00F     	CHR16X24 "####........####"
 1320 ???? F00F     	CHR16X24 "####........####"
 1321 ???? F00F     	CHR16X24 "####........####"
 1322 ???? F00F     	CHR16X24 "####........####"
 1323 ???? F00F     	CHR16X24 "####........####"
 1324 ???? F00F     	CHR16X24 "####........####"
 1325 ???? F00F     	CHR16X24 "####........####"
 1326 ???? F81F     	CHR16X24 "#####......#####"
 1327 ???? FFFF     	CHR16X24 "################"
 1328 ???? 7FFE     	CHR16X24 ".##############."
 1329 ???? 7FFE     	CHR16X24 ".##############."
 1330 ???? 1FF8     	CHR16X24 "...##########..."
 1331 ???? 0000     	CHR16X24 "................"
 1332 ???? 0000     	CHR16X24 "................"
 1333              	
 1334 ???? FFFF     	CHR16X24 "################"
 1335 ???? FFFF     	CHR16X24 "################"
 1336 ???? FFFF     	CHR16X24 "################"
 1337 ???? FFFF     	CHR16X24 "################"
 1338 ???? F000     	CHR16X24 "####............"
 1339 ???? F000     	CHR16X24 "####............"
 1340 ???? F000     	CHR16X24 "####............"
 1341 ???? F000     	CHR16X24 "####............"
 1342 ???? F000     	CHR16X24 "####............"
 1343 ???? FFE0     	CHR16X24 "###########....."
 1344 ???? FFE0     	CHR16X24 "###########....."
 1345 ???? FFE0     	CHR16X24 "###########....."
 1346 ???? FFE0     	CHR16X24 "###########....."
 1347 ???? F000     	CHR16X24 "####............"
 1348 ???? F000     	CHR16X24 "####............"
 1349 ???? F000     	CHR16X24 "####............"
 1350 ???? F000     	CHR16X24 "####............"
 1351 ???? F000     	CHR16X24 "####............"
 1352 ???? FFFF     	CHR16X24 "################"
 1353 ???? FFFF     	CHR16X24 "################"
 1354 ???? FFFF     	CHR16X24 "################"
 1355 ???? FFFF     	CHR16X24 "################"
 1356 ???? 0000     	CHR16X24 "................"
 1357 ???? 0000     	CHR16X24 "................"
 1358              	
 1359 ???? 0180     	CHR16X24 ".......##......."
 1360 ???? 0180     	CHR16X24 ".......##......."
 1361 ???? 03C0     	CHR16X24 "......####......"
 1362 ???? 03C0     	CHR16X24 "......####......"
 1363 ???? 07E0     	CHR16X24 ".....######....."
 1364 ???? 07E0     	CHR16X24 ".....######....."
 1365 ???? 07E0     	CHR16X24 ".....######....."
 1366 ???? 0FF0     	CHR16X24 "....########...."
 1367 ???? 0E70     	CHR16X24 "....###..###...."
 1368 ???? 0E70     	CHR16X24 "....###..###...."
 1369 ???? 1E78     	CHR16X24 "...####..####..."
 1370 ???? 1FF8     	CHR16X24 "...##########..."
 1371 ???? 1FF8     	CHR16X24 "...##########..."
 1372 ???? 3FFC     	CHR16X24 "..############.."
 1373 ???? 3FFC     	CHR16X24 "..############.."
 1374 ???? 381C     	CHR16X24 "..###......###.."
 1375 ???? 781E     	CHR16X24 ".####......####."
 1376 ???? 700E     	CHR16X24 ".###........###."
 1377 ???? F00F     	CHR16X24 "####........####"
 1378 ???? F00F     	CHR16X24 "####........####"
 1379 ???? E007     	CHR16X24 "###..........###"
 1380 ???? E007     	CHR16X24 "###..........###"
 1381 ???? 0000     	CHR16X24 "................"
 1382 ???? 0000     	CHR16X24 "................"
 1383              	
 1384 ???? F80F     	CHR16X24 "#####.......####"
 1385 ???? FC0F     	CHR16X24 "######......####"
 1386 ???? FC0F     	CHR16X24 "######......####"
 1387 ???? FE0F     	CHR16X24 "#######.....####"
 1388 ???? FE0F     	CHR16X24 "#######.....####"
 1389 ???? FF0F     	CHR16X24 "########....####"
 1390 ???? F70F     	CHR16X24 "####.###....####"
 1391 ???? F70F     	CHR16X24 "####.###....####"
 1392 ???? F78F     	CHR16X24 "####.####...####"
 1393 ???? F38F     	CHR16X24 "####..###...####"
 1394 ???? F3CF     	CHR16X24 "####..####..####"
 1395 ???? F3CF     	CHR16X24 "####..####..####"
 1396 ???? F1CF     	CHR16X24 "####...###..####"
 1397 ???? F1EF     	CHR16X24 "####...####.####"
 1398 ???? F0EF     	CHR16X24 "####....###.####"
 1399 ???? F0EF     	CHR16X24 "####....###.####"
 1400 ???? F0FF     	CHR16X24 "####....########"
 1401 ???? F07F     	CHR16X24 "####.....#######"
 1402 ???? F07F     	CHR16X24 "####.....#######"
 1403 ???? F03F     	CHR16X24 "####......######"
 1404 ???? F03F     	CHR16X24 "####......######"
 1405 ???? F01F     	CHR16X24 "####.......#####"
 1406 ???? 0000     	CHR16X24 "................"
 1407 ???? 0000     	CHR16X24 "................"
 1408              	
 1409 ???? 03C0     	CHR16X24 "......####......"
 1410 ???? 03C0     	CHR16X24 "......####......"
 1411 ???? 03C0     	CHR16X24 "......####......"
 1412 ???? 03C0     	CHR16X24 "......####......"
 1413 ???? 03C0     	CHR16X24 "......####......"
 1414 ???? 03C0     	CHR16X24 "......####......"
 1415 ???? 03C0     	CHR16X24 "......####......"
 1416 ???? 03C0     	CHR16X24 "......####......"
 1417 ???? 03C0     	CHR16X24 "......####......"
 1418 ???? 03C0     	CHR16X24 "......####......"
 1419 ???? 03C0     	CHR16X24 "......####......"
 1420 ???? 03C0     	CHR16X24 "......####......"
 1421 ???? 03C0     	CHR16X24 "......####......"
 1422 ???? 03C0     	CHR16X24 "......####......"
 1423 ???? 03C0     	CHR16X24 "......####......"
 1424 ???? 03C0     	CHR16X24 "......####......"
 1425 ???? 03C0     	CHR16X24 "......####......"
 1426 ???? 03C0     	CHR16X24 "......####......"
 1427 ???? 03C0     	CHR16X24 "......####......"
 1428 ???? 03C0     	CHR16X24 "......####......"
 1429 ???? 03C0     	CHR16X24 "......####......"
 1430 ???? 03C0     	CHR16X24 "......####......"
 1431 ???? 0000     	CHR16X24 "................"
 1432 ???? 0000     	CHR16X24 "................"
 1433              	
 1434 ???? 1FF8     	CHR16X24 "...##########..."
 1435 ???? 7FFE     	CHR16X24 ".##############."
 1436 ???? 7FFE     	CHR16X24 ".##############."
 1437 ???? FFFF     	CHR16X24 "################"
 1438 ???? F803     	CHR16X24 "#####.........##"
 1439 ???? F000     	CHR16X24 "####............"
 1440 ???? F000     	CHR16X24 "####............"
 1441 ???? F000     	CHR16X24 "####............"
 1442 ???? F800     	CHR16X24 "#####..........."
 1443 ???? FFF8     	CHR16X24 "#############..."
 1444 ???? 7FFE     	CHR16X24 ".##############."
 1445 ???? 7FFE     	CHR16X24 ".##############."
 1446 ???? 1FFF     	CHR16X24 "...#############"
 1447 ???? 001F     	CHR16X24 "...........#####"
 1448 ???? 000F     	CHR16X24 "............####"
 1449 ???? 000F     	CHR16X24 "............####"
 1450 ???? 000F     	CHR16X24 "............####"
 1451 ???? C01F     	CHR16X24 "##.........#####"
 1452 ???? FFFF     	CHR16X24 "################"
 1453 ???? 7FFE     	CHR16X24 ".##############."
 1454 ???? 7FFE     	CHR16X24 ".##############."
 1455 ???? 1FF8     	CHR16X24 "...##########..."
 1456 ???? 0000     	CHR16X24 "................"
 1457 ???? 0000     	CHR16X24 "................"
 1458              	
 1459 ???? E007     	CHR16X24 "###..........###"
 1460 ???? E007     	CHR16X24 "###..........###"
 1461 ???? F00F     	CHR16X24 "####........####"
 1462 ???? F81F     	CHR16X24 "#####......#####"
 1463 ???? F81F     	CHR16X24 "#####......#####"
 1464 ???? FC3F     	CHR16X24 "######....######"
 1465 ???? FE7F     	CHR16X24 "#######..#######"
 1466 ???? EE77     	CHR16X24 "###.###..###.###"
 1467 ???? E7E7     	CHR16X24 "###..######..###"
 1468 ???? E7E7     	CHR16X24 "###..######..###"
 1469 ???? E3C7     	CHR16X24 "###...####...###"
 1470 ???? E187     	CHR16X24 "###....##....###"
 1471 ???? E007     	CHR16X24 "###..........###"
 1472 ???? E007     	CHR16X24 "###..........###"
 1473 ???? E007     	CHR16X24 "###..........###"
 1474 ???? E007     	CHR16X24 "###..........###"
 1475 ???? E007     	CHR16X24 "###..........###"
 1476 ???? E007     	CHR16X24 "###..........###"
 1477 ???? E007     	CHR16X24 "###..........###"
 1478 ???? E007     	CHR16X24 "###..........###"
 1479 ???? E007     	CHR16X24 "###..........###"
 1480 ???? E007     	CHR16X24 "###..........###"
 1481 ???? 0000     	CHR16X24 "................"
 1482 ???? 0000     	CHR16X24 "................"
 1483              	
 1484 ???? 1FF8     	CHR16X24 "...##########..."
 1485 ???? 7FFE     	CHR16X24 ".##############."
 1486 ???? 7FFE     	CHR16X24 ".##############."
 1487 ???? FFFF     	CHR16X24 "################"
 1488 ???? F81F     	CHR16X24 "#####......#####"
 1489 ???? F00F     	CHR16X24 "####........####"
 1490 ???? F000     	CHR16X24 "####............"
 1491 ???? F000     	CHR16X24 "####............"
 1492 ???? F000     	CHR16X24 "####............"
 1493 ???? F000     	CHR16X24 "####............"
 1494 ???? F000     	CHR16X24 "####............"
 1495 ???? F000     	CHR16X24 "####............"
 1496 ???? F000     	CHR16X24 "####............"
 1497 ???? F000     	CHR16X24 "####............"
 1498 ???? F000     	CHR16X24 "####............"
 1499 ???? F000     	CHR16X24 "####............"
 1500 ???? F00F     	CHR16X24 "####........####"
 1501 ???? F81F     	CHR16X24 "#####......#####"
 1502 ???? FFFF     	CHR16X24 "################"
 1503 ???? 7FFE     	CHR16X24 ".##############."
 1504 ???? 7FFE     	CHR16X24 ".##############."
 1505 ???? 1FF8     	CHR16X24 "...##########..."
 1506 ???? 0000     	CHR16X24 "................"
 1507 ???? 0000     	CHR16X24 "................"
 1508              	
 1509 ???? E007     	CHR16X24 "###..........###"
 1510 ???? F00F     	CHR16X24 "####........####"
 1511 ???? F00F     	CHR16X24 "####........####"
 1512 ???? 781E     	CHR16X24 ".####......####."
 1513 ???? 781E     	CHR16X24 ".####......####."
 1514 ???? 3C3C     	CHR16X24 "..####....####.."
 1515 ???? 3C3C     	CHR16X24 "..####....####.."
 1516 ???? 1E78     	CHR16X24 "...####..####..."
 1517 ???? 0FF0     	CHR16X24 "....########...."
 1518 ???? 0FF0     	CHR16X24 "....########...."
 1519 ???? 07E0     	CHR16X24 ".....######....."
 1520 ???? 03C0     	CHR16X24 "......####......"
 1521 ???? 03C0     	CHR16X24 "......####......"
 1522 ???? 03C0     	CHR16X24 "......####......"
 1523 ???? 03C0     	CHR16X24 "......####......"
 1524 ???? 03C0     	CHR16X24 "......####......"
 1525 ???? 03C0     	CHR16X24 "......####......"
 1526 ???? 03C0     	CHR16X24 "......####......"
 1527 ???? 03C0     	CHR16X24 "......####......"
 1528 ???? 03C0     	CHR16X24 "......####......"
 1529 ???? 03C0     	CHR16X24 "......####......"
 1530 ???? 03C0     	CHR16X24 "......####......"
 1531 ???? 0000     	CHR16X24 "................"
 1532 ???? 0000     	CHR16X24 "................"
 1533              	
 1534 ???? F000     	CHR16X24 "####............"
 1535 ???? F000     	CHR16X24 "####............"
 1536 ???? F000     	CHR16X24 "####............"
 1537 ???? F000     	CHR16X24 "####............"
 1538 ???? F000     	CHR16X24 "####............"
 1539 ???? F000     	CHR16X24 "####............"
 1540 ???? F000     	CHR16X24 "####............"
 1541 ???? F000     	CHR16X24 "####............"
 1542 ???? F000     	CHR16X24 "####............"
 1543 ???? F000     	CHR16X24 "####............"
 1544 ???? F000     	CHR16X24 "####............"
 1545 ???? F000     	CHR16X24 "####............"
 1546 ???? F000     	CHR16X24 "####............"
 1547 ???? F000     	CHR16X24 "####............"
 1548 ???? F000     	CHR16X24 "####............"
 1549 ???? F000     	CHR16X24 "####............"
 1550 ???? F000     	CHR16X24 "####............"
 1551 ???? F000     	CHR16X24 "####............"
 1552 ???? FFFF     	CHR16X24 "################"
 1553 ???? FFFF     	CHR16X24 "################"
 1554 ???? FFFF     	CHR16X24 "################"
 1555 ???? FFFF     	CHR16X24 "################"
 1556 ???? 0000     	CHR16X24 "................"
 1557 ???? 0000     	CHR16X24 "................"
 1558              	
 1559 ???? 1FF8     	CHR16X24 "...##########..."
 1560 ???? 7FFE     	CHR16X24 ".##############."
 1561 ???? 7FFE     	CHR16X24 ".##############."
 1562 ???? FFFF     	CHR16X24 "################"
 1563 ???? F81F     	CHR16X24 "#####......#####"
 1564 ???? F00F     	CHR16X24 "####........####"
 1565 ???? F000     	CHR16X24 "####............"
 1566 ???? F000     	CHR16X24 "####............"
 1567 ???? F000     	CHR16X24 "####............"
 1568 ???? F000     	CHR16X24 "####............"
 1569 ???? F000     	CHR16X24 "####............"
 1570 ???? F03F     	CHR16X24 "####......######"
 1571 ???? F03F     	CHR16X24 "####......######"
 1572 ???? F03F     	CHR16X24 "####......######"
 1573 ???? F00F     	CHR16X24 "####........####"
 1574 ???? F00F     	CHR16X24 "####........####"
 1575 ???? F00F     	CHR16X24 "####........####"
 1576 ???? F81F     	CHR16X24 "#####......#####"
 1577 ???? FFFF     	CHR16X24 "################"
 1578 ???? 7FFE     	CHR16X24 ".##############."
 1579 ???? 7FFE     	CHR16X24 ".##############."
 1580 ???? 1FF8     	CHR16X24 "...##########..."
 1581 ???? 0000     	CHR16X24 "................"
 1582 ???? 0000     	CHR16X24 "................"
 1583              	
 1584 ???? FFFF     	CHR16X24 "################"
 1585 ???? FFFF     	CHR16X24 "################"
 1586 ???? FFFF     	CHR16X24 "################"
 1587 ???? FFFF     	CHR16X24 "################"
 1588 ???? F000     	CHR16X24 "####............"
 1589 ???? F000     	CHR16X24 "####............"
 1590 ???? F000     	CHR16X24 "####............"
 1591 ???? F000     	CHR16X24 "####............"
 1592 ???? F000     	CHR16X24 "####............"
 1593 ???? FFE0     	CHR16X24 "###########....."
 1594 ???? FFE0     	CHR16X24 "###########....."
 1595 ???? FFE0     	CHR16X24 "###########....."
 1596 ???? FFE0     	CHR16X24 "###########....."
 1597 ???? F000     	CHR16X24 "####............"
 1598 ???? F000     	CHR16X24 "####............"
 1599 ???? F000     	CHR16X24 "####............"
 1600 ???? F000     	CHR16X24 "####............"
 1601 ???? F000     	CHR16X24 "####............"
 1602 ???? F000     	CHR16X24 "####............"
 1603 ???? F000     	CHR16X24 "####............"
 1604 ???? F000     	CHR16X24 "####............"
 1605 ???? F000     	CHR16X24 "####............"
 1606 ???? 0000     	CHR16X24 "................"
 1607 ???? 0000     	CHR16X24 "................"
 1608              	
 1609 ???? C003     	CHR16X24 "##............##"
 1610 ???? E007     	CHR16X24 "###..........###"
 1611 ???? E007     	CHR16X24 "###..........###"
 1612 ???? E007     	CHR16X24 "###..........###"
 1613 ???? E007     	CHR16X24 "###..........###"
 1614 ???? 700E     	CHR16X24 ".###........###."
 1615 ???? 700E     	CHR16X24 ".###........###."
 1616 ???? 700E     	CHR16X24 ".###........###."
 1617 ???? 700E     	CHR16X24 ".###........###."
 1618 ???? 700E     	CHR16X24 ".###........###."
 1619 ???? 718E     	CHR16X24 ".###...##...###."
 1620 ???? 718E     	CHR16X24 ".###...##...###."
 1621 ???? 399C     	CHR16X24 "..###..##..###.."
 1622 ???? 3BDC     	CHR16X24 "..###.####.###.."
 1623 ???? 3FFC     	CHR16X24 "..############.."
 1624 ???? 3FFC     	CHR16X24 "..############.."
 1625 ???? 1FF8     	CHR16X24 "...##########..."
 1626 ???? 1E78     	CHR16X24 "...####..####..."
 1627 ???? 1C38     	CHR16X24 "...###....###..."
 1628 ???? 1C38     	CHR16X24 "...###....###..."
 1629 ???? 1818     	CHR16X24 "...##......##..."
 1630 ???? 1818     	CHR16X24 "...##......##..."
 1631 ???? 0000     	CHR16X24 "................"
 1632 ???? 0000     	CHR16X24 "................"
 1633              	
 1634 ???? FFE0     	CHR16X24 "###########....."
 1635 ???? FFF8     	CHR16X24 "#############..."
 1636 ???? FFFC     	CHR16X24 "##############.."
 1637 ???? FFFE     	CHR16X24 "###############."
 1638 ???? F03E     	CHR16X24 "####......#####."
 1639 ???? F01F     	CHR16X24 "####.......#####"
 1640 ???? F00F     	CHR16X24 "####........####"
 1641 ???? F00F     	CHR16X24 "####........####"
 1642 ???? F00F     	CHR16X24 "####........####"
 1643 ???? F00F     	CHR16X24 "####........####"
 1644 ???? F00F     	CHR16X24 "####........####"
 1645 ???? F00F     	CHR16X24 "####........####"
 1646 ???? F00F     	CHR16X24 "####........####"
 1647 ???? F00F     	CHR16X24 "####........####"
 1648 ???? F00F     	CHR16X24 "####........####"
 1649 ???? F00F     	CHR16X24 "####........####"
 1650 ???? F01F     	CHR16X24 "####.......#####"
 1651 ???? F03E     	CHR16X24 "####......#####."
 1652 ???? FFFE     	CHR16X24 "###############."
 1653 ???? FFFC     	CHR16X24 "##############.."
 1654 ???? FFF8     	CHR16X24 "#############..."
 1655 ???? FFE0     	CHR16X24 "###########....."
 1656 ???? 0000     	CHR16X24 "................"
 1657 ???? 0000     	CHR16X24 "................"
 1658              	
 1659 ???? E007     	CHR16X24 "###..........###"
 1660 ???? E007     	CHR16X24 "###..........###"
 1661 ???? F00F     	CHR16X24 "####........####"
 1662 ???? F00F     	CHR16X24 "####........####"
 1663 ???? F00F     	CHR16X24 "####........####"
 1664 ???? F81F     	CHR16X24 "#####......#####"
 1665 ???? F81F     	CHR16X24 "#####......#####"
 1666 ???? 781E     	CHR16X24 ".####......####."
 1667 ???? 7C3E     	CHR16X24 ".#####....#####."
 1668 ???? 7C3E     	CHR16X24 ".#####....#####."
 1669 ???? 3C3C     	CHR16X24 "..####....####.."
 1670 ???? 3C3C     	CHR16X24 "..####....####.."
 1671 ???? 1E78     	CHR16X24 "...####..####..."
 1672 ???? 1E78     	CHR16X24 "...####..####..."
 1673 ???? 0FF0     	CHR16X24 "....########...."
 1674 ???? 0FF0     	CHR16X24 "....########...."
 1675 ???? 07E0     	CHR16X24 ".....######....."
 1676 ???? 07E0     	CHR16X24 ".....######....."
 1677 ???? 03C0     	CHR16X24 "......####......"
 1678 ???? 03C0     	CHR16X24 "......####......"
 1679 ???? 0180     	CHR16X24 ".......##......."
 1680 ???? 0180     	CHR16X24 ".......##......."
 1681 ???? 0000     	CHR16X24 "................"
 1682 ???? 0000     	CHR16X24 "................"
 1683              	
 1684 ???? FFF8     	CHR16X24 "#############..."
 1685 ???? FFFE     	CHR16X24 "###############."
 1686 ???? FFFE     	CHR16X24 "###############."
 1687 ???? FFFF     	CHR16X24 "################"
 1688 ???? F01F     	CHR16X24 "####.......#####"
 1689 ???? F00F     	CHR16X24 "####........####"
 1690 ???? F00F     	CHR16X24 "####........####"
 1691 ???? F00F     	CHR16X24 "####........####"
 1692 ???? F01F     	CHR16X24 "####.......#####"
 1693 ???? FFFF     	CHR16X24 "################"
 1694 ???? FFFE     	CHR16X24 "###############."
 1695 ???? FFFE     	CHR16X24 "###############."
 1696 ???? FFF8     	CHR16X24 "#############..."
 1697 ???? F000     	CHR16X24 "####............"
 1698 ???? F000     	CHR16X24 "####............"
 1699 ???? F000     	CHR16X24 "####............"
 1700 ???? F000     	CHR16X24 "####............"
 1701 ???? F000     	CHR16X24 "####............"
 1702 ???? F000     	CHR16X24 "####............"
 1703 ???? F000     	CHR16X24 "####............"
 1704 ???? F000     	CHR16X24 "####............"
 1705 ???? F000     	CHR16X24 "####............"
 1706 ???? 0000     	CHR16X24 "................"
 1707 ???? 0000     	CHR16X24 "................"
 1708              	
 1709 ???? FFE0     	CHR16X24 "###########....."
 1710 ???? FFF8     	CHR16X24 "#############..."
 1711 ???? FFFC     	CHR16X24 "##############.."
 1712 ???? FFFE     	CHR16X24 "###############."
 1713 ???? F03E     	CHR16X24 "####......#####."
 1714 ???? F01F     	CHR16X24 "####.......#####"
 1715 ???? F00F     	CHR16X24 "####........####"
 1716 ???? F00F     	CHR16X24 "####........####"
 1717 ???? F01F     	CHR16X24 "####.......#####"
 1718 ???? FFFE     	CHR16X24 "###############."
 1719 ???? FFFC     	CHR16X24 "##############.."
 1720 ???? FFFC     	CHR16X24 "##############.."
 1721 ???? FFFE     	CHR16X24 "###############."
 1722 ???? F01F     	CHR16X24 "####.......#####"
 1723 ???? F00F     	CHR16X24 "####........####"
 1724 ???? F00F     	CHR16X24 "####........####"
 1725 ???? F01F     	CHR16X24 "####.......#####"
 1726 ???? F03E     	CHR16X24 "####......#####."
 1727 ???? FFFE     	CHR16X24 "###############."
 1728 ???? FFFC     	CHR16X24 "##############.."
 1729 ???? FFF8     	CHR16X24 "#############..."
 1730 ???? FFE0     	CHR16X24 "###########....."
 1731 ???? 0000     	CHR16X24 "................"
 1732 ???? 0000     	CHR16X24 "................"
 1733              	
 1734 ???? F00F     	CHR16X24 "####........####"
 1735 ???? F00F     	CHR16X24 "####........####"
 1736 ???? F00F     	CHR16X24 "####........####"
 1737 ???? F00F     	CHR16X24 "####........####"
 1738 ???? F00F     	CHR16X24 "####........####"
 1739 ???? F00F     	CHR16X24 "####........####"
 1740 ???? F00F     	CHR16X24 "####........####"
 1741 ???? F00F     	CHR16X24 "####........####"
 1742 ???? F00F     	CHR16X24 "####........####"
 1743 ???? FFFF     	CHR16X24 "################"
 1744 ???? FFFF     	CHR16X24 "################"
 1745 ???? FFFF     	CHR16X24 "################"
 1746 ???? FFFF     	CHR16X24 "################"
 1747 ???? F00F     	CHR16X24 "####........####"
 1748 ???? F00F     	CHR16X24 "####........####"
 1749 ???? F00F     	CHR16X24 "####........####"
 1750 ???? F00F     	CHR16X24 "####........####"
 1751 ???? F00F     	CHR16X24 "####........####"
 1752 ???? F00F     	CHR16X24 "####........####"
 1753 ???? F00F     	CHR16X24 "####........####"
 1754 ???? F00F     	CHR16X24 "####........####"
 1755 ???? F00F     	CHR16X24 "####........####"
 1756 ???? 0000     	CHR16X24 "................"
 1757 ???? 0000     	CHR16X24 "................"
 1758              	
 1759 ???? E007     	CHR16X24 "###..........###"
 1760 ???? F00F     	CHR16X24 "####........####"
 1761 ???? F81F     	CHR16X24 "#####......#####"
 1762 ???? 781E     	CHR16X24 ".####......####."
 1763 ???? 7C3E     	CHR16X24 ".#####....#####."
 1764 ???? 3E7C     	CHR16X24 "..#####..#####.."
 1765 ???? 1E78     	CHR16X24 "...####..####..."
 1766 ???? 1FF8     	CHR16X24 "...##########..."
 1767 ???? 0FF0     	CHR16X24 "....########...."
 1768 ???? 07E0     	CHR16X24 ".....######....."
 1769 ???? 07E0     	CHR16X24 ".....######....."
 1770 ???? 07E0     	CHR16X24 ".....######....."
 1771 ???? 07E0     	CHR16X24 ".....######....."
 1772 ???? 0FF0     	CHR16X24 "....########...."
 1773 ???? 1FF8     	CHR16X24 "...##########..."
 1774 ???? 1E78     	CHR16X24 "...####..####..."
 1775 ???? 3E7C     	CHR16X24 "..#####..#####.."
 1776 ???? 7C3E     	CHR16X24 ".#####....#####."
 1777 ???? 781E     	CHR16X24 ".####......####."
 1778 ???? F81F     	CHR16X24 "#####......#####"
 1779 ???? F00F     	CHR16X24 "####........####"
 1780 ???? E007     	CHR16X24 "###..........###"
 1781 ???? 0000     	CHR16X24 "................"
 1782 ???? 0000     	CHR16X24 "................"
 1783              	
 1784 ???? F00F     	CHR16X24 "####........####"
 1785 ???? F00F     	CHR16X24 "####........####"
 1786 ???? F00F     	CHR16X24 "####........####"
 1787 ???? F00F     	CHR16X24 "####........####"
 1788 ???? F00F     	CHR16X24 "####........####"
 1789 ???? F00F     	CHR16X24 "####........####"
 1790 ???? F00F     	CHR16X24 "####........####"
 1791 ???? F00F     	CHR16X24 "####........####"
 1792 ???? F00F     	CHR16X24 "####........####"
 1793 ???? F00F     	CHR16X24 "####........####"
 1794 ???? F00F     	CHR16X24 "####........####"
 1795 ???? F00F     	CHR16X24 "####........####"
 1796 ???? F00F     	CHR16X24 "####........####"
 1797 ???? F00F     	CHR16X24 "####........####"
 1798 ???? F00F     	CHR16X24 "####........####"
 1799 ???? F00F     	CHR16X24 "####........####"
 1800 ???? F00F     	CHR16X24 "####........####"
 1801 ???? F81F     	CHR16X24 "#####......#####"
 1802 ???? FFFF     	CHR16X24 "################"
 1803 ???? 7FFE     	CHR16X24 ".##############."
 1804 ???? 7FFE     	CHR16X24 ".##############."
 1805 ???? 1FF8     	CHR16X24 "...##########..."
 1806 ???? 0000     	CHR16X24 "................"
 1807 ???? 0000     	CHR16X24 "................"
 1808              	
 1809 ???? 1FF8     	CHR16X24 "...##########..."
 1810 ???? 7FFE     	CHR16X24 ".##############."
 1811 ???? 7FFE     	CHR16X24 ".##############."
 1812 ???? FFFF     	CHR16X24 "################"
 1813 ???? F81F     	CHR16X24 "#####......#####"
 1814 ???? F00F     	CHR16X24 "####........####"
 1815 ???? F00F     	CHR16X24 "####........####"
 1816 ???? F00F     	CHR16X24 "####........####"
 1817 ???? F00F     	CHR16X24 "####........####"
 1818 ???? F00F     	CHR16X24 "####........####"
 1819 ???? F00F     	CHR16X24 "####........####"
 1820 ???? F00F     	CHR16X24 "####........####"
 1821 ???? F00F     	CHR16X24 "####........####"
 1822 ???? F00F     	CHR16X24 "####........####"
 1823 ???? F0CF     	CHR16X24 "####....##..####"
 1824 ???? F0EF     	CHR16X24 "####....###.####"
 1825 ???? F07F     	CHR16X24 "####.....#######"
 1826 ???? F83F     	CHR16X24 "#####.....######"
 1827 ???? FFFF     	CHR16X24 "################"
 1828 ???? 7FFE     	CHR16X24 ".##############."
 1829 ???? 7FFF     	CHR16X24 ".###############"
 1830 ???? 1FFB     	CHR16X24 "...##########.##"
 1831 ???? 0000     	CHR16X24 "................"
 1832 ???? 0000     	CHR16X24 "................"
 1833              	
 1834 ???? 1FF8     	CHR16X24 "...##########..."
 1835 ???? 7FFE     	CHR16X24 ".##############."
 1836 ???? 7FFE     	CHR16X24 ".##############."
 1837 ???? 7FFE     	CHR16X24 ".##############."
 1838 ???? E007     	CHR16X24 "###..........###"
 1839 ???? E007     	CHR16X24 "###..........###"
 1840 ???? E007     	CHR16X24 "###..........###"
 1841 ???? E007     	CHR16X24 "###..........###"
 1842 ???? E007     	CHR16X24 "###..........###"
 1843 ???? E007     	CHR16X24 "###..........###"
 1844 ???? E007     	CHR16X24 "###..........###"
 1845 ???? E007     	CHR16X24 "###..........###"
 1846 ???? E007     	CHR16X24 "###..........###"
 1847 ???? E007     	CHR16X24 "###..........###"
 1848 ???? E007     	CHR16X24 "###..........###"
 1849 ???? E007     	CHR16X24 "###..........###"
 1850 ???? E007     	CHR16X24 "###..........###"
 1851 ???? E007     	CHR16X24 "###..........###"
 1852 ???? E007     	CHR16X24 "###..........###"
 1853 ???? E007     	CHR16X24 "###..........###"
 1854 ???? 7FFE     	CHR16X24 ".##############."
 1855 ???? 7FFE     	CHR16X24 ".##############."
 1856 ???? 7FFE     	CHR16X24 ".##############."
 1857 ???? 1FF8     	CHR16X24 "...##########..."
 1858              	
 1859 ???? 0180     	CHR16X24 ".......##......."
 1860 ???? 0180     	CHR16X24 ".......##......."
 1861 ???? 0180     	CHR16X24 ".......##......."
 1862 ???? 0180     	CHR16X24 ".......##......."
 1863 ???? 0180     	CHR16X24 ".......##......."
 1864 ???? 0180     	CHR16X24 ".......##......."
 1865 ???? 0180     	CHR16X24 ".......##......."
 1866 ???? 0180     	CHR16X24 ".......##......."
 1867 ???? 0180     	CHR16X24 ".......##......."
 1868 ???? 0180     	CHR16X24 ".......##......."
 1869 ???? 0180     	CHR16X24 ".......##......."
 1870 ???? 0180     	CHR16X24 ".......##......."
 1871 ???? 0180     	CHR16X24 ".......##......."
 1872 ???? 0180     	CHR16X24 ".......##......."
 1873 ???? 0180     	CHR16X24 ".......##......."
 1874 ???? 0180     	CHR16X24 ".......##......."
 1875 ???? 0180     	CHR16X24 ".......##......."
 1876 ???? 0180     	CHR16X24 ".......##......."
 1877 ???? 0180     	CHR16X24 ".......##......."
 1878 ???? 0180     	CHR16X24 ".......##......."
 1879 ???? 0180     	CHR16X24 ".......##......."
 1880 ???? 0180     	CHR16X24 ".......##......."
 1881 ???? 0180     	CHR16X24 ".......##......."
 1882 ???? 0180     	CHR16X24 ".......##......."
 1883              	
 1884 ???? 1FF8     	CHR16X24 "...##########..."
 1885 ???? 7FFE     	CHR16X24 ".##############."
 1886 ???? 7FFE     	CHR16X24 ".##############."
 1887 ???? 7FFE     	CHR16X24 ".##############."
 1888 ???? E007     	CHR16X24 "###..........###"
 1889 ???? E007     	CHR16X24 "###..........###"
 1890 ???? 0007     	CHR16X24 ".............###"
 1891 ???? 0007     	CHR16X24 ".............###"
 1892 ???? 0007     	CHR16X24 ".............###"
 1893 ???? 0007     	CHR16X24 ".............###"
 1894 ???? 1FFE     	CHR16X24 "...############."
 1895 ???? 7FFE     	CHR16X24 ".##############."
 1896 ???? 7FFE     	CHR16X24 ".##############."
 1897 ???? 7FF8     	CHR16X24 ".############..."
 1898 ???? E000     	CHR16X24 "###............."
 1899 ???? E000     	CHR16X24 "###............."
 1900 ???? E000     	CHR16X24 "###............."
 1901 ???? E000     	CHR16X24 "###............."
 1902 ???? E000     	CHR16X24 "###............."
 1903 ???? E000     	CHR16X24 "###............."
 1904 ???? FFFF     	CHR16X24 "################"
 1905 ???? FFFF     	CHR16X24 "################"
 1906 ???? FFFF     	CHR16X24 "################"
 1907 ???? FFFF     	CHR16X24 "################"
 1908              	
 1909 ???? 1FF8     	CHR16X24 "...##########..."
 1910 ???? 7FFE     	CHR16X24 ".##############."
 1911 ???? 7FFE     	CHR16X24 ".##############."
 1912 ???? 7FFE     	CHR16X24 ".##############."
 1913 ???? E007     	CHR16X24 "###..........###"
 1914 ???? E007     	CHR16X24 "###..........###"
 1915 ???? 0007     	CHR16X24 ".............###"
 1916 ???? 0007     	CHR16X24 ".............###"
 1917 ???? 0007     	CHR16X24 ".............###"
 1918 ???? 0007     	CHR16X24 ".............###"
 1919 ???? 07FE     	CHR16X24 ".....##########."
 1920 ???? 07FE     	CHR16X24 ".....##########."
 1921 ???? 07FE     	CHR16X24 ".....##########."
 1922 ???? 07FE     	CHR16X24 ".....##########."
 1923 ???? 0007     	CHR16X24 ".............###"
 1924 ???? 0007     	CHR16X24 ".............###"
 1925 ???? 0007     	CHR16X24 ".............###"
 1926 ???? 0007     	CHR16X24 ".............###"
 1927 ???? E007     	CHR16X24 "###..........###"
 1928 ???? E007     	CHR16X24 "###..........###"
 1929 ???? 7FFE     	CHR16X24 ".##############."
 1930 ???? 7FFE     	CHR16X24 ".##############."
 1931 ???? 7FFE     	CHR16X24 ".##############."
 1932 ???? 1FF8     	CHR16X24 "...##########..."
 1933              	
 1934 ???? E0E0     	CHR16X24 "###.....###....."
 1935 ???? E0E0     	CHR16X24 "###.....###....."
 1936 ???? E0E0     	CHR16X24 "###.....###....."
 1937 ???? E0E0     	CHR16X24 "###.....###....."
 1938 ???? E0E0     	CHR16X24 "###.....###....."
 1939 ???? E0E0     	CHR16X24 "###.....###....."
 1940 ???? E0E0     	CHR16X24 "###.....###....."
 1941 ???? E0E0     	CHR16X24 "###.....###....."
 1942 ???? E0E0     	CHR16X24 "###.....###....."
 1943 ???? E0E0     	CHR16X24 "###.....###....."
 1944 ???? FFFF     	CHR16X24 "################"
 1945 ???? FFFF     	CHR16X24 "################"
 1946 ???? FFFF     	CHR16X24 "################"
 1947 ???? FFFF     	CHR16X24 "################"
 1948 ???? 00E0     	CHR16X24 "........###....."
 1949 ???? 00E0     	CHR16X24 "........###....."
 1950 ???? 00E0     	CHR16X24 "........###....."
 1951 ???? 00E0     	CHR16X24 "........###....."
 1952 ???? 00E0     	CHR16X24 "........###....."
 1953 ???? 00E0     	CHR16X24 "........###....."
 1954 ???? 00E0     	CHR16X24 "........###....."
 1955 ???? 00E0     	CHR16X24 "........###....."
 1956 ???? 00E0     	CHR16X24 "........###....."
 1957 ???? 00E0     	CHR16X24 "........###....."
 1958              	
 1959 ???? FFFF     	CHR16X24 "################"
 1960 ???? FFFF     	CHR16X24 "################"
 1961 ???? FFFF     	CHR16X24 "################"
 1962 ???? FFFF     	CHR16X24 "################"
 1963 ???? E000     	CHR16X24 "###............."
 1964 ???? E000     	CHR16X24 "###............."
 1965 ???? E000     	CHR16X24 "###............."
 1966 ???? E000     	CHR16X24 "###............."
 1967 ???? E000     	CHR16X24 "###............."
 1968 ???? E000     	CHR16X24 "###............."
 1969 ???? FFF8     	CHR16X24 "#############..."
 1970 ???? FFFE     	CHR16X24 "###############."
 1971 ???? FFFE     	CHR16X24 "###############."
 1972 ???? FFFE     	CHR16X24 "###############."
 1973 ???? 0007     	CHR16X24 ".............###"
 1974 ???? 0007     	CHR16X24 ".............###"
 1975 ???? 0007     	CHR16X24 ".............###"
 1976 ???? 0007     	CHR16X24 ".............###"
 1977 ???? E007     	CHR16X24 "###..........###"
 1978 ???? E007     	CHR16X24 "###..........###"
 1979 ???? 7FFE     	CHR16X24 ".##############."
 1980 ???? 7FFE     	CHR16X24 ".##############."
 1981 ???? 7FFE     	CHR16X24 ".##############."
 1982 ???? 1FF8     	CHR16X24 "...##########..."
 1983              	
 1984 ???? 1FF8     	CHR16X24 "...##########..."
 1985 ???? 7FFE     	CHR16X24 ".##############."
 1986 ???? 7FFE     	CHR16X24 ".##############."
 1987 ???? 7FFE     	CHR16X24 ".##############."
 1988 ???? E007     	CHR16X24 "###..........###"
 1989 ???? E007     	CHR16X24 "###..........###"
 1990 ???? E000     	CHR16X24 "###............."
 1991 ???? E000     	CHR16X24 "###............."
 1992 ???? E000     	CHR16X24 "###............."
 1993 ???? E000     	CHR16X24 "###............."
 1994 ???? FFF8     	CHR16X24 "#############..."
 1995 ???? FFFE     	CHR16X24 "###############."
 1996 ???? FFFE     	CHR16X24 "###############."
 1997 ???? FFFE     	CHR16X24 "###############."
 1998 ???? E007     	CHR16X24 "###..........###"
 1999 ???? E007     	CHR16X24 "###..........###"
 2000 ???? E007     	CHR16X24 "###..........###"
 2001 ???? E007     	CHR16X24 "###..........###"
 2002 ???? E007     	CHR16X24 "###..........###"
 2003 ???? E007     	CHR16X24 "###..........###"
 2004 ???? 7FFE     	CHR16X24 ".##############."
 2005 ???? 7FFE     	CHR16X24 ".##############."
 2006 ???? 7FFE     	CHR16X24 ".##############."
 2007 ???? 1FF8     	CHR16X24 "...##########..."
 2008              	
 2009 ???? FFFF     	CHR16X24 "################"
 2010 ???? FFFF     	CHR16X24 "################"
 2011 ???? FFFF     	CHR16X24 "################"
 2012 ???? FFFF     	CHR16X24 "################"
 2013 ???? 000F     	CHR16X24 "............####"
 2014 ???? 001E     	CHR16X24 "...........####."
 2015 ???? 001E     	CHR16X24 "...........####."
 2016 ???? 003C     	CHR16X24 "..........####.."
 2017 ???? 0078     	CHR16X24 ".........####..."
 2018 ???? 0078     	CHR16X24 ".........####..."
 2019 ???? 00F0     	CHR16X24 "........####...."
 2020 ???? 01E0     	CHR16X24 ".......####....."
 2021 ???? 01E0     	CHR16X24 ".......####....."
 2022 ???? 03C0     	CHR16X24 "......####......"
 2023 ???? 0780     	CHR16X24 ".....####......."
 2024 ???? 0780     	CHR16X24 ".....####......."
 2025 ???? 0F00     	CHR16X24 "....####........"
 2026 ???? 1E00     	CHR16X24 "...####........."
 2027 ???? 1E00     	CHR16X24 "...####........."
 2028 ???? 3C00     	CHR16X24 "..####.........."
 2029 ???? 7800     	CHR16X24 ".####..........."
 2030 ???? 7800     	CHR16X24 ".####..........."
 2031 ???? F000     	CHR16X24 "####............"
 2032 ???? E000     	CHR16X24 "###............."
 2033              	
 2034 ???? 1FF8     	CHR16X24 "...##########..."
 2035 ???? 7FFE     	CHR16X24 ".##############."
 2036 ???? 7FFE     	CHR16X24 ".##############."
 2037 ???? 7FFE     	CHR16X24 ".##############."
 2038 ???? E007     	CHR16X24 "###..........###"
 2039 ???? E007     	CHR16X24 "###..........###"
 2040 ???? E007     	CHR16X24 "###..........###"
 2041 ???? E007     	CHR16X24 "###..........###"
 2042 ???? E007     	CHR16X24 "###..........###"
 2043 ???? E007     	CHR16X24 "###..........###"
 2044 ???? 7FFE     	CHR16X24 ".##############."
 2045 ???? 7FFE     	CHR16X24 ".##############."
 2046 ???? 7FFE     	CHR16X24 ".##############."
 2047 ???? 7FFE     	CHR16X24 ".##############."
 2048 ???? E007     	CHR16X24 "###..........###"
 2049 ???? E007     	CHR16X24 "###..........###"
 2050 ???? E007     	CHR16X24 "###..........###"
 2051 ???? E007     	CHR16X24 "###..........###"
 2052 ???? E007     	CHR16X24 "###..........###"
 2053 ???? E007     	CHR16X24 "###..........###"
 2054 ???? 7FFE     	CHR16X24 ".##############."
 2055 ???? 7FFE     	CHR16X24 ".##############."
 2056 ???? 7FFE     	CHR16X24 ".##############."
 2057 ???? 1FF8     	CHR16X24 "...##########..."
 2058              	
 2059 ???? 1FF8     	CHR16X24 "...##########..."
 2060 ???? 7FFE     	CHR16X24 ".##############."
 2061 ???? 7FFE     	CHR16X24 ".##############."
 2062 ???? 7FFE     	CHR16X24 ".##############."
 2063 ???? E007     	CHR16X24 "###..........###"
 2064 ???? E007     	CHR16X24 "###..........###"
 2065 ???? E007     	CHR16X24 "###..........###"
 2066 ???? E007     	CHR16X24 "###..........###"
 2067 ???? E007     	CHR16X24 "###..........###"
 2068 ???? E007     	CHR16X24 "###..........###"
 2069 ???? 7FFF     	CHR16X24 ".###############"
 2070 ???? 7FFF     	CHR16X24 ".###############"
 2071 ???? 7FFF     	CHR16X24 ".###############"
 2072 ???? 1FFF     	CHR16X24 "...#############"
 2073 ???? 0007     	CHR16X24 ".............###"
 2074 ???? 0007     	CHR16X24 ".............###"
 2075 ???? 0007     	CHR16X24 ".............###"
 2076 ???? 0007     	CHR16X24 ".............###"
 2077 ???? E007     	CHR16X24 "###..........###"
 2078 ???? E007     	CHR16X24 "###..........###"
 2079 ???? 7FFE     	CHR16X24 ".##############."
 2080 ???? 7FFE     	CHR16X24 ".##############."
 2081 ???? 7FFE     	CHR16X24 ".##############."
 2082 ???? 1FF8     	CHR16X24 "...##########..."
 2083              	
 2084 ???? 000F     	CHR16X24 "............####"
 2085 ???? 000F     	CHR16X24 "............####"
 2086 ???? 000F     	CHR16X24 "............####"
 2087 ???? 000F     	CHR16X24 "............####"
 2088 ???? 000F     	CHR16X24 "............####"
 2089 ???? 000F     	CHR16X24 "............####"
 2090 ???? 000F     	CHR16X24 "............####"
 2091 ???? 000F     	CHR16X24 "............####"
 2092 ???? 000F     	CHR16X24 "............####"
 2093 ???? 000F     	CHR16X24 "............####"
 2094 ???? 000F     	CHR16X24 "............####"
 2095 ???? 000F     	CHR16X24 "............####"
 2096 ???? 000F     	CHR16X24 "............####"
 2097 ???? 000F     	CHR16X24 "............####"
 2098 ???? 000F     	CHR16X24 "............####"
 2099 ???? 000F     	CHR16X24 "............####"
 2100 ???? 000F     	CHR16X24 "............####"
 2101 ???? F01F     	CHR16X24 "####.......#####"
 2102 ???? FFFF     	CHR16X24 "################"
 2103 ???? 7FFE     	CHR16X24 ".##############."
 2104 ???? 7FFE     	CHR16X24 ".##############."
 2105 ???? 1FF8     	CHR16X24 "...##########..."
 2106 ???? 0000     	CHR16X24 "................"
 2107 ???? 0000     	CHR16X24 "................"
 2108              	
 2109 ???? 0000     	CHR16X24 "................"
 2110 ???? 0000     	CHR16X24 "................"
 2111 ???? 0000     	CHR16X24 "................"
 2112 ???? 0000     	CHR16X24 "................"
 2113 ???? 0000     	CHR16X24 "................"
 2114 ???? 0000     	CHR16X24 "................"
 2115 ???? 0000     	CHR16X24 "................"
 2116 ???? 0000     	CHR16X24 "................"
 2117 ???? 0000     	CHR16X24 "................"
 2118 ???? 0000     	CHR16X24 "................"
 2119 ???? FFFF     	CHR16X24 "################"
 2120 ???? FFFF     	CHR16X24 "################"
 2121 ???? FFFF     	CHR16X24 "################"
 2122 ???? FFFF     	CHR16X24 "################"
 2123 ???? 0000     	CHR16X24 "................"
 2124 ???? 0000     	CHR16X24 "................"
 2125 ???? 0000     	CHR16X24 "................"
 2126 ???? 0000     	CHR16X24 "................"
 2127 ???? 0000     	CHR16X24 "................"
 2128 ???? 0000     	CHR16X24 "................"
 2129 ???? 0000     	CHR16X24 "................"
 2130 ???? 0000     	CHR16X24 "................"
 2131 ???? 0000     	CHR16X24 "................"
 2132 ???? 0000     	CHR16X24 "................"
 2133              	
 2134 ???? F00F     	CHR16X24 "####........####"
 2135 ???? F01F     	CHR16X24 "####.......#####"
 2136 ???? F03F     	CHR16X24 "####......######"
 2137 ???? F07E     	CHR16X24 "####.....######."
 2138 ???? F1F8     	CHR16X24 "####...######..."
 2139 ???? F3F0     	CHR16X24 "####..######...."
 2140 ???? F7E0     	CHR16X24 "####.######....."
 2141 ???? FF80     	CHR16X24 "#########......."
 2142 ???? FF00     	CHR16X24 "########........"
 2143 ???? FE00     	CHR16X24 "#######........."
 2144 ???? FC00     	CHR16X24 "######.........."
 2145 ???? FC00     	CHR16X24 "######.........."
 2146 ???? FE00     	CHR16X24 "#######........."
 2147 ???? FF00     	CHR16X24 "########........"
 2148 ???? FF80     	CHR16X24 "#########......."
 2149 ???? F7E0     	CHR16X24 "####.######....."
 2150 ???? F3F0     	CHR16X24 "####..######...."
 2151 ???? F1F8     	CHR16X24 "####...######..."
 2152 ???? F07E     	CHR16X24 "####.....######."
 2153 ???? F03F     	CHR16X24 "####......######"
 2154 ???? F01F     	CHR16X24 "####.......#####"
 2155 ???? F00F     	CHR16X24 "####........####"
 2156 ???? 0000     	CHR16X24 "................"
 2157 ???? 0000     	CHR16X24 "................"
 2158              	
 2159 ???? 0000     	CHR16X24 "................"
 2160 ???? 0000     	CHR16X24 "................"
 2161 ???? 0000     	CHR16X24 "................"
 2162 ???? 0000     	CHR16X24 "................"
 2163 ???? 0000     	CHR16X24 "................"
 2164 ???? 0000     	CHR16X24 "................"
 2165 ???? 0000     	CHR16X24 "................"
 2166 ???? 0000     	CHR16X24 "................"
 2167 ???? 0000     	CHR16X24 "................"
 2168 ???? 0000     	CHR16X24 "................"
 2169 ???? 0000     	CHR16X24 "................"
 2170 ???? 0000     	CHR16X24 "................"
 2171 ???? 0180     	CHR16X24 ".......##......."
 2172 ???? 03C0     	CHR16X24 "......####......"
 2173 ???? 03C0     	CHR16X24 "......####......"
 2174 ???? 07E0     	CHR16X24 ".....######....."
 2175 ???? 07E0     	CHR16X24 ".....######....."
 2176 ???? 03C0     	CHR16X24 "......####......"
 2177 ???? 03C0     	CHR16X24 "......####......"
 2178 ???? 0180     	CHR16X24 ".......##......."
 2179 ???? 0000     	CHR16X24 "................"
 2180 ???? 0000     	CHR16X24 "................"
 2181 ???? 0000     	CHR16X24 "................"
 2182 ???? 0000     	CHR16X24 "................"
 2183              	
 2184 ???? FFFF     	CHR16X24 "################"
 2185 ???? FFFF     	CHR16X24 "################"
 2186 ???? FFFF     	CHR16X24 "################"
 2187 ???? FFFF     	CHR16X24 "################"
 2188 ???? 000F     	CHR16X24 "............####"
 2189 ???? 001F     	CHR16X24 "...........#####"
 2190 ???? 003F     	CHR16X24 "..........######"
 2191 ???? 007E     	CHR16X24 ".........######."
 2192 ???? 00FC     	CHR16X24 "........######.."
 2193 ???? 01F8     	CHR16X24 ".......######..."
 2194 ???? 03F0     	CHR16X24 "......######...."
 2195 ???? 07E0     	CHR16X24 ".....######....."
 2196 ???? 0FC0     	CHR16X24 "....######......"
 2197 ???? 1F80     	CHR16X24 "...######......."
 2198 ???? 3F00     	CHR16X24 "..######........"
 2199 ???? 7E00     	CHR16X24 ".######........."
 2200 ???? FC00     	CHR16X24 "######.........."
 2201 ???? F800     	CHR16X24 "#####..........."
 2202 ???? FFFF     	CHR16X24 "################"
 2203 ???? FFFF     	CHR16X24 "################"
 2204 ???? FFFF     	CHR16X24 "################"
 2205 ???? FFFF     	CHR16X24 "################"
 2206 ???? 0000     	CHR16X24 "................"
 2207 ???? 0000     	CHR16X24 "................"
 2208              	
 2209 ???? 0003     	CHR16X24 "..............##"
 2210 ???? 0007     	CHR16X24 ".............###"
 2211 ???? 0007     	CHR16X24 ".............###"
 2212 ???? 000E     	CHR16X24 "............###."
 2213 ???? 001E     	CHR16X24 "...........####."
 2214 ???? 001C     	CHR16X24 "...........###.."
 2215 ???? 0038     	CHR16X24 "..........###..."
 2216 ???? 0078     	CHR16X24 ".........####..."
 2217 ???? 0070     	CHR16X24 ".........###...."
 2218 ???? 00E0     	CHR16X24 "........###....."
 2219 ???? 01E0     	CHR16X24 ".......####....."
 2220 ???? 01C0     	CHR16X24 ".......###......"
 2221 ???? 0380     	CHR16X24 "......###......."
 2222 ???? 0780     	CHR16X24 ".....####......."
 2223 ???? 0700     	CHR16X24 ".....###........"
 2224 ???? 0E00     	CHR16X24 "....###........."
 2225 ???? 1E00     	CHR16X24 "...####........."
 2226 ???? 1C00     	CHR16X24 "...###.........."
 2227 ???? 3800     	CHR16X24 "..###..........."
 2228 ???? 7800     	CHR16X24 ".####..........."
 2229 ???? 7000     	CHR16X24 ".###............"
 2230 ???? E000     	CHR16X24 "###............."
 2231 ???? E000     	CHR16X24 "###............."
 2232 ???? C000     	CHR16X24 "##.............."
 2233              	
 2234 ???? 0000     	CHR16X24 "................"
 2235 ???? 0000     	CHR16X24 "................"
 2236 ???? 0000     	CHR16X24 "................"
 2237 ???? 0000     	CHR16X24 "................"
 2238 ???? 0000     	CHR16X24 "................"
 2239 ???? 0000     	CHR16X24 "................"
 2240 ???? 0180     	CHR16X24 ".......##......."
 2241 ???? 0380     	CHR16X24 "......###......."
 2242 ???? 0380     	CHR16X24 "......###......."
 2243 ???? 0380     	CHR16X24 "......###......."
 2244 ???? 0180     	CHR16X24 ".......##......."
 2245 ???? 0000     	CHR16X24 "................"
 2246 ???? 0000     	CHR16X24 "................"
 2247 ???? 0000     	CHR16X24 "................"
 2248 ???? 0000     	CHR16X24 "................"
 2249 ???? 0180     	CHR16X24 ".......##......."
 2250 ???? 0380     	CHR16X24 "......###......."
 2251 ???? 0380     	CHR16X24 "......###......."
 2252 ???? 0380     	CHR16X24 "......###......."
 2253 ???? 0180     	CHR16X24 ".......##......."
 2254 ???? 0180     	CHR16X24 ".......##......."
 2255 ???? 0700     	CHR16X24 ".....###........"
 2256 ???? 0600     	CHR16X24 ".....##........."
 2257 ???? 0000     	CHR16X24 "................"
 2258              	
 2259 ???? 0000     	CHR16X24 "................"
 2260 ???? 0000     	CHR16X24 "................"
 2261 ???? 0000     	CHR16X24 "................"
 2262 ???? 0000     	CHR16X24 "................"
 2263 ???? 0000     	CHR16X24 "................"
 2264 ???? 0000     	CHR16X24 "................"
 2265 ???? 0180     	CHR16X24 ".......##......."
 2266 ???? 0380     	CHR16X24 "......###......."
 2267 ???? 0380     	CHR16X24 "......###......."
 2268 ???? 0380     	CHR16X24 "......###......."
 2269 ???? 0180     	CHR16X24 ".......##......."
 2270 ???? 0000     	CHR16X24 "................"
 2271 ???? 0000     	CHR16X24 "................"
 2272 ???? 0000     	CHR16X24 "................"
 2273 ???? 0000     	CHR16X24 "................"
 2274 ???? 0180     	CHR16X24 ".......##......."
 2275 ???? 0380     	CHR16X24 "......###......."
 2276 ???? 0380     	CHR16X24 "......###......."
 2277 ???? 0380     	CHR16X24 "......###......."
 2278 ???? 0180     	CHR16X24 ".......##......."
 2279 ???? 0000     	CHR16X24 "................"
 2280 ???? 0000     	CHR16X24 "................"
 2281 ???? 0000     	CHR16X24 "................"
 2282 ???? 0000     	CHR16X24 "................"
 2283              	
 2284 ???? 03C0     	CHR16X24 "......####......"
 2285 ???? 03C0     	CHR16X24 "......####......"
 2286 ???? 03C0     	CHR16X24 "......####......"
 2287 ???? 03C0     	CHR16X24 "......####......"
 2288 ???? 03C0     	CHR16X24 "......####......"
 2289 ???? 03C0     	CHR16X24 "......####......"
 2290 ???? 03C0     	CHR16X24 "......####......"
 2291 ???? 03C0     	CHR16X24 "......####......"
 2292 ???? 03C0     	CHR16X24 "......####......"
 2293 ???? 03C0     	CHR16X24 "......####......"
 2294 ???? 03C0     	CHR16X24 "......####......"
 2295 ???? 03C0     	CHR16X24 "......####......"
 2296 ???? 0180     	CHR16X24 ".......##......."
 2297 ???? 0180     	CHR16X24 ".......##......."
 2298 ???? 0180     	CHR16X24 ".......##......."
 2299 ???? 0180     	CHR16X24 ".......##......."
 2300 ???? 0000     	CHR16X24 "................"
 2301 ???? 0000     	CHR16X24 "................"
 2302 ???? 0000     	CHR16X24 "................"
 2303 ???? 0000     	CHR16X24 "................"
 2304 ???? 0180     	CHR16X24 ".......##......."
 2305 ???? 0180     	CHR16X24 ".......##......."
 2306 ???? 0180     	CHR16X24 ".......##......."
 2307 ???? 0180     	CHR16X24 ".......##......."
 2308              	
 2309 ???? 0180     	CHR16X24 ".......##......."
 2310 ???? 0180     	CHR16X24 ".......##......."
 2311 ???? 0180     	CHR16X24 ".......##......."
 2312 ???? 0180     	CHR16X24 ".......##......."
 2313 ???? 0180     	CHR16X24 ".......##......."
 2314 ???? 0180     	CHR16X24 ".......##......."
 2315 ???? 0180     	CHR16X24 ".......##......."
 2316 ???? 0180     	CHR16X24 ".......##......."
 2317 ???? 0180     	CHR16X24 ".......##......."
 2318 ???? 0180     	CHR16X24 ".......##......."
 2319 ???? FFFF     	CHR16X24 "################"
 2320 ???? FFFF     	CHR16X24 "################"
 2321 ???? FFFF     	CHR16X24 "################"
 2322 ???? FFFF     	CHR16X24 "################"
 2323 ???? 0180     	CHR16X24 ".......##......."
 2324 ???? 0180     	CHR16X24 ".......##......."
 2325 ???? 0180     	CHR16X24 ".......##......."
 2326 ???? 0180     	CHR16X24 ".......##......."
 2327 ???? 0180     	CHR16X24 ".......##......."
 2328 ???? 0180     	CHR16X24 ".......##......."
 2329 ???? 0180     	CHR16X24 ".......##......."
 2330 ???? 0180     	CHR16X24 ".......##......."
 2331 ???? 0180     	CHR16X24 ".......##......."
 2332 ???? 0180     	CHR16X24 ".......##......."
 2333              	
 2334 ???? 1FF8     	CHR16X24 "...##########..."
 2335 ???? 7FFE     	CHR16X24 ".##############."
 2336 ???? 7FFE     	CHR16X24 ".##############."
 2337 ???? 7FFE     	CHR16X24 ".##############."
 2338 ???? E007     	CHR16X24 "###..........###"
 2339 ???? E007     	CHR16X24 "###..........###"
 2340 ???? E007     	CHR16X24 "###..........###"
 2341 ???? E7E7     	CHR16X24 "###..######..###"
 2342 ???? E7E7     	CHR16X24 "###..######..###"
 2343 ???? E7E7     	CHR16X24 "###..######..###"
 2344 ???? E667     	CHR16X24 "###..##..##..###"
 2345 ???? E667     	CHR16X24 "###..##..##..###"
 2346 ???? E667     	CHR16X24 "###..##..##..###"
 2347 ???? E667     	CHR16X24 "###..##..##..###"
 2348 ???? E7FE     	CHR16X24 "###..##########."
 2349 ???? E7FE     	CHR16X24 "###..##########."
 2350 ???? E7FC     	CHR16X24 "###..#########.."
 2351 ???? E000     	CHR16X24 "###............."
 2352 ???? E000     	CHR16X24 "###............."
 2353 ???? E007     	CHR16X24 "###..........###"
 2354 ???? 7FFE     	CHR16X24 ".##############."
 2355 ???? 7FFE     	CHR16X24 ".##############."
 2356 ???? 7FFE     	CHR16X24 ".##############."
 2357 ???? 1FF8     	CHR16X24 "...##########..."
 2358              	
 2359 ???? 0180     	CHR16X24 ".......##......."
 2360 ???? 0180     	CHR16X24 ".......##......."
 2361 ???? 0180     	CHR16X24 ".......##......."
 2362 ???? 0180     	CHR16X24 ".......##......."
 2363 ???? 0180     	CHR16X24 ".......##......."
 2364 ???? 0180     	CHR16X24 ".......##......."
 2365 ???? 03C0     	CHR16X24 "......####......"
 2366 ???? 03C0     	CHR16X24 "......####......"
 2367 ???? FFFF     	CHR16X24 "################"
 2368 ???? FFFF     	CHR16X24 "################"
 2369 ???? 7FFE     	CHR16X24 ".##############."
 2370 ???? 1FF8     	CHR16X24 "...##########..."
 2371 ???? 0FF0     	CHR16X24 "....########...."
 2372 ???? 07E0     	CHR16X24 ".....######....."
 2373 ???? 07E0     	CHR16X24 ".....######....."
 2374 ???? 0FF0     	CHR16X24 "....########...."
 2375 ???? 0FF0     	CHR16X24 "....########...."
 2376 ???? 1E78     	CHR16X24 "...####..####..."
 2377 ???? 1E78     	CHR16X24 "...####..####..."
 2378 ???? 1C38     	CHR16X24 "...###....###..."
 2379 ???? 1818     	CHR16X24 "...##......##..."
 2380 ???? 1008     	CHR16X24 "...#........#..."
 2381 ???? 0000     	CHR16X24 "................"
 2382 ???? 0000     	CHR16X24 "................"
 2383              	
 2384 ???? 0000     	CHR16X24 "................"
 2385 ???? 0000     	CHR16X24 "................"
 2386 ???? 0000     	CHR16X24 "................"
 2387 ???? 0000     	CHR16X24 "................"
 2388 ???? 0000     	CHR16X24 "................"
 2389 ???? 0000     	CHR16X24 "................"
 2390 ???? 0000     	CHR16X24 "................"
 2391 ???? 0000     	CHR16X24 "................"
 2392 ???? 0000     	CHR16X24 "................"
 2393 ???? 0000     	CHR16X24 "................"
 2394 ???? 0000     	CHR16X24 "................"
 2395 ???? 0000     	CHR16X24 "................"
 2396 ???? 0000     	CHR16X24 "................"
 2397 ???? 0000     	CHR16X24 "................"
 2398 ???? 0000     	CHR16X24 "................"
 2399 ???? 0180     	CHR16X24 ".......##......."
 2400 ???? 0380     	CHR16X24 "......###......."
 2401 ???? 0380     	CHR16X24 "......###......."
 2402 ???? 0380     	CHR16X24 "......###......."
 2403 ???? 0180     	CHR16X24 ".......##......."
 2404 ???? 0180     	CHR16X24 ".......##......."
 2405 ???? 0700     	CHR16X24 ".....###........"
 2406 ???? 0600     	CHR16X24 ".....##........."
 2407 ???? 0000     	CHR16X24 "................"
 2408              	
 2409 ???? FFFF     	CHR16X24 "################"
 2410 ???? FFFF     	CHR16X24 "################"
 2411 ???? FFFF     	CHR16X24 "################"
 2412 ???? FFFF     	CHR16X24 "################"
 2413 ???? FFFF     	CHR16X24 "################"
 2414 ???? FFFF     	CHR16X24 "################"
 2415 ???? FFFF     	CHR16X24 "################"
 2416 ???? FFFF     	CHR16X24 "################"
 2417 ???? FFFF     	CHR16X24 "################"
 2418 ???? FFFF     	CHR16X24 "################"
 2419 ???? FFFF     	CHR16X24 "################"
 2420 ???? FFFF     	CHR16X24 "################"
 2421 ???? FFFF     	CHR16X24 "################"
 2422 ???? FFFF     	CHR16X24 "################"
 2423 ???? FFFF     	CHR16X24 "################"
 2424 ???? FFFF     	CHR16X24 "################"
 2425 ???? FFFF     	CHR16X24 "################"
 2426 ???? FFFF     	CHR16X24 "################"
 2427 ???? FFFF     	CHR16X24 "################"
 2428 ???? FFFF     	CHR16X24 "################"
 2429 ???? FFFF     	CHR16X24 "################"
 2430 ???? FFFF     	CHR16X24 "################"
 2431 ???? FFFF     	CHR16X24 "################"
 2432 ???? FFFF     	CHR16X24 "################"
 2433              	
 2434 ???? 00000000 	CHR32X32 "................................"
 2435 ???? 00000000 	CHR32X32 "................................"
 2436 ???? 00000000 	CHR32X32 "................................"
 2437 ???? 00000000 	CHR32X32 "................................"
 2438 ???? 0F0000F0 	CHR32X32 "....####................####...."
 2439 ???? 0F0003F0 	CHR32X32 "....####..............######...."
 2440 ???? 0F000FF0 	CHR32X32 "....####............########...."
 2441 ???? 0F003FF0 	CHR32X32 "....####..........##########...."
 2442 ???? 0F00FFC0 	CHR32X32 "....####........##########......"
 2443 ???? 0F03FF00 	CHR32X32 "....####......##########........"
 2444 ???? 0F0FFC00 	CHR32X32 "....####....##########.........."
 2445 ???? 0F3FF000 	CHR32X32 "....####..##########............"
 2446 ???? 0FFFC000 	CHR32X32 "....##############.............."
 2447 ???? 0FFF0000 	CHR32X32 "....############................"
 2448 ???? 0FFC0000 	CHR32X32 "....##########.................."
 2449 ???? 0FF00000 	CHR32X32 "....########...................."
 2450 ???? 0FF00000 	CHR32X32 "....########...................."
 2451 ???? 0FFC0000 	CHR32X32 "....##########.................."
 2452 ???? 0FFF0000 	CHR32X32 "....############................"
 2453 ???? 0FFFC000 	CHR32X32 "....##############.............."
 2454 ???? 0F3FF000 	CHR32X32 "....####..##########............"
 2455 ???? 0F0FFC00 	CHR32X32 "....####....##########.........."
 2456 ???? 0F03FF00 	CHR32X32 "....####......##########........"
 2457 ???? 0F00FFC0 	CHR32X32 "....####........##########......"
 2458 ???? 0F003FF0 	CHR32X32 "....####..........##########...."
 2459 ???? 0F000FF0 	CHR32X32 "....####............########...."
 2460 ???? 0F0003F0 	CHR32X32 "....####..............######...."
 2461 ???? 0F0000F0 	CHR32X32 "....####................####...."
 2462 ???? 00000000 	CHR32X32 "................................"
 2463 ???? 00000000 	CHR32X32 "................................"
 2464 ???? 00000000 	CHR32X32 "................................"
 2465 ???? 00000000 	CHR32X32 "................................"
 2466              	
 2467 ???? 00000000 	CHR32X32 "................................"
 2468 ???? 00000000 	CHR32X32 "................................"
 2469 ???? 00000000 	CHR32X32 "................................"
 2470 ???? 00000000 	CHR32X32 "................................"
 2471 ???? 00000000 	CHR32X32 "................................"
 2472 ???? 00000000 	CHR32X32 "................................"
 2473 ???? 00000000 	CHR32X32 "................................"
 2474 ???? 00000000 	CHR32X32 "................................"
 2475 ???? 00000000 	CHR32X32 "................................"
 2476 ???? 00000000 	CHR32X32 "................................"
 2477 ???? 00000000 	CHR32X32 "................................"
 2478 ???? 00000000 	CHR32X32 "................................"
 2479 ???? 00000000 	CHR32X32 "................................"
 2480 ???? 00000000 	CHR32X32 "................................"
 2481 ???? 00000000 	CHR32X32 "................................"
 2482 ???? 00000000 	CHR32X32 "................................"
 2483 ???? 00018000 	CHR32X32 "...............##..............."
 2484 ???? 0007E000 	CHR32X32 ".............######............."
 2485 ???? 0007E000 	CHR32X32 ".............######............."
 2486 ???? 000FF000 	CHR32X32 "............########............"
 2487 ???? 000FF000 	CHR32X32 "............########............"
 2488 ???? 0007E000 	CHR32X32 ".............######............."
 2489 ???? 0007E000 	CHR32X32 ".............######............."
 2490 ???? 00018000 	CHR32X32 "...............##..............."
 2491 ???? 00000000 	CHR32X32 "................................"
 2492 ???? 00000000 	CHR32X32 "................................"
 2493 ???? 00000000 	CHR32X32 "................................"
 2494 ???? 00000000 	CHR32X32 "................................"
 2495 ???? 00000000 	CHR32X32 "................................"
 2496 ???? 00000000 	CHR32X32 "................................"
 2497 ???? 00000000 	CHR32X32 "................................"
 2498 ???? 00000000 	CHR32X32 "................................"
 2499              	
 2500 ???? 00000000 	CHR32X32 "................................"
 2501 ???? 00000000 	CHR32X32 "................................"
 2502 ???? 00000000 	CHR32X32 "................................"
 2503 ???? 00000000 	CHR32X32 "................................"
 2504 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2505 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2506 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2507 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2508 ???? 000007E0 	CHR32X32 ".....................######....."
 2509 ???? 00000FC0 	CHR32X32 "....................######......"
 2510 ???? 00001F80 	CHR32X32 "...................######......."
 2511 ???? 00003F00 	CHR32X32 "..................######........"
 2512 ???? 00007E00 	CHR32X32 ".................######........."
 2513 ???? 0000FC00 	CHR32X32 "................######.........."
 2514 ???? 0001F800 	CHR32X32 "...............######..........."
 2515 ???? 0003F000 	CHR32X32 "..............######............"
 2516 ???? 0007E000 	CHR32X32 ".............######............."
 2517 ???? 000FC000 	CHR32X32 "............######.............."
 2518 ???? 001F8000 	CHR32X32 "...........######..............."
 2519 ???? 003F0000 	CHR32X32 "..........######................"
 2520 ???? 007E0000 	CHR32X32 ".........######................."
 2521 ???? 00FC0000 	CHR32X32 "........######.................."
 2522 ???? 01F80000 	CHR32X32 ".......######..................."
 2523 ???? 03F00000 	CHR32X32 "......######...................."
 2524 ???? 07FFFFF0 	CHR32X32 ".....#######################...."
 2525 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2526 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2527 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2528 ???? 00000000 	CHR32X32 "................................"
 2529 ???? 00000000 	CHR32X32 "................................"
 2530 ???? 00000000 	CHR32X32 "................................"
 2531 ???? 00000000 	CHR32X32 "................................"
 2532              	
 2533 ???? 00000000 	CHR32X32 "................................"
 2534 ???? 00000000 	CHR32X32 "................................"
 2535 ???? 00000000 	CHR32X32 "................................"
 2536 ???? 00000000 	CHR32X32 "................................"
 2537 ???? 00000070 	CHR32X32 ".........................###...."
 2538 ???? 000000F0 	CHR32X32 "........................####...."
 2539 ???? 000001F0 	CHR32X32 ".......................#####...."
 2540 ???? 000003E0 	CHR32X32 "......................#####....."
 2541 ???? 000007C0 	CHR32X32 ".....................#####......"
 2542 ???? 00000F80 	CHR32X32 "....................#####......."
 2543 ???? 00001F00 	CHR32X32 "...................#####........"
 2544 ???? 00003E00 	CHR32X32 "..................#####........."
 2545 ???? 00007C00 	CHR32X32 ".................#####.........."
 2546 ???? 0000F800 	CHR32X32 "................#####..........."
 2547 ???? 0001F000 	CHR32X32 "...............#####............"
 2548 ???? 0003E000 	CHR32X32 "..............#####............."
 2549 ???? 0007C000 	CHR32X32 ".............#####.............."
 2550 ???? 000F8000 	CHR32X32 "............#####..............."
 2551 ???? 001F0000 	CHR32X32 "...........#####................"
 2552 ???? 003E0000 	CHR32X32 "..........#####................."
 2553 ???? 007C0000 	CHR32X32 ".........#####.................."
 2554 ???? 00F80000 	CHR32X32 "........#####..................."
 2555 ???? 01F00000 	CHR32X32 ".......#####...................."
 2556 ???? 03E00000 	CHR32X32 "......#####....................."
 2557 ???? 07C00000 	CHR32X32 ".....#####......................"
 2558 ???? 0F800000 	CHR32X32 "....#####......................."
 2559 ???? 0F000000 	CHR32X32 "....####........................"
 2560 ???? 0E000000 	CHR32X32 "....###........................."
 2561 ???? 00000000 	CHR32X32 "................................"
 2562 ???? 00000000 	CHR32X32 "................................"
 2563 ???? 00000000 	CHR32X32 "................................"
 2564 ???? 00000000 	CHR32X32 "................................"
 2565              	
 2566 ???? 00000000 	CHR32X32 "................................"
 2567 ???? 00000000 	CHR32X32 "................................"
 2568 ???? 00000000 	CHR32X32 "................................"
 2569 ???? 00000000 	CHR32X32 "................................"
 2570 ???? 00000000 	CHR32X32 "................................"
 2571 ???? 00000000 	CHR32X32 "................................"
 2572 ???? 00000000 	CHR32X32 "................................"
 2573 ???? 00000000 	CHR32X32 "................................"
 2574 ???? 00000000 	CHR32X32 "................................"
 2575 ???? 00000000 	CHR32X32 "................................"
 2576 ???? 00038000 	CHR32X32 "..............###..............."
 2577 ???? 0007C000 	CHR32X32 ".............#####.............."
 2578 ???? 0007C000 	CHR32X32 ".............#####.............."
 2579 ???? 0007C000 	CHR32X32 ".............#####.............."
 2580 ???? 00038000 	CHR32X32 "..............###..............."
 2581 ???? 00000000 	CHR32X32 "................................"
 2582 ???? 00000000 	CHR32X32 "................................"
 2583 ???? 00000000 	CHR32X32 "................................"
 2584 ???? 00000000 	CHR32X32 "................................"
 2585 ???? 00038000 	CHR32X32 "..............###..............."
 2586 ???? 0007C000 	CHR32X32 ".............#####.............."
 2587 ???? 0007C000 	CHR32X32 ".............#####.............."
 2588 ???? 0007C000 	CHR32X32 ".............#####.............."
 2589 ???? 00038000 	CHR32X32 "..............###..............."
 2590 ???? 00038000 	CHR32X32 "..............###..............."
 2591 ???? 000F0000 	CHR32X32 "............####................"
 2592 ???? 000E0000 	CHR32X32 "............###................."
 2593 ???? 00000000 	CHR32X32 "................................"
 2594 ???? 00000000 	CHR32X32 "................................"
 2595 ???? 00000000 	CHR32X32 "................................"
 2596 ???? 00000000 	CHR32X32 "................................"
 2597 ???? 00000000 	CHR32X32 "................................"
 2598              	
 2599 ???? 00000000 	CHR32X32 "................................"
 2600 ???? 00000000 	CHR32X32 "................................"
 2601 ???? 00000000 	CHR32X32 "................................"
 2602 ???? 00000000 	CHR32X32 "................................"
 2603 ???? 00000000 	CHR32X32 "................................"
 2604 ???? 00000000 	CHR32X32 "................................"
 2605 ???? 00000000 	CHR32X32 "................................"
 2606 ???? 00000000 	CHR32X32 "................................"
 2607 ???? 00000000 	CHR32X32 "................................"
 2608 ???? 00000000 	CHR32X32 "................................"
 2609 ???? 00038000 	CHR32X32 "..............###..............."
 2610 ???? 0007C000 	CHR32X32 ".............#####.............."
 2611 ???? 0007C000 	CHR32X32 ".............#####.............."
 2612 ???? 0007C000 	CHR32X32 ".............#####.............."
 2613 ???? 00038000 	CHR32X32 "..............###..............."
 2614 ???? 00000000 	CHR32X32 "................................"
 2615 ???? 00000000 	CHR32X32 "................................"
 2616 ???? 00000000 	CHR32X32 "................................"
 2617 ???? 00000000 	CHR32X32 "................................"
 2618 ???? 00038000 	CHR32X32 "..............###..............."
 2619 ???? 0007C000 	CHR32X32 ".............#####.............."
 2620 ???? 0007C000 	CHR32X32 ".............#####.............."
 2621 ???? 0007C000 	CHR32X32 ".............#####.............."
 2622 ???? 00038000 	CHR32X32 "..............###..............."
 2623 ???? 00000000 	CHR32X32 "................................"
 2624 ???? 00000000 	CHR32X32 "................................"
 2625 ???? 00000000 	CHR32X32 "................................"
 2626 ???? 00000000 	CHR32X32 "................................"
 2627 ???? 00000000 	CHR32X32 "................................"
 2628 ???? 00000000 	CHR32X32 "................................"
 2629 ???? 00000000 	CHR32X32 "................................"
 2630 ???? 00000000 	CHR32X32 "................................"
 2631              	
 2632 ???? 00000000 	CHR32X32 "................................"
 2633 ???? 00000000 	CHR32X32 "................................"
 2634 ???? 00000000 	CHR32X32 "................................"
 2635 ???? 00000000 	CHR32X32 "................................"
 2636 ???? 0007E000 	CHR32X32 ".............######............."
 2637 ???? 0007E000 	CHR32X32 ".............######............."
 2638 ???? 0007E000 	CHR32X32 ".............######............."
 2639 ???? 0007E000 	CHR32X32 ".............######............."
 2640 ???? 0007E000 	CHR32X32 ".............######............."
 2641 ???? 0007E000 	CHR32X32 ".............######............."
 2642 ???? 0007E000 	CHR32X32 ".............######............."
 2643 ???? 0007E000 	CHR32X32 ".............######............."
 2644 ???? 0007E000 	CHR32X32 ".............######............."
 2645 ???? 0007E000 	CHR32X32 ".............######............."
 2646 ???? 0007E000 	CHR32X32 ".............######............."
 2647 ???? 0007E000 	CHR32X32 ".............######............."
 2648 ???? 0003C000 	CHR32X32 "..............####.............."
 2649 ???? 0003C000 	CHR32X32 "..............####.............."
 2650 ???? 0003C000 	CHR32X32 "..............####.............."
 2651 ???? 0003C000 	CHR32X32 "..............####.............."
 2652 ???? 00000000 	CHR32X32 "................................"
 2653 ???? 00000000 	CHR32X32 "................................"
 2654 ???? 00000000 	CHR32X32 "................................"
 2655 ???? 00000000 	CHR32X32 "................................"
 2656 ???? 0003C000 	CHR32X32 "..............####.............."
 2657 ???? 0003C000 	CHR32X32 "..............####.............."
 2658 ???? 0003C000 	CHR32X32 "..............####.............."
 2659 ???? 0003C000 	CHR32X32 "..............####.............."
 2660 ???? 00000000 	CHR32X32 "................................"
 2661 ???? 00000000 	CHR32X32 "................................"
 2662 ???? 00000000 	CHR32X32 "................................"
 2663 ???? 00000000 	CHR32X32 "................................"
 2664              	
 2665 ???? 00000000 	CHR32X32 "................................"
 2666 ???? 00000000 	CHR32X32 "................................"
 2667 ???? 00000000 	CHR32X32 "................................"
 2668 ???? 00000000 	CHR32X32 "................................"
 2669 ???? 0003C000 	CHR32X32 "..............####.............."
 2670 ???? 0003C000 	CHR32X32 "..............####.............."
 2671 ???? 0003C000 	CHR32X32 "..............####.............."
 2672 ???? 0003C000 	CHR32X32 "..............####.............."
 2673 ???? 0003C000 	CHR32X32 "..............####.............."
 2674 ???? 0003C000 	CHR32X32 "..............####.............."
 2675 ???? 0003C000 	CHR32X32 "..............####.............."
 2676 ???? 0003C000 	CHR32X32 "..............####.............."
 2677 ???? 0003C000 	CHR32X32 "..............####.............."
 2678 ???? 0003C000 	CHR32X32 "..............####.............."
 2679 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2680 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2681 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2682 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2683 ???? 0003C000 	CHR32X32 "..............####.............."
 2684 ???? 0003C000 	CHR32X32 "..............####.............."
 2685 ???? 0003C000 	CHR32X32 "..............####.............."
 2686 ???? 0003C000 	CHR32X32 "..............####.............."
 2687 ???? 0003C000 	CHR32X32 "..............####.............."
 2688 ???? 0003C000 	CHR32X32 "..............####.............."
 2689 ???? 0003C000 	CHR32X32 "..............####.............."
 2690 ???? 0003C000 	CHR32X32 "..............####.............."
 2691 ???? 0003C000 	CHR32X32 "..............####.............."
 2692 ???? 0003C000 	CHR32X32 "..............####.............."
 2693 ???? 00000000 	CHR32X32 "................................"
 2694 ???? 00000000 	CHR32X32 "................................"
 2695 ???? 00000000 	CHR32X32 "................................"
 2696 ???? 00000000 	CHR32X32 "................................"
 2697              	
 2698 ???? 00000000 	CHR32X32 "................................"
 2699 ???? 00000000 	CHR32X32 "................................"
 2700 ???? 00000000 	CHR32X32 "................................"
 2701 ???? 00000000 	CHR32X32 "................................"
 2702 ???? 00FFFF00 	CHR32X32 "........################........"
 2703 ???? 03FFFFC0 	CHR32X32 "......####################......"
 2704 ???? 07FFFFE0 	CHR32X32 ".....######################....."
 2705 ???? 07FFFFE0 	CHR32X32 ".....######################....."
 2706 ???? 0F8001F0 	CHR32X32 "....#####..............#####...."
 2707 ???? 0F0000F0 	CHR32X32 "....####................####...."
 2708 ???? 0F0000F0 	CHR32X32 "....####................####...."
 2709 ???? 0F0FF0F0 	CHR32X32 "....####....########....####...."
 2710 ???? 0F1FF8F0 	CHR32X32 "....####...##########...####...."
 2711 ???? 0F1FF8F0 	CHR32X32 "....####...##########...####...."
 2712 ???? 0F1C38F0 	CHR32X32 "....####...###....###...####...."
 2713 ???? 0F1C38F0 	CHR32X32 "....####...###....###...####...."
 2714 ???? 0F1C38F0 	CHR32X32 "....####...###....###...####...."
 2715 ???? 0F1C39F0 	CHR32X32 "....####...###....###..#####...."
 2716 ???? 0F1FFFE0 	CHR32X32 "....####...################....."
 2717 ???? 0F1FFFE0 	CHR32X32 "....####...################....."
 2718 ???? 0F0FFF80 	CHR32X32 "....####....#############......."
 2719 ???? 0F000000 	CHR32X32 "....####........................"
 2720 ???? 0F000000 	CHR32X32 "....####........................"
 2721 ???? 0F8001F0 	CHR32X32 "....#####..............#####...."
 2722 ???? 07FFFFE0 	CHR32X32 ".....######################....."
 2723 ???? 07FFFFE0 	CHR32X32 ".....######################....."
 2724 ???? 03FFFFC0 	CHR32X32 "......####################......"
 2725 ???? 00FFFF00 	CHR32X32 "........################........"
 2726 ???? 00000000 	CHR32X32 "................................"
 2727 ???? 00000000 	CHR32X32 "................................"
 2728 ???? 00000000 	CHR32X32 "................................"
 2729 ???? 00000000 	CHR32X32 "................................"
 2730              	
 2731 ???? 00000000 	CHR32X32 "................................"
 2732 ???? 00000000 	CHR32X32 "................................"
 2733 ???? 00000000 	CHR32X32 "................................"
 2734 ???? 00000000 	CHR32X32 "................................"
 2735 ???? 00018000 	CHR32X32 "...............##..............."
 2736 ???? 00018000 	CHR32X32 "...............##..............."
 2737 ???? 00018000 	CHR32X32 "...............##..............."
 2738 ???? 0003C000 	CHR32X32 "..............####.............."
 2739 ???? 0003C000 	CHR32X32 "..............####.............."
 2740 ???? 0003C000 	CHR32X32 "..............####.............."
 2741 ???? 0007E000 	CHR32X32 ".............######............."
 2742 ???? 0007E000 	CHR32X32 ".............######............."
 2743 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2744 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2745 ???? 03FFFFC0 	CHR32X32 "......####################......"
 2746 ???? 00FFFF00 	CHR32X32 "........################........"
 2747 ???? 003FFC00 	CHR32X32 "..........############.........."
 2748 ???? 001FF800 	CHR32X32 "...........##########..........."
 2749 ???? 001FF800 	CHR32X32 "...........##########..........."
 2750 ???? 003FFC00 	CHR32X32 "..........############.........."
 2751 ???? 003FFC00 	CHR32X32 "..........############.........."
 2752 ???? 007E7E00 	CHR32X32 ".........######..######........."
 2753 ???? 007C3E00 	CHR32X32 ".........#####....#####........."
 2754 ???? 00781E00 	CHR32X32 ".........####......####........."
 2755 ???? 00E00700 	CHR32X32 "........###..........###........"
 2756 ???? 00C00300 	CHR32X32 "........##............##........"
 2757 ???? 00000000 	CHR32X32 "................................"
 2758 ???? 00000000 	CHR32X32 "................................"
 2759 ???? 00000000 	CHR32X32 "................................"
 2760 ???? 00000000 	CHR32X32 "................................"
 2761 ???? 00000000 	CHR32X32 "................................"
 2762 ???? 00000000 	CHR32X32 "................................"
 2763              	
 2764 ???? 00000000 	CHR32X32 "................................"
 2765 ???? 00000000 	CHR32X32 "................................"
 2766 ???? 00000000 	CHR32X32 "................................"
 2767 ???? 00000000 	CHR32X32 "................................"
 2768 ???? 00000000 	CHR32X32 "................................"
 2769 ???? 00000000 	CHR32X32 "................................"
 2770 ???? 00000000 	CHR32X32 "................................"
 2771 ???? 00000000 	CHR32X32 "................................"
 2772 ???? 00000000 	CHR32X32 "................................"
 2773 ???? 00000000 	CHR32X32 "................................"
 2774 ???? 00000000 	CHR32X32 "................................"
 2775 ???? 00000000 	CHR32X32 "................................"
 2776 ???? 00000000 	CHR32X32 "................................"
 2777 ???? 00000000 	CHR32X32 "................................"
 2778 ???? 00000000 	CHR32X32 "................................"
 2779 ???? 00000000 	CHR32X32 "................................"
 2780 ???? 00000000 	CHR32X32 "................................"
 2781 ???? 00000000 	CHR32X32 "................................"
 2782 ???? 00000000 	CHR32X32 "................................"
 2783 ???? 00038000 	CHR32X32 "..............###..............."
 2784 ???? 0007C000 	CHR32X32 ".............#####.............."
 2785 ???? 0007C000 	CHR32X32 ".............#####.............."
 2786 ???? 0007C000 	CHR32X32 ".............#####.............."
 2787 ???? 00038000 	CHR32X32 "..............###..............."
 2788 ???? 00038000 	CHR32X32 "..............###..............."
 2789 ???? 000F0000 	CHR32X32 "............####................"
 2790 ???? 000E0000 	CHR32X32 "............###................."
 2791 ???? 00000000 	CHR32X32 "................................"
 2792 ???? 00000000 	CHR32X32 "................................"
 2793 ???? 00000000 	CHR32X32 "................................"
 2794 ???? 00000000 	CHR32X32 "................................"
 2795 ???? 00000000 	CHR32X32 "................................"
 2796              	
 2797 ???? 03FFFFC0 	CHR32X32 "......####################......"
 2798 ???? 1FFFFFF8 	CHR32X32 "...##########################..."
 2799 ???? 3C00003C 	CHR32X32 "..####....................####.."
 2800 ???? 7000000E 	CHR32X32 ".###........................###."
 2801 ???? FFFFFFFF 	CHR32X32 "################################"
 2802 ???? FFFFFFFF 	CHR32X32 "################################"
 2803 ???? FFFFFFFF 	CHR32X32 "################################"
 2804 ???? FFFFFFFF 	CHR32X32 "################################"
 2805 ???? FFFFFFFF 	CHR32X32 "################################"
 2806 ???? FFFFFFFF 	CHR32X32 "################################"
 2807 ???? FFFFFFFF 	CHR32X32 "################################"
 2808 ???? FFFFFFFF 	CHR32X32 "################################"
 2809 ???? FFFFFFFF 	CHR32X32 "################################"
 2810 ???? FFFFFFFF 	CHR32X32 "################################"
 2811 ???? FFFFFFFF 	CHR32X32 "################################"
 2812 ???? FFFFFFFF 	CHR32X32 "################################"
 2813 ???? FFFFFFFF 	CHR32X32 "################################"
 2814 ???? FFFFFFFF 	CHR32X32 "################################"
 2815 ???? FFFFFFFF 	CHR32X32 "################################"
 2816 ???? FFFFFFFF 	CHR32X32 "################################"
 2817 ???? FFFFFFFF 	CHR32X32 "################################"
 2818 ???? FFFFFFFF 	CHR32X32 "################################"
 2819 ???? FFFFFFFF 	CHR32X32 "################################"
 2820 ???? FFFFFFFF 	CHR32X32 "################################"
 2821 ???? FFFFFFFF 	CHR32X32 "################################"
 2822 ???? FFFFFFFF 	CHR32X32 "################################"
 2823 ???? FFFFFFFF 	CHR32X32 "################################"
 2824 ???? FFFFFFFF 	CHR32X32 "################################"
 2825 ???? 7000000E 	CHR32X32 ".###........................###."
 2826 ???? 3C000008 	CHR32X32 "..####......................#..."
 2827 ???? 08080808 	CHR32X32 "....#.......#.......#.......#..."
 2828 ???? 08080808 	CHR32X32 "....#.......#.......#.......#..."
 2829              	
 1683              	.endif
 1684              	.ifdef I_HAVE_AT_LEAST_1GB_RAM
 1685              	 .incbin "newcode.dat"
 1686              	.else
 1687 ???? C9C6D091 	 .incbin "color.dat"
 1687      00802C31 
 1687      CA9A9AE5 
 1687      000000D2 
 1687      0AD24C96 
 1687      000000E8 
 1687      0AA09889 
 1687      0A1D9BC5 
 1687      00000079 
 1687      6A5771C0 
 1687      08030000 
 1688              	.endif
 1689              	.ifdef MANDELBROT
 1690              	 .incbin "new_mandelbrot.blk"
 1691              	.endif
 1692              	.end start
DEFINED SYMBOLS
                            *ABS*:0000000000000001 CM2001
           color.asm:6      *ABS*:0000000000000001 QUESTIONABLE
           color.asm:7      *ABS*:0000000000000001 AGP
           color.asm:8      *ABS*:0000000000000001 E1_STROBE
           color.asm:9      *ABS*:0000000000000001 AUTO_REFRESH
           color.asm:86     *ABS*:0000000000000400 hp
           color.asm:87     *ABS*:0000000000000300 vp
           color.asm:89     *ABS*:0000000000000117 vesa
           color.asm:100    *ABS*:0000000000025c00 buffer
            boot.asm:8      .text:0000000000000000 start
            boot.asm:74     .text:0000000000000058 start0
            boot.asm:25     .text:0000000000000025 command
            boot.asm:33     .text:0000000000000027 cylinder
            boot.asm:54     .text:0000000000000030 nc
            boot.asm:55     .text:0000000000000034 gdt
            boot.asm:63     .text:0000000000000040 gdt0
            boot.asm:106    .text:000000000000005e loc
            boot.asm:117    .text:000000000000006a relocate
            boot.asm:128    .text:0000000000000074 protected
                            *ABS*:00000000000a0000 gods
            boot.asm:139    .text:0000000000000074 a20
            boot.asm:331    .text:0000000000000111 dma
            boot.asm:166    .text:0000000000000092 cold
                            *ABS*:000000000009f448 godd
            boot.asm:188    .text:00000000000000b2 start2
            boot.asm:270    .text:00000000000000fa sense_
            boot.asm:371    .text:000000000000012e read
            boot.asm:305    .text:000000000000010f stop
           color.asm:114    .text:000000000000026b start1
            boot.asm:191    *ABS*:00000000000000a6 us
            boot.asm:192    *ABS*:0000000000028870 ms
            boot.asm:193    .text:00000000000000bc spin
            boot.asm:312    .text:000000000000010f onoff
            boot.asm:230    .text:00000000000000e1 cmd
            boot.asm:214    .text:00000000000000d6 cmdi
            boot.asm:219    .text:00000000000000de ready
            boot.asm:229    .text:00000000000000e1 transfer
            boot.asm:233    .text:00000000000000e1 cmd0
            boot.asm:236    .text:00000000000000e7 cmd1
            boot.asm:289    .text:0000000000000107 seek
            boot.asm:406    .text:0000000000000141 write
            boot.asm:435    .text:0000000000000204 flop
            boot.asm:491    .text:000000000000020c readf
            boot.asm:498    .text:0000000000000222 readf1
            boot.asm:504    .text:000000000000022e writef
            boot.asm:513    .text:0000000000000246 seekf
            boot.asm:523    .text:000000000000025c cmdf
            boot.asm:530    .text:0000000000000264 readyf
           color.asm:109    *ABS*:0000000000003000 icons
           color.asm:113    .text:000000000000026b warm
             gen.asm:63     .text:00000000000008df ati0
           color.asm:195    .text:00000000000002df show0
           color.asm:516    .text:00000000000005cc forths
           color.asm:553    .text:00000000000005d8 forth1
           color.asm:543    .text:00000000000005d8 forth0
           color.asm:515    .text:00000000000005c8 macros
           color.asm:529    .text:00000000000005d0 macro1
           color.asm:527    .text:00000000000005d0 macro0
           color.asm:486    .text:000000000000054e load
           color.asm:974    .text:0000000000000c57 accept
           color.asm:136    *ABS*:000000000009dcd8 mains
           color.asm:137    *ABS*:000000000009d120 maind
           color.asm:140    .text:0000000000000294 me
           color.asm:155    .text:00000000000002a1 god
           color.asm:141    .text:0000000000000298 screen
           color.asm:154    .text:000000000000029c round
           color.asm:177    .text:00000000000002c2 unpause
           color.asm:162    .text:00000000000002aa main
           color.asm:170    .text:00000000000002b0 pause
           color.asm:184    .text:00000000000002d0 act
           color.asm:197    .text:00000000000002e5 show
             gen.asm:83     .text:0000000000000919 graphic
             gen.asm:85     .text:000000000000091a switch
           color.asm:207    .text:0000000000000302 c_
           color.asm:210    .text:0000000000000303 mark
           color.asm:510    .text:00000000000005a8 mk
           color.asm:219    .text:0000000000000304 empty
           color.asm:511    .text:00000000000005b4 h
           color.asm:513    .text:00000000000005bc class
           color.asm:229    .text:000000000000030f mfind
           color.asm:235    .text:0000000000000317 find
           color.asm:245    .text:0000000000000328 ex1
           color.asm:960    .text:0000000000000c50 words
           color.asm:267    .text:0000000000000360 abort1
           color.asm:580    .text:000000000000069c forth2
           color.asm:254    .text:0000000000000341 execute
           color.asm:508    .text:00000000000005a4 lit
           color.asm:356    .text:0000000000000452 alit
           color.asm:257    .text:000000000000034b ex2
           color.asm:264    .text:0000000000000360 abort
           color.asm:1404   .text:000000000000109c curs
           color.asm:1402   .text:0000000000001098 blk
           color.asm:497    .text:0000000000000564 spaces
           color.asm:285    .text:00000000000003ab forthd
           color.asm:367    .text:0000000000000470 qcompile
           color.asm:344    .text:000000000000043d cnum
           color.asm:349    .text:0000000000000445 cshort
           color.asm:723    .text:0000000000000a47 echo_
           color.asm:276    .text:0000000000000392 sdefine
           color.asm:498    .text:0000000000000570 adefine
           color.asm:278    .text:0000000000000399 macro_
           color.asm:279    .text:000000000000039e macrod
           color.asm:284    .text:00000000000003a6 forth
           color.asm:512    .text:00000000000005b8 last
           color.asm:514    .text:00000000000005c0 list
           color.asm:324    .text:0000000000000408 adup
           color.asm:304    .text:00000000000003d5 cdrop
           color.asm:310    .text:00000000000003e3 qdup
           color.asm:318    .text:00000000000003ef cdup
           color.asm:327    .text:0000000000000409 var1
           color.asm:330    .text:000000000000040a variable
           color.asm:357    .text:000000000000045c literal
           color.asm:564    .text:00000000000005d8 macro2
           color.asm:377    .text:0000000000000496 call_
           color.asm:388    .text:00000000000004a6 compile
           color.asm:395    .text:00000000000004ba short_
           color.asm:401    .text:00000000000004c5 num
           color.asm:407    .text:00000000000004d0 comma
           color.asm:416    .text:00000000000004d1 comma1
           color.asm:419    .text:00000000000004d3 comma2
           color.asm:422    .text:00000000000004d5 comma3
           color.asm:425    .text:00000000000004d7 semi
           color.asm:437    .text:00000000000004fe then
           color.asm:444    .text:0000000000000500 begin
           color.asm:445    .text:0000000000000500 here
           color.asm:449    .text:0000000000000501 qlit
           color.asm:463    .text:000000000000051d q1
           color.asm:468    .text:0000000000000526 less
           color.asm:473    .text:0000000000000529 qignore
           color.asm:477    .text:0000000000000541 nul
           color.asm:479    .text:0000000000000542 jump
           color.asm:490    .text:0000000000000555 inter
           color.asm:528    *ABS*:0000000000000000 packed
           color.asm:528    *ABS*:0000000000000000 bitcount
           color.asm:528    *ABS*:0000000000000000 stoppacking
           color.asm:606    .text:000000000000083c boot
           color.asm:675    .text:00000000000008aa nc_
           color.asm:1663   .text:000000000000135f pad
           color.asm:610    .text:000000000000083e erase
           color.asm:624    .text:000000000000084f copy
             gen.asm:136    .text:000000000000095a emit
           color.asm:1151   .text:0000000000000e3b edig
             gen.asm:159    .text:000000000000099d emit2
           color.asm:1195   .text:0000000000000e85 dot10
           color.asm:1169   .text:0000000000000e58 hdot
           color.asm:1162   .text:0000000000000e55 hdotn
           color.asm:776    .text:0000000000000a6f cr
             gen.asm:155    .text:000000000000099c space
           color.asm:741    .text:0000000000000a5b down
           color.asm:1514   .text:0000000000001215 edit
           color.asm:1517   .text:0000000000001216 e
           color.asm:783    .text:0000000000000a70 lms
           color.asm:787    .text:0000000000000a72 rms
             gen.asm:179    .text:00000000000009db text1
           color.asm:848    .text:0000000000000aca keyboard
           color.asm:638    .text:000000000000086c debug
           color.asm:791    .text:0000000000000a74 at
           color.asm:797    .text:0000000000000a77 pat
           color.asm:679    .text:00000000000008ab xy_
           color.asm:683    .text:00000000000008ac fov_
             gen.asm:82     .text:0000000000000918 fifof
             gen.asm:196    .text:00000000000009fd box
             gen.asm:184    .text:00000000000009ec line
             gen.asm:39     .text:00000000000008c5 color
           color.asm:803    .text:0000000000000a7a octant
           color.asm:687    .text:00000000000008ad sps
           color.asm:691    .text:00000000000008ae last_
           color.asm:1224   .text:0000000000000eb1 unpack
           color.asm:661    .text:0000000000000896 xy
                            *ABS*:0000000000000019 vc
                            *ABS*:000000000000001e ih
           color.asm:1178   .text:0000000000000e66 dot
           color.asm:653    *ABS*:0000000000000016 iw
           color.asm:655    *ABS*:000000000000002e hc
           color.asm:662    .text:000000000000089a lm
           color.asm:663    .text:000000000000089e rm
           color.asm:664    .text:00000000000008a2 xycr
           color.asm:665    .text:00000000000008a6 fov
             gen.asm:15     .text:00000000000008b0 frame
             gen.asm:17     .text:00000000000008b4 displ
             gen.asm:18     .text:00000000000008b8 fore
             gen.asm:19     .text:00000000000008bc xc
             gen.asm:20     .text:00000000000008c0 yc
             gen.asm:28     .text:00000000000008c4 rgb
             gen.asm:37     .text:00000000000008c5 white
             gen.asm:45     .text:00000000000008cc north
             gen.asm:51     .text:00000000000008d4 dev
             gen.asm:96     .text:0000000000000939 clip
             gen.asm:113    .text:000000000000093e bit16
             gen.asm:116    .text:0000000000000940 b16
             gen.asm:123    .text:000000000000094c bit32
             gen.asm:126    .text:000000000000094e b32
           color.asm:772    .text:0000000000000a6d qcr
             gen.asm:154    .text:000000000000099b bl_
           color.asm:764    .text:0000000000000a65 top
             gen.asm:220    .text:0000000000000a1b no
           color.asm:697    *ABS*:0000000000ffff00 yellow
           color.asm:698    .text:0000000000000a1e cyan
           color.asm:701    .text:0000000000000a23 magenta
           color.asm:704    .text:0000000000000a28 silver
           color.asm:707    .text:0000000000000a2d blue
           color.asm:710    .text:0000000000000a32 red
           color.asm:713    .text:0000000000000a37 green
           color.asm:717    .text:0000000000000a3c history
           color.asm:733    .text:0000000000000a57 right
           color.asm:748    .text:0000000000000a5b zero
           color.asm:754    .text:0000000000000a5e blank
           color.asm:821    .text:0000000000000a8d eight
           color.asm:825    .text:0000000000000aa5 four
           color.asm:827    .text:0000000000000aa5 four1
           color.asm:837    .text:0000000000000ab9 stack
           color.asm:1193   .text:0000000000000e7c qdot
           color.asm:873    .text:0000000000000b0e alpha
           color.asm:879    .text:0000000000000b26 graphics
           color.asm:885    .text:0000000000000b3e numbers
           color.asm:891    .text:0000000000000b56 octals
           color.asm:897    .text:0000000000000b6e letter
           color.asm:904    .text:0000000000000b78 keys
           color.asm:911    .text:0000000000000ba2 key
           color.asm:938    .text:0000000000000bb8 graph0
           color.asm:972    .text:0000000000000c54 nul0
           color.asm:1123   .text:0000000000000ddd alph0
           color.asm:940    .text:0000000000000bcc graph1
           color.asm:1061   .text:0000000000000d0f word0
           color.asm:1039   .text:0000000000000cbe x
           color.asm:1025   .text:0000000000000ca4 lj
           color.asm:1131   .text:0000000000000df9 alph
           color.asm:942    .text:0000000000000be0 alpha0
           color.asm:1096   .text:0000000000000d99 number
           color.asm:1126   .text:0000000000000de9 star0
           color.asm:944    .text:0000000000000bf4 alpha1
           color.asm:1138   .text:0000000000000e05 graph
           color.asm:946    .text:0000000000000c08 numb0
           color.asm:1090   .text:0000000000000d94 minus
           color.asm:1122   .text:0000000000000ddc alphn
           color.asm:1075   .text:0000000000000d55 octal
           color.asm:948    .text:0000000000000c1c numb1
           color.asm:1094   .text:0000000000000d96 number0
           color.asm:1080   .text:0000000000000d6e xn
           color.asm:1118   .text:0000000000000dd0 endn
           color.asm:951    .text:0000000000000c30 board
           color.asm:953    .text:0000000000000c34 shift
           color.asm:954    .text:0000000000000c38 base
           color.asm:955    .text:0000000000000c3c current
           color.asm:1065   .text:0000000000000d17 decimal
           color.asm:956    .text:0000000000000c40 keyc
           color.asm:957    .text:0000000000000c44 chars
           color.asm:958    .text:0000000000000c48 aword
           color.asm:959    .text:0000000000000c4c anumber
           color.asm:975    .text:0000000000000c57 acceptn
           color.asm:977    .text:0000000000000c61 accept1
           color.asm:1143   .text:0000000000000e14 first
           color.asm:984    .text:0000000000000c79 bits
           color.asm:997    .text:0000000000000c83 pack
           color.asm:1030   .text:0000000000000cab full
           color.asm:1019   .text:0000000000000c9c lj0
           color.asm:1045   .text:0000000000000cc6 word_
           color.asm:1051   .text:0000000000000cf0 word1
           color.asm:1070   .text:0000000000000d36 hex
           color.asm:1084   .text:0000000000000d75 digit
           color.asm:1089   .text:0000000000000d93 sign
           color.asm:1114   .text:0000000000000dc3 number2
           color.asm:1099   .text:0000000000000da6 number3
           color.asm:1148   .text:0000000000000e2b hicon
           color.asm:1150   .text:0000000000000e3b edig1
           color.asm:1157   .text:0000000000000e4d odig
           color.asm:1399   .text:0000000000001070 tens
           color.asm:1214   .text:0000000000000e9e d_1
           color.asm:1217   .text:0000000000000ea5 d_2
           color.asm:1244   .text:0000000000000ef0 qring
           color.asm:1256   .text:0000000000000efe ring
           color.asm:1406   .text:00000000000010a4 pcad
           color.asm:1405   .text:00000000000010a0 cad
           color.asm:1271   .text:0000000000000f10 rw
           color.asm:1321   .text:0000000000000f9a type_
           color.asm:1278   .text:0000000000000f1e gw
           color.asm:1280   .text:0000000000000f25 mw
           color.asm:1282   .text:0000000000000f2c ww
           color.asm:1287   .text:0000000000000f33 type0
           color.asm:1322   .text:0000000000000f9a type1
           color.asm:1407   .text:00000000000010a8 lcad
           color.asm:1299   .text:0000000000000f55 cap
           color.asm:1325   .text:0000000000000fa1 type2
           color.asm:1309   .text:0000000000000f74 caps
           color.asm:1320   .text:0000000000000f95 text
           color.asm:1335   .text:0000000000000fb7 gsw
           color.asm:1346   .text:0000000000000fc3 gnw1
           color.asm:1339   .text:0000000000000fb9 var
           color.asm:1344   .text:0000000000000fc3 gnw
           color.asm:1401   .text:0000000000001094 bas
           color.asm:1354   .text:0000000000000fd1 sw
           color.asm:1361   .text:0000000000000fd3 nw1
           color.asm:1359   .text:0000000000000fd3 nw
           color.asm:1371   .text:0000000000000fea refresh
           color.asm:1381   .text:0000000000000ff9 ref1
           color.asm:1395   .text:0000000000001030 display
           color.asm:1408   .text:00000000000010ac trash
           color.asm:1418   .text:00000000000010b0 ekeys
           color.asm:1629   .text:0000000000001330 del
           color.asm:1533   .text:0000000000001257 eout
           color.asm:1544   .text:0000000000001289 destack
           color.asm:1452   .text:0000000000001171 act1
           color.asm:1454   .text:0000000000001173 act3
           color.asm:1456   .text:0000000000001175 act4
           color.asm:1505   .text:0000000000001203 shadow
           color.asm:1484   .text:00000000000011b1 mcur
           color.asm:1489   .text:00000000000011c0 mmcur
           color.asm:1493   .text:00000000000011d4 ppcur
           color.asm:1486   .text:00000000000011b9 pcur
           color.asm:1499   .text:00000000000011eb mblk
           color.asm:1474   .text:0000000000001193 actv
           color.asm:1464   .text:000000000000117d act7
           color.asm:1496   .text:00000000000011dc pblk
           color.asm:1462   .text:000000000000117b act11
           color.asm:1460   .text:0000000000001179 act10
           color.asm:1458   .text:0000000000001177 act9
           color.asm:1431   .text:0000000000001110 ekbd0
           color.asm:1433   .text:0000000000001124 ekbd
           color.asm:1441   .text:000000000000113c actc
           color.asm:1445   .text:000000000000116c vector
           color.asm:1447   .text:0000000000001170 action
           color.asm:1591   .text:00000000000012bf insert
           color.asm:1469   .text:0000000000001187 actn
           color.asm:1509   .text:0000000000001212 e0
           color.asm:1596   .text:00000000000012c9 format
           color.asm:1558   .text:00000000000012a3 insert0
           color.asm:1567   .text:00000000000012a9 insert1
           color.asm:1616   .text:000000000000130b format2
           color.asm:1641   .text:0000000000001348 enstack
           color.asm:1660   .text:000000000000135d ens

UNDEFINED SYMBOLS
eax
ax
bx
ebx
ds
es
di
si
cx
al
cr0
ss
esp
ecx
esi
edi
cl
dx
edx
ch
dl
