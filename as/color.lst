   1              	.intel_syntax noprefix ;#colorforth, 2001 jul 22, chuck moore, public domain
   2              	
   3              	;#.486p
   4              	
   5              	.ifdef CM2001 ;# Chuck Moore's 2001 code includes AGP-specific video...
   6              	 .equ QUESTIONABLE, 1 ;# ...and other weird stuff found in color.com binary
   7              	 .equ AGP, 1  ;# hard-coded for ATI video
   8              	 .equ E1_STROBE, 1  ;# see 'debugout' macro below
   9              	 .equ AUTO_REFRESH, 1 ;# screen refresh constantly runs
  10              	.endif
  11              	
  12              	.macro debugout
  13              	/* CM referred to this as "Terry Loveall's e1 strobe" in some online docs, but
  14              	/* I can't find anything regarding port 0xe1 anywhere else, and the data
  15              	/* sent doesn't make any sense anyway. The boot failure problems mentioned in
  16              	/* that online document would more likely be due to the hardcoded millisecond
  17              	/* calculations for busy-wait routines than any "strobe" effect.
  18              	/* milliseconds should be calulated, with a single loop, using the
  19              	/* pc clock chip, like bogoMIPS. or, better yet, the clock should be used for
  20              	/* timing rather than busy-wait loops.
  21              	/* */
  22              	.ifdef E1_STROBE
  23              	    out 0xe1, al
  24              	.endif
  25              	.endm
  26              	
  27              	;# can't use loopnz in 32-bit mode
  28              	.macro next adr
  29              	    dec  ecx
  30              	    jnz  \adr
  31              	.endm
  32              	
  33              	;# save contents of eax on data stack
  34              	;# (eax is already a copy of top of data stack)
  35              	.macro dup_
  36              	    lea  esi, [esi-4]
  37              	    mov  [esi], eax
  38              	.endm
  39              	
  40              	;# pop what's at bottom of data stack back into eax
  41              	.macro drop
  42              	    lodsd
  43              	.endm
  44              	
  45              	;# compile Forth words with Huffman coding
  46              	.macro packword words:vararg
  47              	 .irp word, \words
  48              	 .equ packed, 0
  49              	 .equ bitcount, 32
  50              	 .equ stoppacking, 0
  51              	 .irpc letter, "\word"
  52              	  .equ savepacked, packed
  53              	  .equ huffindex, 0
  54              	  .equ huffcode, 0
  55              	  .irpc huffman, " rtoeanismcylgfwdvpbhxuq0123456789j-k.z/;:!+@*,?"
  56              	   .ifeqs "\letter", "\huffman"
  57              	    .equ bitshift, 4 + (huffindex / 8)
  58              	    .ifge bitshift - 6
  59              	     .equ bitshift, 7
  60              	    .endif
  61              	    .ifeq stoppacking
  62              	     .equ packed, packed | (huffcode << (bitcount - bitshift))
  63              	     .equ bitcount, bitcount - bitshift
  64              	    .endif
  65              	   .else
  66              	    .equ huffindex, huffindex + 1
  67              	    .equ huffcode, huffcode + 1
  68              	    .ifeq huffcode - 0b00001000 ;# going from 4-bit to 5-bit code
  69              	     .equ huffcode, 0b00010000
  70              	    .endif
  71              	    .ifeq huffcode - 0b00011000 ;# going from 5-bit to 7-bit code
  72              	     .equ huffcode, 0b01100000
  73              	    .endif
  74              	   .endif
  75              	  .endr
  76              	  .ifne packed & 0xf ;# low 4 bits cannot be occupied with packed stuff
  77              	   .equ packed, savepacked
  78              	   .equ stoppacking, -1
  79              	  .endif
  80              	 .endr
  81              	 .long packed
  82              	 .endr
  83              	.endm
  84              	
  85              	.ifndef SMALLSCREEN
  86              	 .equ hp, 1024 ;# 1024 or 800
  87              	 .equ vp, 768 ;# 768 or 600
  88              	.if CM2001 - 1 == 0
  89              	 .equ vesa, 0x0117 ;# 1024x768 mode
  90              	.elseif JF2005 - 1 == 0
  91              	 .equ vesa, 0x4118
  92              	.else
  93              	 .equ vesa, 0x4117 ;# bit 12 sets linear address mode in 0x117 or 0x114
  94              	.endif ;# CM2001
  95              	.else ;# SMALLSCREEN
  96              	 .equ hp, 800
  97              	 .equ vp, 600
  98              	 .equ vesa, 0x4114
  99              	.endif ;# SMALLSCREEN
 100              	.equ buffer, 604*256
 101              	.include "boot.asm" ;# boot boot0 hard
   1              	.intel_syntax noprefix ;# floppy boot segment
   2              	.ifdef DMA
   3              	;# Floppy boot segment. Modified 7/17/01 for Asus P2B-D Floppy I/O Terry Loveall
   4              	;# Modified again by, or at least used by, Jeff Fox in his 2005 binaries
   5              	.endif
   6              	
   7              	.org 0 ;# actually 7c00
   8 ???? EB56     	start: jmp  start0
   9 ???? 90       	    nop
  10 ???? 636D6366 	    .ascii "cmcf 1.0"
  10      20312E30 
  11 ???? 0002     	    .word 512     ;# bytes/sector
  12 ???? 01       	    .byte 1       ;# sector/cluster
  13 ???? 0100     	    .word 1       ;# sector reserved
  14 ???? 02       	    .byte 2       ;# fats
  15 ???? E000     	    .word 16*14   ;# root directory entries
  16 ???? 400B     	    .word 80*2*18 ;# sectors
  17 ???? F0       	    .byte 0x0f0    ;# media
  18 ???? 0900     	    .word 9       ;# sectors/fat
  19 ???? 1200     	    .word 18      ;# sectors/track
  20 ???? 0200     	    .word 2       ;# heads
  21 ???? 00000000 	    .long 0       ;# hidden sectors
  22 ???? 400B0000 	    .long 80*2*18 ;# sectors again
  23 ???? 00       	    .byte 0       ;# drive
  24              	
  25              	command:
  26              	.ifdef CM2001
  27              	    .byte 0xc5 ;# in compiled color.com from CM website
  28              	;# probably just there from save-system or similar command? just a guess
  29              	.else
  30 ???? 00       	    .byte 0
  31              	.endif
  32 ???? 00       	    .byte 0   ;# head, drive
  33              	cylinder:
  34              	.ifdef QUESTIONABLE
  35              	    .byte 1 ;# 1 in compiled color.com from CM website
  36              	;# causes load to skip from cylinder 0 directly to cylinder 2,
  37              	;# missing bytes 0x4800 to 0x9000 in color.com image
  38              	;# same problem in Jeff Fox's 2005 code
  39              	.else
  40 ???? 00       	    .byte 0
  41              	.endif
  42 ???? 00       	    .byte 0   ;# head
  43 ???? 01       	    .byte 1   ;# sector
  44 ???? 02       	    .byte 2   ;# 512 bytes/sector
  45 ???? 12       	    .byte 18  ;# sectors/track
  46 ???? 1B       	    .byte 0x1b ;# gap
  47 ???? FF       	    .byte 0x0ff
  48              	;# if you see any crud in disassembly here it shouldn't matter
  49              	;# different assemblers use different NOP instructions to pad out alignment
  50              	.ifdef CM2001
  51              	     mov eax, eax
  52              	.endif
  53 ???? 6690     	.align 4
  54 ???? 09000000 	nc: .long 9 ;# forth+icons+blocks 24-161 ;# number of cylinders, 9 (out of 80)
  55 ???? 1700     	gdt: .word 0x17
  56 ???? 00000000 	    .long gdt0
  57              	;# different assemblers use different NOP instructions to pad out alignment
  58              	.ifdef CM2001
  59              	     cs mov eax, eax
  60              	     cs mov eax, eax
  61              	.endif
  62 ???? 660F1F44 	.align 8 ;# more garbage possibly in disassembly here, ignore it
  62      0000
  63 ???? 00000000 	gdt0: .word 0, 0, 0, 0 ;# null descriptor, not used
  63      00000000 
  64 ???? FFFF0000 	    .word 0x0ffff, 0, 0x9a00, 0x0cf ;# code, linear addressing from 0
  64      009ACF00 
  65 ???? FFFF0000 	    .word 0x0ffff, 0, 0x9200, 0x0cf ;# data, linear addressing from 0
  65      0092CF00 
  66              	
  67              	;# code is compiled in protected 32-bit mode.
  68              	;# hence (original code uses) .org .-2  to fix 16-bit words
  69              	;# and 4 hand-assembled instructions.
  70              	;# and eax and ax exchanged
  71              	;# this code is in real 16-bit mode
  72              	
  73              	.code16
  74              	start0:
  75              	.ifdef AGP
  76              	    mov  ax, 0x4f02 ;# video mode
  77              	    mov  bx, vesa ;# hp*vp rgb: 565
  78              	.else  ;# use VBE call to determine RAM address of desired video mode
  79 ???? B8014F   	    mov  ax, 0x4f01 ;# get video mode info
  80 ???? B91741   	    mov  cx, vesa ;# a 16-bit color linear video mode (5:6:5 rgb)
  81 ???? BF007E   	    mov  di, 0x7e00 ;# use buffer space just past loaded bootsector
  82 ???? CD10     	    int  0x10
  83 ???? B8024F   	    mov  ax, 0x4f02 ;# set video mode
  84 ???? 89CB     	    mov  bx, cx ;# vesa mode
  85              	.endif
  86 ???? CD10     	    int  0x10
  87 ???? FA       	    cli
  88              	.code32
  89 ???? 6631C0   	    xor  ax, ax    ;# move code to 0
  90              	.ifdef QUESTIONABLE  ;# some things in CM's source which can be left out?
  91              	    mov  bx, ax
  92              	.code32
  93              	    mov  ebx, cs
  94              	    mov  ds, ebx
  95              	    mov  es, eax
  96              	    mov  di, ax
  97              	    mov  si, ax
  98              	.else
  99 ???? 6689C7   	    mov  di, ax
 100 ???? 668CCB   	    mov  bx, cs
 101 ???? 8EDB     	    mov  ds, bx
 102 ???? 8EC0     	    mov  es, ax ;# not necessary at boot but perhaps from comfile
 103              	.endif
 104              	.code16
 105 ???? E80000   	    call loc ;# where are we? ip+4*cs
 106 ???? 5E       	loc: pop  si
 107 ???? 81EE7B00 	    sub  si, offset loc-offset start
 108 ???? B98000   	    mov  cx, 512/4 ;# only 256 bytes unless...
 109              	;# compile as 32-bit code here so it moves longwords and not words
 110              	.code32
 111 ???? 66F3A5   	    rep movsw
 112              	.code16
 113              	;#    jmp  0:relocate
 114 ???? EA       	    .byte 0x0ea
 115 ???? 8B000000 	    .word relocate-start, 0
 116              	
 117              	relocate: ;# this code is executed from an offset of 0, not 0x7c00
 118 ???? 8ED8     	    mov  ds, ax
 119 ???? 0F011600 	    lgdt [gdt]
 119      00
 120              	;#    .byte 0x0f, 1, 0x16
 121              	;#    .word gdt-start
 122 ???? B001     	    mov  al, 1
 123 ???? 0F22C0   	    mov  cr0, eax
 124              	;#    jmp  8:protected ;# code selector is offset 8
 125 ???? EA       	    .byte 0x0ea
 126 ???? 9C000800 	    .word protected-start, 8
 127              	.code32
 128              	protected: ;# now in protected 32-bit mode
 129 ???? B010     	    mov  al, 0x10 ;# linear data selector (offset into GDT)
 130 ???? 8ED8     	    mov  ds, eax
 131 ???? 8EC0     	    mov  es, eax
 132 ???? 8ED0     	    mov  ss, eax
 133 ???? BC00000A 	    mov  esp, offset gods ;# assembles as a dword ptr without 'offset'
 133      00
 134              	.ifndef AGP
 135 ???? FF35287E 	    push [ds:0x7e28] ;# physical memory pointer returned by VESA call
 135      0000
 136              	.endif
 137 ???? 31C9     	    xor  ecx, ecx
 138              	
 139              	a20:
 140 ???? B0D1     	    mov  al, 0x0d1
 141 ???? E664     	    out  0x64, al ;# to keyboard
 142 ???? E464     	0:  in   al, 0x64
 143 ???? 2402     	    and  al, 2
 144 ???? 75FA     	    jnz  0b
 145 ???? B04B     	    mov  al, 0x4b
 146 ???? E660     	    out  0x60, al ;# to keyboard, enable A20
 147              	.ifdef DMA
 148              	    mov  eax, 512*18*2-1 ;# DMA channel 2 (0x47ff)
 149              	.endif
 150 ???? E8C90000 	    call dma
 150      00
 151 ???? C1E304   	    shl  ebx, 4
 152 ???? 01DE     	    add  esi, ebx
 153              	.ifdef QUESTIONABLE
 154              	    cmp  dword ptr [esi], 0x44444444 ;# boot?
 155              	    jnz  cold
 156              	.else
 157              	;# if we just copied the bootsector to 0, ESI will point to 0x7c00+200
 158 ???? 6681FE00 	    cmp  si, 0x7e00 ;# boot?
 158      7E
 159 ???? 740D     	    jz   cold
 160              	.endif
 161 ???? 66B9803E 	    mov  cx, 63*0x100-0x80 ;# nope
 162 ???? F3A5     	    rep  movsd
 163 ???? BE48F409 	    mov  esi, offset godd ;# 0x9f448, 3000 bytes below 0xa0000 (gods)
 163      00
 164 ???? EB23     	    jmp  start2
 165              	
 166              	cold:
 167              	.ifndef DMA
 168 ???? E87F0000 	    call sense_
 168      00
 169 ???? 79F9     	    jns  cold
 170              	.endif
 171 ???? BE48F409 	    mov  esi, offset godd ;# 0x9f448, 3000 bytes below 0xa0000 (gods)
 171      00
 172 ???? 31FF     	    xor  edi, edi ;# cylinder 0 on top of address 0
 173              	.ifdef DMA
 174              	    call read
 175              	    inc byte ptr cylinder
 176              	.endif
 177 ???? 8A0D0000 	    mov  cl, byte ptr nc ;# number of cylinders used
 177      0000
 178              	.ifdef DMA
 179              	    dec  cl
 180              	.endif
 181 ???? 51       	0:  push ecx
 182 ???? E8C10000 	    call read
 182      00
 183              	.ifndef DMA
 184 ???? FE050000 	    inc byte ptr cylinder
 184      0000
 185              	.endif
 186 ???? 59       	    pop  ecx
 187 ???? E2F1     	    loop 0b
 188              	start2:
 189 ???? E8780000 	    call stop
 189      00
 190 ???? E9990100 	    jmp  start1 ;# start1 is outside of bootsector
 190      00
 191              	.equ us, 1000/6
 192              	.equ ms, 1000*us
 193              	spin:
 194              	.ifdef DMA
 195              	    mov  al, 0x1c
 196              	    call onoff
 197              	    mov  ecx, 400*ms ;# what processor speed was this set for?
 198              	0:  loop 0b  ;# damn but I hate busy-waits (jc)
 199              	;#    mov  cylinder, cl ;# calibrate
 200              	    mov  al, 7 ;# recalibrate command
 201              	    mov  cl, 2
 202              	    jmp  cmdi
 203              	.else
 204 ???? B11C     	    mov  cl, 0x1c
 205 ???? E86E0000 	    call onoff
 205      00
 206 ???? E84B0000 	0:  call sense_
 206      00
 207 ???? 79F9     	    jns  0b
 208 ???? C6050000 	    mov  byte ptr cylinder, 0 ;# calibrate
 208      000000
 209 ???? B007     	    mov  al, 7
 210 ???? B102     	    mov  cl, 2
 211 ???? E81E0000 	    call cmd
 211      00
 212 ???? B9C07AF2 	    mov  ecx, 500*ms
 212      04
 213 ???? E2FE     	0:  loop 0b
 214 ???? E82D0000 	cmdi: call sense_
 214      00
 215 ???? 78F9     	    js   cmdi
 216 ???? C3       	    ret
 217              	.endif
 218              	
 219              	ready: ;#call delay
 220 ???? 66BAF403 	    mov  dx, 0x3f4
 221 ???? EC       	0:  in   al, dx
 222              	    debugout
 223 ???? D0E0     	    shl  al, 1
 224 ???? 73FB     	    jnc  0b
 225 ???? 8D5201   	    lea  edx, [edx+1] ;# doesn't affect flags as INC would
 226 ???? C3       	    ret
 227              	
 228              	.ifndef DMA
 229 ???? B109     	transfer: mov  cl, 9
 230              	cmd:
 231 ???? 8D150000 	    lea  edx, command
 231      0000
 232 ???? 8802     	    mov  [edx], al
 233              	cmd0:
 234 ???? 56       	    push esi
 235 ???? 89D6     	    mov  esi, edx
 236              	cmd1:
 237 ???? E8E1FFFF 	    call ready
 237      FF
 238 ???? 7903     	    jns  0f
 239 ???? EC       	    in   al, dx
 240 ???? EBF6     	    jmp  cmd1
 241 ???? AC       	0:  lodsb
 242 ???? EE       	    out  dx, al
 243              	    debugout
 244 ???? E2F2     	    loop cmd1
 245 ???? 5E       	    pop  esi
 246 ???? C3       	    ret
 247              	.else
 248              	cmd:
 249              	    lea  edx, command
 250              	    mov  [edx], al
 251              	    push esi
 252              	    mov  esi, edx
 253              	0:  call ready
 254              	    jns  cmd0
 255              	    in   al, dx
 256              	    debugout
 257              	    jmp  0b
 258              	cmd0:
 259              	    lodsb
 260              	    mov  ah, 0x1e  ;# delay loop in JF2005 code
 261              	    out  dx, al
 262              	1:
 263              	    debugout
 264              	    dec  ah
 265              	    jne  1b
 266              	    loop 0b
 267              	    pop  esi
 268              	    ret
 269              	.endif
 270 ???? B008     	sense_: mov  al, 8
 271              	.ifdef CM2001
 272              	    mov  ecx, 1
 273              	.else
 274 ???? B101     	    mov  cl, 1
 275              	.endif
 276 ???? E8DCFFFF 	    call cmd
 276      FF
 277              	.ifndef DMA
 278 ???? E8C8FFFF 	0:  call ready
 278      FF
 279 ???? 79F9     	    jns  0b
 280              	.else
 281              	    call ready
 282              	.endif
 283 ???? EC       	    in   al, dx
 284              	    debugout
 285 ???? 20C0     	    and  al, al
 286              	;#  cmp  al, 0x80
 287 ???? C3       	    ret
 288              	
 289              	seek:
 290              	.ifdef DMA
 291              	    out 0xb, al
 292              	.endif
 293 ???? E8E7FFFF 	0:  call sense_
 293      FF
 294 ???? 79F9     	    jns  0b
 295              	.ifdef DMA
 296              	    mov  al, 0xf
 297              	    mov  cl, 3
 298              	cmdi:
 299              	    call cmd
 300              	0:  call sense_
 301              	    jz   0b
 302              	.endif
 303 ???? C3       	    ret
 304              	
 305              	stop:
 306              	.ifndef DMA
 307 ???? B10C     	    mov  cl, 0x0c ;# motor off
 308              	.else
 309              	    mov  dword ptr trash, buffer*4 ;# 0x97000 in CM2001, used for DMA?
 310              	    mov  al, 0x0c
 311              	.endif
 312              	onoff:
 313              	.ifndef DMA
 314 ???? 8D76FC89 	    dup_
 314      06
 315 ???? 88C8     	    mov  al, cl
 316              	.endif
 317 ???? 66BAF203 	    mov  dx, 0x3f2
 318              	.ifdef DMA
 319              	    mov  ah, 0xf  ;# for timing in JF2005 DMA version
 320              	.endif
 321 ???? EE       	    out  dx, al
 322              	0:  debugout
 323              	.ifndef DMA
 324 ???? AD       	    drop
 325              	.else
 326              	    dec  ah
 327              	    jnz  0b
 328              	.endif
 329 ???? C3       	    ret
 330              	
 331              	dma:
 332              	.ifndef DMA
 333 ???? 66C70500 	    mov  word ptr command+1, 0x3a2 ;# l2 s6 u32 ms (e 2)
 333      000000A2 
 333      03
 334 ???? B003     	    mov  al, 3 ;# timing
 335 ???? B103     	    mov  cl, 3
 336 ???? E8A7FFFF 	    call cmd
 336      FF
 337 ???? 66C70500 	    mov  word ptr command+1, 0x7000 ;# +seek -fifo -poll
 337      00000000 
 337      70
 338 ???? B013     	    mov  al, 0x13 ;# configure
 339 ???? B104     	    mov  cl, 4
 340 ???? E895FFFF 	    call cmd
 340      FF
 341              	;# the following instruction clears the cylinder number among other things
 342 ???? 890D0000 	    mov  dword ptr command, ecx ;# 0
 342      0000
 343 ???? C3       	    ret
 344              	.else
 345              	    out  5, al ;# set DMA-1 ch.2 base and current count to 0x47ff
 346              	    mov  al, ah
 347              	    out  5, al
 348              	    mov  eax, buffer*4 ;# 0x97000 in CM2001
 349              	    out  4, al ;# set DMA-1 ch.2 base and current address to "trash" buffer
 350              	    mov  al, ah
 351              	    out  4, al
 352              	    shr  eax, 16 ;# load page register value into al (9)
 353              	    out  0x81, al ;# set DMA-1 page register 2 = 09
 354              	    mov  al, 0xb
 355              	    out  0xf, al ;# write all mask bits, address = 0xf, value = 0xb
 356              	    mov  word ptr command+1, 0x2a1 ;# 2 6 16 ms (e 2)
 357              	    mov  al, 3 ;# timing
 358              	    mov  cl, 3
 359              	    call cmd
 360              	    mov  word ptr command+1, 0
 361              	    ret
 362              	
 363              	transfer:
 364              	    mov  cl, 9
 365              	    call cmd
 366              	    inc  byte ptr cylinder
 367              	0:  call ready
 368              	    jns  0b
 369              	    ret
 370              	.endif
 371              	read:
 372              	.ifdef DMA
 373              	    mov  al, 0x16 ;# read DMA 2
 374              	.endif
 375 ???? E8B8FFFF 	    call seek
 375      FF
 376 ???? B0E6     	    mov  al, 0x0e6 ;# read normal data
 377 ???? E880FFFF 	    call transfer
 377      FF
 378              	;# about to read 0x4800, or 18432 bytes
 379              	;# total of 165888 (0x28800) bytes in 9 cylinders, 1.44 MB in 80 cylinders
 380              	;# note that the first call overwrites the cylinder number with 1 from
 381              	;# CM's color.com image; that's why it skips from cylinder 0 to 2
 382              	.ifdef DMA
 383              	    push esi
 384              	    mov  esi, buffer*4
 385              	    mov  ecx, 512*18*2/4
 386              	    rep  movsd
 387              	    pop  esi  
 388              	.else
 389 ???? 66B90048 	    mov  cx, 18*2*512 ;# two heads, 18 sectors/track, 512 bytes/sector
 390 ???? E86AFFFF 	0:  call ready
 390      FF
 391 ???? EC       	    in   al, dx
 392              	    debugout
 393 ???? AA       	    stosb
 394 ???? 4975F6   	    next 0b
 395              	.endif
 396 ???? C3       	    ret
 397              	
 398              	;# don't need 'write' till after bootup
 399              	.ifndef CM2001
 400 ???? 00000000 	    .org 0x1fe
 400      00000000 
 400      00000000 
 400      00000000 
 400      00000000 
 400      00000000 
 400      00000000 
 400      00000000 
 400      00000000 
 400      00000000 
 400      000000
 401 ???? 55AA     	    .word 0x0aa55 ;# mark boot sector
 402              	    ;# end of boot sector
 403 ???? 44444444 	    .long 0x44444444 ;# mark color.com
 404              	.endif
 405              	
 406              	write:
 407              	.ifdef DMA
 408              	    mov  edi, buffer*4
 409              	    mov  ecx, 512*18*2/4
 410              	    rep  movsd
 411              	    mov  al, 0x1a ;# write DMA 2
 412              	    call seek
 413              	    mov  al, 0xc5
 414              	    jmp  transfer
 415              	.else
 416 ???? E86CFFFF 	    call seek
 416      FF
 417 ???? B0C5     	    mov  al, 0x0c5 ;# write data
 418 ???? E834FFFF 	    call transfer
 418      FF
 419 ???? 66B90048 	    mov  cx, 18*2*512 ;#two heads, 18 sectors/track, 512 bytes/sector
 420 ???? E81EFFFF 	0:  call ready
 420      FF
 421 ???? AC       	    lodsb
 422 ???? EE       	    out  dx, al
 423              	    debugout
 424 ???? 4975F6   	    next 0b
 425 ???? C3       	    ret
 426              	.endif
 427              	
 428              	.ifdef CM2001
 429              	    .org 0x1fe
 430              	    .word 0x0aa55 ;# mark boot sector
 431              	    ;# end of boot sector
 432              	    .long 0x44444444 ;# mark color.com
 433              	.endif
 434              	
 435              	flop:
 436              	.ifdef DMA
 437              	    dup_
 438              	    call spin
 439              	    drop
 440              	    mov  ecx, eax
 441              	    drop
 442              	    mov  cylinder, al
 443              	    drop
 444              	    shl  eax, 2
 445              	    ret
 446              	.else
 447 ???? A2000000 	    mov  cylinder, al ;# c-cx
 447      00
 448 ???? 8D76FC89 	    dup_
 448      06
 449 ???? 66BAF203 	    mov  dx, 0x3f2
 450 ???? EC       	    in   al, dx
 451              	    debugout
 452 ???? A810     	    test al, 0x10
 453 ???? 7505     	    jnz  0f
 454 ???? E9D3FEFF 	    jmp  spin
 454      FF
 455 ???? C3       	0:  ret
 456              	.endif
 457              	
 458              	.ifdef DMA
 459              	readf:
 460              	    call flop
 461              	    push edi
 462              	    mov  edi, eax
 463              	0:  push ecx
 464              	    call read
 465              	    pop  ecx
 466              	    next 0b
 467              	    pop  edi
 468              	readf1:
 469              	    call stop
 470              	    drop
 471              	    ret
 472              	
 473              	save_:
 474              	    dup_
 475              	    xor  eax, eax 
 476              	    dup_
 477              	    dup_
 478              	    mov  eax, nc
 479              	
 480              	writef:
 481              	    call flop
 482              	    push esi
 483              	    mov  esi, eax
 484              	0:  push ecx
 485              	    call write
 486              	    pop  ecx
 487              	    next 0b
 488              	    pop  ESI
 489              	    jmp  readf1
 490              	.else
 491              	readf:
 492 ???? E8E2FFFF 	    call flop ;# ac-ac
 492      FF
 493 ???? 57       	    push edi
 494 ???? 8B7E04   	    mov  edi, [esi+4]
 495 ???? C1E702   	    shl  edi, 2
 496 ???? E86FFFFF 	    call read
 496      FF
 497 ???? 5F       	    pop  edi
 498              	readf1:
 499 ???? AD       	    drop
 500 ???? 40       	    inc  eax
 501 ???? 81060012 	    add  dword ptr [esi], 0x1200
 501      0000
 502 ???? C3       	    ret
 503              	
 504              	writef:
 505 ???? E8C7FFFF 	    call flop ;# ac-ac
 505      FF
 506 ???? 56       	    push esi
 507 ???? 8B7604   	    mov  esi, [esi+4]
 508 ???? C1E602   	    shl  esi, 2
 509 ???? E8A0FFFF 	    call write
 509      FF
 510 ???? 5E       	    pop  esi
 511 ???? EBE3     	    jmp  readf1
 512              	
 513              	seekf:
 514 ???? E8B3FFFF 	    call flop ;# c-c
 514      FF
 515 ???? E804FFFF 	    call seek
 515      FF
 516 ???? B00F     	    mov  al, 0x0f
 517 ???? B103     	    mov  cl, 3
 518 ???? E8CCFEFF 	    call cmd
 518      FF
 519 ???? E8B0FEFF 	    call cmdi
 519      FF
 520 ???? AD       	    drop
 521 ???? C3       	    ret
 522              	
 523 ???? 89C1     	cmdf: mov  ecx, eax ;# an
 524 ???? AD       	    drop
 525 ???? 8D148500 	    lea  edx, [eax*4]
 525      000000
 526 ???? E8BEFEFF 	    call cmd0
 526      FF
 527 ???? AD       	    drop
 528 ???? C3       	    ret
 529              	
 530 ???? 8D76FC89 	readyf: dup_
 530      06
 531 ???? E89BFEFF 	    call ready
 531      FF
 532 ???? AD       	    drop
 533 ???? C3       	    ret
 534              	.endif
 102              	
 103              	;#   100000 dictionary
 104              	;#    a0000 top of return stack
 105              	;#    9f800 top of data stack
 106              	;#    9d800 free
 107              	;#    97000 floppy buffer
 108              	;#     4800 source ;# block 18, first high-level source block (load screen)
 109              	.equ icons, 12*256*4 ;# 3000, block 12 start of character maps
 110              	;#     7c00 bios boot sector
 111              	;#        0 forth
 112              	
 113 ???? 8D76FC89 	warm: dup_
 113      06
 114              	start1:
 115              	.ifdef AGP
 116              	    call ati0  ;# access North Bridge chipset to get display RAM address
 117              	.else
 118 ???? 8F050000 	    pop [displ]  ;# use address determined by VBE2 call in boot.asm
 118      0000
 119              	.endif
 120 ???? E8790000 	    call show0 ;# set up 'main' task to draw screen
 120      00
 121 ???? C7050000 	    mov  dword ptr forths, offset ((forth1-forth0)/4) ;# number of Forth words
 121      00003B00 
 121      0000
 122 ???? C7050000 	    mov  dword ptr macros, offset ((macro1-macro0)/4) ;# number of macros
 122      00000600 
 122      0000
 123 ???? B8120000 	    mov  eax, 18 ;# load start screen, 18
 123      00
 124              	;# the start screen loads a bunch of definitions, then 'empty' which shows logo
 125 ???? E8910400 	    call load
 125      00
 126 ???? E97E2100 	    jmp  accept ;# wait for keyhit
 126      00
 127              	
 128              	;# This version of colorforth has cooperative round-robin multi-tasking.
 129              	;# the tasks are: God (the forth kernel), and main
 130              	;# Each has two grow-down stacks; 's' indicates the
 131              	;# return stack, 'd' indicates the data stack.  Thus 'Gods' and 'Godd'
 132              	;# are the tops of the return and data stacks, respectively, for the
 133              	;# God task.
 134              	.equ gods, 0x28000*4 ;# 0xa0000, top of return stack
 135              	.equ godd, gods-750*4 ;# 0x9f448, top of data stack
 136              	.equ mains, godd-1500*4 ;# 0x9dcd8
 137              	.equ maind, mains-750*4 ;# 0x9d120
 138 ???? 0F1F00   	.align 4
 139              	;# 'me' points to the save slot for the current task
 140 ???? 00000000 	me: .long god
 141              	screen:
 142              	.ifdef CM2001
 143              	    .long 0x100f1f ;# matches cm2001 color.com binary
 144              	.else
 145 ???? 00000000 	    .long 0 ;# logo
 146              	.endif
 147              	;# When we switch tasks, we need to switch stacks as well.  We do this
 148              	;# by pushing eax (cached top-of-stack) onto the data stack, pushing
 149              	;# the data stack pointer onto the return stack, and then saving the
 150              	;# return stack pointer into the save slot for the task.
 151              	;#
 152              	;# these are the save slots - each is followed by code to resume the
 153              	;# next task - the last one jumps 'round to the first.
 154 ???? E8210000 	round: call unpause
 154      00
 155              	god:
 156              	.ifdef CM2001
 157              	    .long 0x9ffe8 ;# found in cm2001 color.com binary
 158              	.else
 159 ???? 00000000 	    .long 0 ;# gods-2*4
 160              	.endif
 161 ???? E8180000 	    call unpause
 161      00
 162              	main:
 163              	.ifdef CM2001
 164              	    .long 0x9dcd0
 165              	.else
 166 ???? 00000000 	    .long 0 ;# mains-2*4
 167              	.endif
 168 ???? EBEC     	    jmp  round
 169              	
 170 ???? 8D76FC89 	pause: dup_ ;# save cached datum from top of data stack
 170      06
 171 ???? 56       	    push esi ;# save data stack pointer on return stack
 172 ???? A1000000 	    mov  eax, me ;# get current task
 172      00
 173 ???? 8920     	    mov  [eax], esp ;# put our stack pointer into [me]
 174 ???? 83C004   	    add  eax, 4 ;# skip storage slot, point to round-robin CALL or JMP
 175 ???? FFE0     	    jmp  eax ;# execute the CALL or JMP
 176              	
 177 ???? 58       	unpause: pop  eax ;# return address is that of 'main' slot above
 178 ???? 8B20     	    mov  esp, [eax] ;# load 'main' task return stack
 179 ???? A3000000 	    mov  me, eax ;# 'main' task becomes 'me', current task
 179      00
 180 ???? 5E       	    pop  esi ;# restore my task's data-stack pointer
 181 ???? AD       	    drop ;# load previously dup'd datum back into EAX
 182 ???? C3       	    ret
 183              	
 184              	act: ;# set currently active task
 185 ???? BA1CD109 	    mov  edx, maind-4 ;# data stack of 'main' task
 185      00
 186 ???? 8902     	    mov  [edx], eax ;# 0 if called from 'show'
 187 ???? B8D4DC09 	    mov  eax, mains-4 ;# return stack of 'main' task
 187      00
 188 ???? 8F00     	    pop  [eax] ;# return of 'god' task now on 'main' stack
 189 ???? 83E804   	    sub  eax, 4 ;# down one slot on 'main' stack
 190 ???? 8910     	    mov  [eax], edx ;# store 'main' data stack pointer
 191 ???? A3000000 	    mov  main, eax ;# store 'main' return stack pointer in 'main' slot
 191      00
 192 ???? AD       	    drop ;# what was 'dup'd before now into eax
 193 ???? C3       	    ret ;# to previous caller, since we already popped 'our' return address
 194              	
 195 ???? E8010000 	show0: call show
 195      00
 196 ???? C3       	    ret
 197 ???? 8F050000 	show: pop  screen ;# pop return address into screen; 'ret' if from show0
 197      0000
 198 ???? 8D76FC89 	    dup_
 198      06
 199 ???? 31C0     	    xor  eax, eax
 200 ???? E8CEFFFF 	    call act ;# make following infinite loop the 'active task'
 200      FF
 201 ???? E8B91B00 	0:  call graphic ;# just 'ret' in gen.asm
 201      00
 202 ???? FF150000 	    call [screen] ;# ret if called from show0
 202      0000
 203 ???? E8AF1B00 	    call switch ;# load framebuffer into video, then switch task
 203      00
 204 ???? 40       	    inc  eax ;# why bother?
 205 ???? EBED     	    jmp  0b ;# loop eternally
 206              	
 207 ???? BE4CF409 	c_: mov  esi, godd+4
 207      00
 208 ???? C3       	    ret
 209              	
 210              	mark: ;# save current state so we can recover later with 'empty'
 211 ???? 8B0D0000 	    mov  ecx, macros ;# save number of macros in longword mk
 211      0000
 212 ???? 890D0000 	    mov  mk, ecx
 212      0000
 213 ???? 8B0D0000 	    mov  ecx, forths ;# number of forth words in mk+1
 213      0000
 214 ???? 890D0000 	    mov  mk+4, ecx
 214      0000
 215 ???? 8B0D0000 	    mov  ecx, h ;# 'here' pointer in mk+2
 215      0000
 216 ???? 890D0000 	    mov  mk+2*4, ecx
 216      0000
 217 ???? C3       	    ret
 218              	
 219              	empty: ;# restore state saved at last 'mark'
 220 ???? 8B0D0000 	    mov  ecx, mk+2*4
 220      0000
 221 ???? 890D0000 	    mov  h, ecx ;# 'here' pointer restored
 221      0000
 222 ???? 8B0D0000 	    mov  ecx, mk+4
 222      0000
 223 ???? 890D0000 	    mov  forths, ecx ;# number of forth words restored
 223      0000
 224 ???? 8B0D0000 	    mov  ecx, mk
 224      0000
 225 ???? 890D0000 	    mov  macros, ecx ;# number of macros restored
 225      0000
 226 ???? C7050000 	    mov  dword ptr class, 0 ;# (jc) not sure what this is for yet
 226      00000000 
 226      0000
 227 ???? C3       	    ret
 228              	
 229              	mfind: ;# find pointer to macro code
 230 ???? 8B0D0000 	    mov  ecx, macros ;# number of macros, 1-based
 230      0000
 231 ???? 57       	    push edi ;# save destination pointer, we need to use it momentarily
 232 ???? 8D3C8D00 	    lea  edi, [macro0-4+ecx*4] ;# point to last macro
 232      000000
 233 ???? EB0E     	    jmp  0f ;# search dictionary
 234              	
 235              	find: ;# locate code of high- or low-level Forth word
 236 ???? 8B0D0000 	    mov  ecx, forths ;# current number of Forth definitions
 236      0000
 237 ???? 57       	    push edi ;# save destination pointer so we can use it
 238 ???? 8D3C8D00 	    lea  edi, [forth0-4+ecx*4] ;# point it to last packed Forth word
 238      000000
 239 ???? FD       	0:  std  ;# search backwards
 240 ???? F2AF     	    repne scasd ;# continue moving until we hit a match
 241 ???? FC       	    cld  ;# clear direction flag again
 242 ???? 5F       	    pop  edi ;# no longer need this, can tell from ECX where match was found
 243 ???? C3       	    ret
 244              	
 245 ???? FF0D0000 	ex1: dec dword ptr words ;# from keyboard
 245      0000
 246 ???? 7403     	    jz   0f
 247 ???? AD       	    drop
 248 ???? EBF5     	    jmp  ex1
 249 ???? E8DCFFFF 	0:  call find
 249      FF
 250 ???? 753F     	    jnz  abort1
 251 ???? AD       	    drop
 252 ???? FF248D00 	    jmp  [forth2+ecx*4] ;# jump to low-level code of Forth word or macro
 252      000000
 253              	
 254 ???? C7050000 	execute: mov dword ptr lit, offset alit
 254      00000000 
 254      0000
 255 ???? 8D76FC89 	    dup_ ;# save EAX on data stack
 255      06
 256 ???? 8B04BDFC 	    mov  eax, [-4+edi*4]
 256      FFFFFF
 257              	ex2:
 258 ???? 83E0F0   	    and  eax, 0xfffffff0 ;# mask tag bits which indicate word type
 259 ???? E8B4FFFF 	    call find ;# look for word in the dictionary
 259      FF
 260 ???? 7508     	    jnz  abort ;# if not found, abort
 261 ???? AD       	    drop ;# restore EAX from data stack
 262 ???? FF248D00 	    jmp  [forth2+ecx*4] ;# execute the Forth word found
 262      000000
 263              	
 264 ???? 893D0000 	abort: mov  curs, edi
 264      0000
 265 ???? C1EF08   	    shr  edi, 10-2
 266 ???? 893D0000 	    mov  blk, edi
 266      0000
 267 ???? BC00000A 	abort1: mov  esp, gods ;# reset return stack pointer
 267      00
 268 ???? C7050000 	    mov  dword ptr  spaces+3*4, offset forthd ;# reset adefine
 268      00000000 
 268      0000
 269 ???? C7050000 	    mov  dword ptr  spaces+4*4, offset qcompile
 269      00000000 
 269      0000
 270 ???? C7050000 	    mov  dword ptr  spaces+5*4, offset cnum
 270      00000000 
 270      0000
 271 ???? C7050000 	    mov  dword ptr  spaces+6*4, offset cshort
 271      00000000 
 271      0000
 272 ???? B82F0000 	    mov  eax, 057 ;# '?'
 272      00
 273 ???? E8A61C00 	    call echo_
 273      00
 274 ???? E9F21F00 	    jmp  accept
 274      00
 275              	
 276 ???? 8F050000 	sdefine: pop adefine
 276      0000
 277 ???? C3       	    ret
 278 ???? E8F4FFFF 	macro_: call sdefine
 278      FF
 279 ???? 8B0D0000 	macrod: mov  ecx, macros
 279      0000
 280 ???? FF050000 	    inc dword ptr  macros
 280      0000
 281 ???? 8D0C8D00 	    lea  ecx, [macro0+ecx*4]
 281      000000
 282 ???? EB18     	    jmp  0f
 283              	
 284 ???? E8DAFFFF 	forth: call sdefine
 284      FF
 285              	forthd:
 286 ???? 8B0D0000 	    mov  ecx, forths ;# current count of Forth words
 286      0000
 287 ???? FF050000 	    inc dword ptr forths ;# make it one more
 287      0000
 288 ???? 8D0C8D00 	    lea  ecx, [forth0+ecx*4] ;# point to the slot for the next definition
 288      000000
 289 ???? 8B14BDFC 	0:  mov  edx, [-4+edi*4] ;# load the packed word from ???
 289      FFFFFF
 290 ???? 83E2F0   	    and  edx, 0xfffffff0 ;# mask out the tag bits
 291 ???? 8911     	    mov  [ecx], edx ;# store the "naked" word in the dictionary
 292 ???? 8B150000 	    mov  edx, h ;# 'here' pointer, place available for new compiled code
 292      0000
 293 ???? 8991040B 	    mov  [forth2-forth0+ecx], edx
 293      0000
 294 ???? 8D91040B 	    lea  edx, [forth2-forth0+ecx]
 294      0000
 295 ???? C1EA02   	    shr  edx, 2
 296 ???? 89150000 	    mov  last, edx
 296      0000
 297 ???? 89250000 	    mov  list, esp
 297      0000
 298 ???? C7050000 	    mov dword ptr  lit, offset adup
 298      00000000 
 298      0000
 299 ???? F7050000 	    test dword ptr class, -1
 299      0000FFFF 
 299      FFFF
 300 ???? 7406     	    jz   0f
 301 ???? FF250000 	    jmp  [class]
 301      0000
 302 ???? C3       	0:  ret
 303              	
 304 ???? 8B150000 	cdrop: mov  edx, h
 304      0000
 305 ???? 89150000 	    mov  list, edx
 305      0000
 306 ???? C602AD   	    mov  byte ptr [edx], 0x0ad ;# lodsd
 307 ???? FF050000 	    inc  dword ptr h
 307      0000
 308 ???? C3       	    ret
 309              	
 310 ???? 8B150000 	qdup: mov  edx, h
 310      0000
 311 ???? 4A       	    dec  edx
 312 ???? 39150000 	    cmp  list, edx
 312      0000
 313 ???? 750C     	    jnz  cdup
 314 ???? 803AAD   	    cmp  byte ptr [edx], 0x0ad
 315 ???? 7507     	    jnz  cdup
 316 ???? 89150000 	    mov  h, edx
 316      0000
 317 ???? C3       	    ret
 318 ???? 8B150000 	cdup: mov  edx, h
 318      0000
 319 ???? C7028D76 	    mov  dword ptr [edx], 0x89fc768d
 319      FC89
 320 ???? C6420406 	    mov  byte ptr [4+edx], 06
 321 ???? 83050000 	    add dword ptr  h, 5
 321      000005
 322 ???? C3       	    ret
 323              	
 324 ???? 8D76FC89 	adup: dup_
 324      06
 325 ???? C3       	    ret
 326              	
 327 ???? 8D76FC89 	var1: dup_
 327      06
 328 ???? 8B048D00 	    mov  eax, [4+forth0+ecx*4]
 328      000000
 329 ???? C3       	    ret
 330 ???? E842FFFF 	variable: call forthd
 330      FF
 331 ???? C781040B 	    mov dword ptr  [forth2-forth0+ecx], offset var1
 331      00000000 
 331      0000
 332 ???? FF050000 	    inc dword ptr  forths ;# dummy entry for source address
 332      0000
 333 ???? 897904   	    mov  [4+ecx], edi
 334 ???? E810FFFF 	    call macrod
 334      FF
 335 ???? C781040B 	    mov dword ptr  [forth2-forth0+ecx], offset 0f
 335      00000000 
 335      0000
 336 ???? FF050000 	    inc dword ptr  macros
 336      0000
 337 ???? 897904   	    mov  [4+ecx], edi
 338 ???? 47       	    inc  edi
 339 ???? C3       	    ret
 340 ???? FF150000 	0:  call [lit]
 340      0000
 341 ???? 8B048D00 	    mov  eax, [4+macro0+ecx*4]
 341      000000
 342 ???? EB20     	    jmp  0f
 343              	
 344 ???? FF150000 	cnum: call [lit]
 344      0000
 345 ???? 8B04BD00 	    mov  eax, [edi*4]
 345      000000
 346 ???? 47       	    inc  edi
 347 ???? EB10     	    jmp  0f
 348              	
 349 ???? FF150000 	cshort: call [lit]
 349      0000
 350 ???? 8B04BDFC 	    mov  eax, [-4+edi*4]
 350      FFFFFF
 351 ???? C1F805   	    sar  eax, 5
 352 ???? E80C0000 	0:  call literal
 352      00
 353 ???? AD       	    drop
 354 ???? C3       	    ret
 355              	
 356 ???? C7050000 	alit: mov dword ptr lit, offset adup
 356      00000000 
 356      0000
 357 ???? E843FFFF 	literal: call qdup
 357      FF
 358 ???? 8B150000 	    mov  edx, list
 358      0000
 359 ???? 89150000 	    mov  list+4, edx
 359      0000
 360 ???? 8B150000 	    mov  edx, h
 360      0000
 361 ???? 89150000 	    mov  list, edx
 361      0000
 362 ???? C602B8   	    mov  byte ptr [edx], 0x0b8
 363 ???? 894201   	    mov  [1+edx], eax
 364 ???? 83050000 	    add dword ptr  h, 5
 364      000005
 365 ???? C3       	    ret
 366              	
 367 ???? FF150000 	qcompile: call [lit]
 367      0000
 368 ???? 8B04BDFC 	    mov  eax, [-4+edi*4]
 368      FFFFFF
 369 ???? 83E0F0   	    and  eax, 0xfffffff0 ;# mask out tag bits
 370 ???? E8BEFDFF 	    call mfind ;# locate word in macro dictionary
 370      FF
 371 ???? 7508     	    jnz  0f ;# if failed, try in Forth dictionary
 372 ???? AD       	    drop ;# restore EAX
 373 ???? FF248D00 	    jmp  [macro2+ecx*4] ;# jmp to macro code
 373      000000
 374 ???? E8BFFDFF 	0:  call find ;# try to find the word in the Forth dictionary
 374      FF
 375 ???? 8B048D00 	    mov  eax, [forth2+ecx*4] ;# load code pointer in case there was a match
 375      000000
 376 ???? 0F8508FE 	0:  jnz  abort ;# abort if no match in Forth dictionary
 376      FFFF
 377              	call_:
 378 ???? 8B150000 	    mov  edx, h ;# get 'here' pointer to where new compiled code goes
 378      0000
 379 ???? 89150000 	    mov  list, edx
 379      0000
 380 ???? C602E8   	    mov  byte ptr [edx], 0x0e8 ;# x86 "call" instruction
 381 ???? 83C205   	    add  edx, 5
 382 ???? 29D0     	    sub  eax, edx ;# it has to be a 32-bit offset rather than absolute address
 383 ???? 8942FC   	    mov  [-4+edx], eax ;# store it after the "call" instruction
 384 ???? 89150000 	    mov  h, edx ;# point 'here' to end of just-compiled code
 384      0000
 385 ???? AD       	    drop ;# restore EAX from data stack
 386 ???? C3       	    ret
 387              	
 388 ???? FF150000 	compile: call [lit]
 388      0000
 389 ???? 8B04BDFC 	    mov  eax, [-4+edi*4]
 389      FFFFFF
 390 ???? 83E0F0   	    and  eax, 0xfffffff0 ;# mask out tag bits
 391 ???? E86EFDFF 	    call mfind
 391      FF
 392 ???? 8B048D00 	    mov  eax, [macro2+ecx*4]
 392      000000
 393 ???? EBBD     	    jmp  0b
 394              	
 395 ???? C7050000 	short_: mov dword ptr lit, offset alit
 395      00000000 
 395      0000
 396 ???? 8D76FC89 	    dup_
 396      06
 397 ???? 8B04BDFC 	    mov  eax, [-4+edi*4]
 397      FFFFFF
 398 ???? C1F805   	    sar  eax, 5
 399 ???? C3       	    ret
 400              	
 401 ???? C7050000 	num: mov dword ptr lit, offset alit
 401      00000000 
 401      0000
 402 ???? 8D76FC89 	    dup_
 402      06
 403 ???? 8B04BD00 	    mov  eax, [edi*4]
 403      000000
 404 ???? 47       	    inc  edi
 405 ???? C3       	    ret
 406              	
 407 ???? B9040000 	comma: mov  ecx, 4
 407      00
 408 ???? 8B150000 	0:  mov  edx, h
 408      0000
 409 ???? 8902     	    mov  [edx], eax
 410 ???? 8B06     	    mov  eax, [esi] ;# drop
 411 ???? 8D140A   	    lea  edx, [edx+ecx]
 412 ???? 8D7604   	    lea  esi, [esi+4]
 413 ???? 89150000 	    mov  h, edx
 413      0000
 414 ???? C3       	    ret
 415              	
 416 ???? B9010000 	comma1: mov  ecx, 1
 416      00
 417 ???? EBE2     	    jmp  0b
 418              	
 419 ???? B9020000 	comma2: mov  ecx, 2
 419      00
 420 ???? EBDB     	    jmp  0b
 421              	
 422 ???? B9030000 	comma3: mov  ecx, 3
 422      00
 423 ???? EBD4     	    jmp  0b
 424              	
 425 ???? 8B150000 	semi: mov  edx, h
 425      0000
 426 ???? 83EA05   	    sub  edx, 5
 427 ???? 39150000 	    cmp  list, edx
 427      0000
 428 ???? 7508     	    jnz  0f
 429 ???? 803AE8   	    cmp  byte ptr [edx], 0x0e8
 430 ???? 7503     	    jnz  0f
 431 ???? FE02     	    inc  byte ptr [edx] ;# jmp
 432 ???? C3       	    ret
 433 ???? C64205C3 	0:  mov  byte ptr [5+edx], 0x0c3 ;# ret
 434 ???? FF050000 	    inc  dword ptr h
 434      0000
 435 ???? C3       	    ret
 436              	
 437 ???? 89250000 	then: mov  list, esp
 437      0000
 438 ???? 8B150000 	    mov  edx, h
 438      0000
 439 ???? 29C2     	    sub  edx, eax
 440 ???? 8850FF   	    mov  [-1+eax], dl
 441 ???? AD       	    drop
 442 ???? C3       	    ret
 443              	
 444 ???? 89250000 	begin: mov  list, esp
 444      0000
 445 ???? 8D76FC89 	here: dup_
 445      06
 446 ???? A1000000 	    mov  eax, h
 446      00
 447 ???? C3       	    ret
 448              	
 449 ???? 8B150000 	qlit: mov  edx, h
 449      0000
 450 ???? 8D52FB   	    lea  edx, [edx-5]
 451 ???? 39150000 	    cmp  list, edx
 451      0000
 452 ???? 7533     	    jnz  0f
 453 ???? 803AB8   	    cmp  byte ptr [edx], 0x0b8
 454 ???? 752E     	    jnz  0f
 455 ???? 8D76FC89 	    dup_
 455      06
 456 ???? A1000000 	    mov  eax, list+4
 456      00
 457 ???? A3000000 	    mov  list, eax
 457      00
 458 ???? 8B4201   	    mov  eax, [1+edx]
 459 ???? 817AFB8D 	    cmp  dword ptr [edx-5], 0x89fc768d ;# dup
 459      76FC89
 460 ???? 740B     	    jz   q1
 461 ???? 89150000 	    mov  h, edx
 461      0000
 462 ???? E9B2FDFF 	    jmp  cdrop
 462      FF
 463 ???? 83050000 	q1: add dword ptr  h, -10 ;# flag nz
 463      0000F6
 464 ???? C3       	    ret
 465 ???? 31D2     	0:  xor  edx, edx ;# flag z
 466 ???? C3       	    ret
 467              	
 468 ???? 3906     	less: cmp  [esi], eax
 469 ???? 7802     	    js   0f ;# flag nz
 470 ???? 31C9     	    xor  ecx, ecx ;# flag z
 471 ???? C3       	0:  ret
 472              	
 473 ???? F704BDFC 	qignore: test dword ptr [-4+edi*4], 0xfffffff0 ;# valid packed word?
 473      FFFFFFF0 
 473      FFFFFF
 474 ???? 7502     	    jnz  nul  ;# return if so
 475 ???? 5F       	    pop  edi
 476 ???? 5F       	    pop  edi
 477 ???? C3       	nul: ret
 478              	
 479 ???? 5A       	jump: pop  edx
 480 ???? 01C2     	    add  edx, eax
 481 ???? 8D548205 	    lea  edx, [5+eax*4+edx]
 482 ???? 0352FC   	    add  edx, [-4+edx]
 483 ???? AD       	    drop
 484 ???? FFE2     	    jmp  edx
 485              	
 486 ???? C1E008   	load: shl  eax, 10-2 ;# multiply by 256 longwords, same as 1024 bytes
 487 ???? 57       	    push edi ;# save EDI register, we need it for the inner interpreter loop
 488 ???? 89C7     	    mov  edi, eax
 489 ???? AD       	    drop ;# block number from data stack
 490 ???? 8B14BD00 	inter: mov  edx, [edi*4] ;# get next longword from block
 490      000000
 491 ???? 47       	    inc  edi ;# then point to the following one
 492 ???? 83E20F   	    and  edx, 017 ;# get only low 4 bits, the type tag
 493 ???? FF149500 	    call spaces[edx*4] ;# call the routine appropriate to this type
 493      000000
 494 ???? EBEC     	    jmp  inter ;# loop till "nul" reached, which ends the loop
 495              	
 496              	.align 4
 497 ???? 00000000 	spaces: .long qignore, execute, num
 497      00000000 
 497      00000000 
 498              	adefine: ;# where definitions go, either in macrod (dictionary) or forthd
 499              	.ifdef CM2001
 500              	    .long forthd ;# as found in CM2001 color.com binary
 501              	.else
 502 ???? 00000000 	    .long macrod ;# default, the macro dictionary
 503              	.endif
 504 ???? 00000000 	    .long qcompile, cnum, cshort, compile
 504      00000000 
 504      00000000 
 504      00000000 
 505 ???? 00000000 	    .long short_, nul, nul, nul
 505      00000000 
 505      00000000 
 505      00000000 
 506 ???? 00000000 	    .long variable, nul, nul, nul
 506      00000000 
 506      00000000 
 506      00000000 
 507              	
 508 ???? 00000000 	lit: .long adup
 509              	.ifdef CM2001
 510              	mk: .long 0x2e, 0x5e, 0x101028
 511              	h: .long 0x101137
 512              	last: .long 0x59f
 513              	class: .long 0
 514              	list: .long 0x101132, 0x10111e
 515              	macros: .long 0x2e
 516              	forths: .long 0x67
 517              	.else
 518 ???? 00000000 	mk: .long 0, 0, 0
 518      00000000 
 518      00000000 
 519 ???? 00001000 	h: .long 0x40000*4 ;# start compiling at 0x100000
 520 ???? 00000000 	last: .long 0
 521 ???? 00000000 	class: .long 0
 522 ???? 00000000 	list: .long 0, 0
 522      00000000 
 523 ???? 00000000 	macros: .long 0
 524 ???? 00000000 	forths: .long 0
 525              	.endif
 526              	
 527              	macro0:
 528 ???? 000000F0 	    packword ";", dup, ?dup, drop, then, begin
 528      00109BC1 
 528      203683FF 
 528      008827C0 
 528      00C0882C 
 528      007695C6 
 529              	macro1:
 530              	.ifdef CM2001
 531              	/* words are defined starting in block 24... their packed representations
 532              	/* and longword pointers are stored in these tables */
 533              	    packword swap, 0, if, -if, a, a!, 2*, "a," @, !
 534              	    packword nip, +, or, binary, and, u+, ?, over, push, pop
 535              	    packword -, for, *next, next, 0next, -next, i, *end, end, +!
 536              	    packword nop, align, or!, *, */, /mod, /, mod, 2/, time
 537              	    packword p@, p!
 538              	    ;# following that is some nonsense:
 539              	    .long 0xc9800000 ;# hd (a valid packed word but isn't defined anywhere)
 540              	    .long 0x00005811 ;# which isn't a valid packed word
 541              	.endif
 542 ???? 00000000 	    .rept 128 - ((.-macro1)/4); .long 0; .endr ;# room for new macros
 542      00000000 
 542      00000000 
 542      00000000 
 542      00000000 
 542      00000000 
 542      00000000 
 542      00000000 
 542      00000000 
 542      00000000 
 542      00000000 
 543              	forth0:
 544 ???? 004066C6 	    packword boot, warm, pause, macro, forth, c, stop, read, write, nc
 544      00408CBA 
 544      80A0B9C4 
 544      004CC88A 
 544      006489B1 
 544      00000090 
 544      00201E81 
 544      00005C14 
 544      0020B9B8 
 544      00000069 
 545 ???? C02AC691 	    packword command, seek, ready, act, show, load, here, ?lit, "3,", "2,"
****  Warning: shift count out of range (-2 is not between 0 and 63)
 545      00402782 
 545      00135C14 
 545      00001059 
 545      00B84386 
 545      0000AEA1 
 545      008082C8 
 545      002047FF 
 545      0000F8D7 
 545      0000F8D5 
 546 ???? 0000F8D3 	    packword "1,", ",", less, jump, accept, pad, erase, copy, mark, empt
 546      000000FC 
 546      000042A2 
 546      80389AE5 
 546      10314959 
 546      0000B8C4 
 546      00205841 
 546      0098E291 
 546      00408F8A 
 546      0020E248 
 547 ???? 0000B948 	    packword emit, digit, 2emit, ., h., h.n, cr, space, down, edit
 547      0072F5C0 
 547      007291D4 
 547      000000EA 
 547      0000D4C9 
 547      0080D5C9 
 547      00008090 
 547      00922586 
 547      006077C0 
 547      00400E4C 
 548 ???? 00000040 	    packword e, lm, rm, graphic, text, keyboard, debug, at, +at, xy
 548      000040A4 
 548      00008018 
 548      802CAEA8 
 548      0040CA24 
 548      60C693E8 
 548      00F398C0 
 548      00000052 
 548      0000A4F6 
 548      000030CB 
 549 ???? 0000E1B1 	    packword fov, fifo, box, line, color, octant, sp, last, unpack
****  Warning: shift count out of range (-2 is not between 0 and 63)
 549      00C0D8B3 
 549      004079C6 
 549      0000B2A3 
 549      00C4D091 
 549      00B11239 
 549      00002086 
 549      0080C0A2 
 549      4096D8CC 
 550              	.ifdef MANDELBROT
 551              	    packword vframe
 552              	.endif
 553              	forth1:
 554              	.ifdef CM2001
 555              	;# now we are at address 0xacc
 556              	    packword @, !, +, */, *, /, 2/, dup, negate, min
 557              	    packword abs, max, v+, writes, reads, oadf, save, block, white, red
 558              	    packword green, blue, silver, black, screen, 5*, cf, logo, empty, dump
 559              	    packword icons, print, file, north, colors, blks, w/c, buffer, size, set
 560              	    packword cyls, put, get, .com, format
 561              	;# this brings us to address 0x12cc
 562              	.endif
 563 ???? 00000000 	    .rept 512 - ((.-forth1)/4); .long 0; .endr
 563      00000000 
 563      00000000 
 563      00000000 
 563      00000000 
 563      00000000 
 563      00000000 
 563      00000000 
 563      00000000 
 563      00000000 
 563      00000000 
 564              	macro2:
 565 ???? 00000000 	    .long semi, cdup, qdup, cdrop, then, begin
 565      00000000 
 565      00000000 
 565      00000000 
 565      00000000 
 565      00000000 
 566              	0:
 567              	.ifdef CM2001
 568              	;# slots filled starting with 0x1008d0 at 0x12e4, to 0x0552 at 0x138c.
 569              	    .long 0x1008d0, 0x1008ee, 0x100902, 0x100916, 0x10092a
 570              	    .long 0x10093e, 0x10096d, 0x10097c, 0x100985, 0x1009c0
 571              	    .long 0x100a2b, 0x100a3a, 0x100a69, 0x100a73, 0x100a99
 572              	    .long 0x100aa8, 0x100ad7, 0x100af0, 0x100b04, 0x100b18
 573              	    .long 0x100b2c, 0x100b3b, 0x100b45, 0x100b4b, 0x100b55
 574              	    .long 0x100b7a, 0x100b89, 0x100b9d, 0x100ba3, 0x100bc3
 575              	    .long 0x100c2e, 0x100c3d, 0x100c57, 0x100c7c, 0x100c90
 576              	    .long 0x100cb8, 0x100cdb, 0x100ce5, 0x100cef, 0x100cfe
 577              	    .long 0x100758, 0x10076c, 0x000552
 578              	.endif
 579 ???? 00000000 	    .rept 128 - ((.-0b)/4); .long 0; .endr
 579      00000000 
 579      00000000 
 579      00000000 
 579      00000000 
 579      00000000 
 579      00000000 
 579      00000000 
 579      00000000 
 579      00000000 
 579      00000000 
 580              	forth2:
 581 ???? 00000000 	    .long boot, warm, pause, macro_, forth, c_, stop, readf, writef, nc_
 581      00000000 
 581      00000000 
 581      00000000 
 581      00000000 
 581      00000000 
 581      00000000 
 581      00000000 
 581      00000000 
 581      00000000 
 582 ???? 00000000 	    .long cmdf, seekf, readyf, act, show, load, here, qlit, comma3, comma2
 582      00000000 
 582      00000000 
 582      00000000 
 582      00000000 
 582      00000000 
 582      00000000 
 582      00000000 
 582      00000000 
 582      00000000 
 583 ???? 00000000 	    .long comma1, comma, less, jump, accept, pad, erase, copy, mark, empty
 583      00000000 
 583      00000000 
 583      00000000 
 583      00000000 
 583      00000000 
 583      00000000 
 583      00000000 
 583      00000000 
 583      00000000 
 584 ???? 00000000 	    .long emit, edig, emit2, dot10, hdot, hdotn, cr, space, down, edit
 584      00000000 
 584      00000000 
 584      00000000 
 584      00000000 
 584      00000000 
 584      00000000 
 584      00000000 
 584      00000000 
 584      00000000 
 585 ???? 00000000 	    .long e, lms, rms, graphic, text1, keyboard, debug, at, pat, xy_
 585      00000000 
 585      00000000 
 585      00000000 
 585      00000000 
 585      00000000 
 585      00000000 
 585      00000000 
 585      00000000 
 585      00000000 
 586 ???? 00000000 	    .long fov_, fifof, box, line, color, octant, sps, last_, unpack
 586      00000000 
 586      00000000 
 586      00000000 
 586      00000000 
 586      00000000 
 586      00000000 
 586      00000000 
 586      00000000 
 587              	.ifdef MANDELBROT
 588              	    .long vframe
 589              	.endif
 590              	0:
 591              	.ifdef CM2001
 592              	;# in the CM2001 color.com object file, there are 45 entries, starting
 593              	;# 45 entries, from 0x100d12 at 0x15d0 to 0x1008c1 at 0x1680.
 594              	    .long 0x100d12, 0x100d1a, 0x100d26, 0x100d2c, 0x100d37
 595              	    .long 0x100d3e, 0x100d4d, 0x100d50, 0x100d56, 0x100d5e
 596              	    .long 0x100d6f, 0x100d79, 0x100d88, 0x100d94, 0x100da6
 597              	    .long 0x100db8, 0x100db8, 0x100ddc, 0x100ded, 0x100dfc
 598              	    .long 0x100e0b, 0x100e1a, 0x100e29, 0x100e38, 0x100e47
 599              	    .long 0x100e74, 0x100e8e, 0x100f1a, 0x100fc4, 0x100fce
 600              	    .long 0x100fdd, 0x100fec, 0x100ffb, 0x10100a, 0x101019
 601              	    .long 0x101028, 0x101039, 0x101044, 0x10104f, 0x10107d
 602              	    .long 0x1010a5, 0x1010d3, 0x1010f5, 0x101119, 0x1008c1
 603              	.endif
 604 ???? 00000000 	    .rept 512 - ((.-0b)/4); .long 0; .endr ;# room for new definitions
 604      00000000 
 604      00000000 
 604      00000000 
 604      00000000 
 604      00000000 
 604      00000000 
 604      00000000 
 604      00000000 
 604      00000000 
 604      00000000 
 605              	
 606 ???? B0FE     	boot: mov  al, 0x0fe ;# reset
 607 ???? E664     	    out  0x64, al
 608 ???? EBFE     	    jmp  .
 609              	
 610              	erase:
 611 ???? 89C1     	    mov  ecx, eax
 612 ???? C1E108   	    shl  ecx, 8
 613 ???? AD       	    drop
 614 ???? 57       	    push edi
 615 ???? 89C7     	    mov  edi, eax
 616 ???? C1E70A   	    shl  edi, 2+8
 617 ???? 31C0     	    xor  eax, eax
 618 ???? F3AB     	    rep stosd
 619 ???? 5F       	    pop edi
 620 ???? AD       	    drop
 621 ???? C3       	    ret
 622              	
 623              	;# copy block from blk to block number at top-of-stack (in EAX)
 624 ???? 83F80C   	copy: cmp  eax, 12 ;# can't overwrite machine-code blocks...
 625 ???? 0F8213E6 	    jc   abort1 ;# so if we're asked to, abort the operation
 625      FFFF
 626 ???? 89C7     	    mov  edi, eax ;# get block number into EDI
 627 ???? C1E70A   	    shl  edi, 2+8 ;# multiply by 1024 to get physical (byte) address
 628 ???? 56       	    push esi  ;# save data stack pointer so we can use it for block move
 629 ???? 8B350000 	    mov  esi, blk ;# get current block number from blk
 629      0000
 630 ???? C1E60A   	    shl  esi, 2+8 ;# multiply by 1024 to get address
 631 ???? B9000100 	    mov  ecx, 256 ;# 256 longwords = 1024 bytes
 631      00
 632 ???? F3A5     	    rep movsd ;# move the block from source (ESI) to destination (EDI)
 633 ???? 5E       	    pop  esi  ;# restore data stack pointer
 634 ???? A3000000 	    mov  blk, eax ;# destination block becomes new current block (blk)
 634      00
 635 ???? AD       	    drop ;# no longer need the block number
 636 ???? C3       	    ret
 637              	
 638 ???? C7050000 	debug: mov dword ptr  xy,  offset (3*0x10000+(vc-2)*ih+3)
 638      0000B502 
 638      0300
 639 ???? 8D76FC89 	    dup_
 639      06
 640 ???? A1000000 	    mov  eax, god
 640      00
 641 ???? FF30     	    push [eax]
 642 ???? E8B20800 	    call dot
 642      00
 643 ???? 8D76FC89 	    dup_
 643      06
 644 ???? 58       	    pop  eax
 645 ???? E8A70800 	    call dot
 645      00
 646 ???? 8D76FC89 	    dup_
 646      06
 647 ???? A1000000 	    mov  eax, main
 647      00
 648 ???? E8980800 	    call dot
 648      00
 649 ???? 8D76FC89 	    dup_
 649      06
 650 ???? 89F0     	    mov  eax, esi
 651 ???? E98C0800 	    jmp  dot
 651      00
 652              	
 653              	.equ iw, 16+6 ;# icon width, including 6 pixels padding
 654              	.equ ih, 24+6 ;# icon height, including padding
 655              	.equ hc, hp/iw ;# 46 ;# number of horizontal characters on screen
 656              	.equ vc, vp/ih ;# 25 ;# number of vertical characters
 657              	;# MASM's 3-byte NOP for alignment is 2e8bc0, cs: mov eax,eax
 658              	;# whereas gas's is 8d7600, lea esi,[esi].
 659              	.ifdef CM2001
 660              	     cs mov eax, eax
 661              	xy: .long 0x033d02e5
 662              	lm: .long 3
 663              	rm: .long hc*iw
 664              	xycr: .long 3*0x10000+3
 665              	fov: .long 10*(2*vp+vp/2)
 666              	.else
 667 ???? 0F1F00   	.align 4 
 668 ???? 03000300 	xy: .long 3*0x10000+3 ;# 3 pixels padding on each side of icons
 669 ???? 03000000 	lm: .long 3
 670 ???? F4030000 	rm: .long hc*iw ;# 1012
 671 ???? 00000000 	xycr: .long 0
 672 ???? 004B0000 	fov: .long 10*(2*vp+vp/2)
 673              	.endif
 674              	
 675 ???? 8D76FC89 	nc_: dup_
 675      06
 676 ???? B80C0000 	    mov  eax, (offset nc-offset start)/4
 676      00
 677 ???? C3       	    ret
 678              	
 679 ???? 8D76FC89 	xy_: dup_
 679      06
 680 ???? B89C0700 	    mov  eax, (offset xy-offset start)/4
 680      00
 681 ???? C3       	    ret
 682              	
 683 ???? 8D76FC89 	fov_: dup_
 683      06
 684 ???? B8A00700 	    mov  eax, (offset fov-offset start)/4
 684      00
 685 ???? C3       	    ret
 686              	
 687 ???? 8D76FC89 	sps: dup_
 687      06
 688 ???? B8DE0100 	    mov  eax, (offset spaces-offset start)/4
 688      00
 689 ???? C3       	    ret
 690              	
 691 ???? 8D76FC89 	last_: dup_
 691      06
 692 ???? B8F30100 	    mov  eax, (offset last-offset start)/4
 692      00
 693 ???? C3       	    ret
 694              	
 695              	.include "gen.asm" ;# cce.asm pio.asm ati128.asm ati64.asm gen.asm
   1              	.intel_syntax noprefix ;#generic graphics
   2              	
   3              	;# VESA mode numbers and screen sizes,
   4              	;# from http://www.mat.univie.ac.at/~gerald/laptop/vesafb.txt
   5              	;#    | 640x480  800x600  1024x768 1280x1024
   6              	;#----+-------------------------------------
   7              	;#256 |  0x101    0x103    0x105    0x107   
   8              	;#32k |  0x110    0x113    0x116    0x119   
   9              	;#64k |  0x111    0x114    0x117    0x11A   
  10              	;#16M |  0x112    0x115    0x118    0x11B   
  11 ???? 90       	.align 4
  12              	;# top of RAM is 0x2000000 with 32 megs; framebuffer is just below this
  13              	;# multiply vp (vertical pixels) by hp (horizontal pixels) by 2 bytes (16 bits)
  14              	;# to determine the location of the framebuffer
  15 ???? 0000E801 	frame: .long 0x2000000-hp*vp*2 ;# 32 m
  16              	.ifdef AGP ;# match CM2001 color.com binary
  17              	displ: .long 0x0f5000000
  18              	fore:  .long 0x0f7c0 ;# foreground color, low-brightness yellow
  19              	xc:    .long 0x0327
  20              	yc:    .long 0x02e5
  21              	.else
  22 ???? 000000F0 	displ: .long 0x0f0000000 ;# fujitsu (physical address of video memory)
  23 ???? DEF70000 	fore:  .long 0x0f7de ;# less-brightness white (silver) in 565 color mode
  24 ???? 00000000 	xc:    .long 0
  25 ???? 00000000 	yc:    .long 0
  26              	.endif
  27              	
  28              	rgb: ;# change 8:8:8 bit format to 5:6:5
  29 ???? C1C808   	    ror  eax, 8 ;# rotate blue bits into upper word
  30 ???? 66C1E802 	    shr  ax, 2 ;# drop two low bits of green
  31 ???? C1C806   	    ror  eax, 6 ;# rotate green into upper word, leaving only red in AX
  32 ???? C0E803   	    shr  al, 3 ;# drop low 3 bits of red
  33 ???? C1C00B   	    rol  eax, 6+5 ;# now rrrrrggggggbbbbb
  34 ???? 25DEF700 	    and  eax, 0b1111011111011110 ;# remove low bit of each color
  34      00
  35 ???? C3       	    ret
  36              	
  37 ???? 8D76FC89 	white: dup_
  37      06
  38 ???? B8FFFFFF 	    mov  eax, 0x0ffffff ;# 8:8:8 rgb, full brightness
  38      00
  39 ???? E8DBFFFF 	color: call rgb ;# change to 5:6:5 bit format
  39      FF
  40 ???? A3000000 	    mov  fore, eax
  40      00
  41 ???? AD       	    drop
  42 ???? C3       	    ret
  43              	
  44              	.ifdef AGP ;# from CM's 2001 version at colorforth.com
  45              	north: mov  edx, 0x0cf8
  46              	    out  dx, eax
  47              	    add  edx, 4
  48              	    in   eax, dx
  49              	    ret
  50              	
  51              	dev: mov  eax, 0x80001008 ;# find display, start at device 2
  52              	    mov  ecx, 31-1 ;# .end with agp: 10008, bus 1, dev 0
  53              	0:  dup_
  54              	    call north
  55              	    and  eax, 0x0ff000000
  56              	    cmp  eax, 0x3000000
  57              	    drop
  58              	    jz   0f
  59              	    add  eax, 0x800
  60              	    next 0b
  61              	0:  ret
  62              	
  63              	ati0: call dev
  64              	    or   dword ptr [eax-4], 2 ;# enable memory
  65              	    add  al, 0x24-8 ;# look for prefetch
  66              	    mov  cl, 5
  67              	0:  dup_
  68              	    call north
  69              	    xor  al, 8
  70              	    jz   0f
  71              	    drop
  72              	    sub  eax, 4
  73              	    next 0b
  74              	    dup_
  75              	    call north
  76              	    and  eax, 0x0fffffff0
  77              	0:  mov  displ, eax
  78              	    drop
  79              	    ret
  80              	.endif ;# AGP 
  81              	
  82 ???? AD       	fifof: drop
  83 ???? C3       	graphic: ret
  84              	
  85              	switch: ;# refresh screen, then switch tasks
  86 ???? 56       	    push esi
  87 ???? 8B350000 	    mov  esi, frame ;# source address, framebuffer
  87      0000
  88 ???? 57       	    push edi
  89 ???? 8B3D0000 	    mov  edi, displ ;# destination, linear memory of video controller
  89      0000
  90 ???? B9000006 	    mov  ecx, hp*vp/2 ;# number of 16-bits pixels, divided by 2 for dword movs
  90      00
  91 ???? F3A5     	    rep  movsd ;# from buffer into video RAM
  92 ???? 5F       	    pop  edi
  93 ???? 5E       	    pop  esi
  94 ???? E9D6E3FF 	0:  jmp  pause ;# switch task
  94      FF
  95              	
  96              	clip:
  97 ???? 8B3D0000 	    mov edi, xy
  97      0000
  98 ???? 89F9     	    mov  ecx, edi
  99 ???? 6685C9   	    test cx, cx
 100 ???? 7902     	    jns  0f
 101 ???? 31C9     	    xor  ecx, ecx
 102 ???? 81E1FFFF 	0:  and  ecx, 0x0ffff
 102      0000
 103 ???? 890D0000 	    mov  yc, ecx
 103      0000
 104 ???? 69C90008 	    imul ecx, hp*2
 104      0000
 105 ???? C1FF10   	    sar  edi, 16
 106 ???? 7902     	    jns  0f
 107 ???? 31FF     	    xor  edi, edi
 108 ???? 893D0000 	0:  mov  xc, edi
 108      0000
 109 ???? 8D3C79   	    lea  edi, [edi*2+ecx]
 110 ???? 033D0000 	    add  edi, frame
 110      0000
 111 ???? C3       	    ret
 112              	
 113 ???? 66AD     	bit16: lodsw
 114 ???? 86E0     	    xchg al, ah
 115 ???? B9100000 	    mov  ecx, 16
 115      00
 116 ???? 66D1E0   	b16: shl  ax, 1
 117 ???? 7303     	    jnc  0f
 118 ???? 668917   	    mov  [edi], dx
 119 ???? 83C702   	0:  add  edi, 2
 120 ???? 4975F2   	    next b16
 121 ???? C3       	    ret
 122              	
 123 ???? 66AD     	bit32: lodsw
 124 ???? 86E0     	    xchg al, ah
 125 ???? B9100000 	    mov  ecx, 16
 125      00
 126 ???? D1E0     	b32: shl  eax, 1
 127 ???? 7315     	    jnc  0f
 128 ???? 668917   	    mov  [edi], dx
 129 ???? 66895702 	    mov  [edi+2], dx
 130 ???? 66899700 	    mov  [edi+hp*2], dx
 130      080000
 131 ???? 66899702 	    mov  [edi+hp*2+2], dx
 131      080000
 132 ???? 83C704   	0:  add  edi, 4
 133 ???? 4975E1   	    next b32
 134 ???? C3       	    ret
 135              	
 136              	emit: ;# paint a character on the screen
 137 ???? E8FF0100 	    call qcr ;# issue CRLF if at end of line
 137      00
 138 ???? 56       	    push esi ;# save registers we need...
 139 ???? 57       	    push edi
 140 ???? 52       	    push edx
 141 ???? 6BC030   	    imul eax, 16*24/8 ;# index into icon table...
 142 ???? 8DB00030 	    lea  esi, icons[eax] ;# point to the bit-representation of this character
 142      0000
 143 ???? E871FFFF 	    call clip
 143      FF
 144 ???? 8B150000 	    mov  edx, fore ;# get foreground color into EDX
 144      0000
 145 ???? B9180000 	    mov  ecx, 24
 145      00
 146 ???? 51       	0:  push ecx
 147 ???? E898FFFF 	    call bit16
 147      FF
 148 ???? 81C7E007 	    add  edi, (hp-16)*2
 148      0000
 149 ???? 59       	    pop  ecx
 150 ???? 4975F0   	    next 0b
 151 ???? 5A       	    pop  edx ;# restore registers...
 152 ???? 5F       	    pop  edi
 153 ???? 5E       	    pop  esi
 154 ???? AD       	bl_: drop
 155              	space:
 156 ???? 81050000 	    add dword ptr xy, iw*0x10000
 156      00000000 
 156      1600
 157 ???? C3       	    ret
 158              	
 159 ???? 56       	emit2: push esi
 160 ???? 57       	    push edi
 161 ???? 52       	    push edx
 162 ???? 6BC030   	    imul eax, 16*24/8
 163 ???? 8DB00030 	    lea  esi, icons[eax]
 163      0000
 164 ???? E836FFFF 	    call clip
 164      FF
 165 ???? 8B150000 	    mov  edx, fore
 165      0000
 166 ???? B9180000 	    mov  ecx, 24
 166      00
 167 ???? 51       	0:  push ecx
 168 ???? E875FFFF 	    call bit32
 168      FF
 169 ???? 81C7C00F 	    add  edi, (2*hp-16*2)*2
 169      0000
 170 ???? 59       	    pop  ecx
 171 ???? 4975F0   	    next 0b
 172 ???? 5A       	    pop  edx
 173 ???? 5F       	    pop  edi
 174 ???? 5E       	    pop  esi
 175 ???? 81050000 	    add  dword ptr xy, iw*0x10000*2
 175      00000000 
 175      2C00
 176 ???? AD       	    drop
 177 ???? C3       	    ret
 178              	
 179 ???? E8D3FEFF 	text1: call white
 179      FF
 180 ???? C7050000 	    mov  dword ptr lm, 3
 180      00000300 
 180      0000
 181 ???? C7050000 	    mov  dword ptr rm, hc*iw
 181      0000F403 
 181      0000
 182 ???? E9520100 	    jmp  top
 182      00
 183              	
 184 ???? E8E9FEFF 	line: call clip
 184      FF
 185 ???? 8B0E     	    mov  ecx, [esi]
 186 ???? D1E1     	    shl  ecx, 1
 187 ???? 29CF     	    sub  edi, ecx
 188 ???? 89C1     	    mov  ecx, eax
 189 ???? A1000000 	    mov  eax, fore
 189      00
 190 ???? 66F3AB   	    rep stosw
 191 ???? FF050000 	    inc dword ptr xy
 191      0000
 192 ???? AD       	    drop
 193 ???? AD       	    drop
 194 ???? C3       	    ret
 195              	
 196              	box: ;# draw a box and fill with foreground color
 197 ???? E8CBFEFF 	    call clip
 197      FF
 198 ???? 3D010300 	    cmp  eax, vp+1 ;# past vertical end of screen?
 198      00
 199 ???? 7805     	    js   0f ;# continue if not
 200 ???? B8000300 	    mov  eax, vp ;# else set vertical parameter to end of screen
 200      00
 201 ???? 89C1     	0:  mov  ecx, eax
 202 ???? 2B0D0000 	    sub  ecx, yc
 202      0000
 203 ???? 7E31     	    jng  no
 204 ???? 813E0104 	    cmp  dword ptr [esi], hp+1
 204      0000
 205 ???? 7806     	    js   0f
 206 ???? C7060004 	    mov  dword ptr [esi], hp
 206      0000
 207 ???? A1000000 	0:  mov  eax, xc
 207      00
 208 ???? 2906     	    sub  [esi], eax
 209 ???? 7E1A     	    jng  no
 210 ???? BA000400 	    mov  edx, hp
 210      00
 211 ???? 2B16     	    sub  edx, [esi]
 212 ???? D1E2     	    shl  edx, 1
 213 ???? A1000000 	    mov  eax, fore
 213      00
 214 ???? 51       	0:  push ecx
 215 ???? 8B0E     	    mov  ecx, [esi]
 216 ???? 66F3AB   	    rep stosw
 217 ???? 01D7     	    add  edi, edx
 218 ???? 59       	    pop  ecx
 219 ???? 4975F4   	    next 0b
 220 ???? AD       	no: drop
 221 ???? AD       	    drop
 222 ???? C3       	    ret
 223              	.ifdef MANDELBROT
 224              	vframe:
 225              	    mov eax, frame
 226              	    dup_
 227              	    ret
 228              	.endif
 696              	
 697              	.equ yellow, 0xffff00 ;# RG0 is yellow
 698 ???? 8D76FC89 	cyan: dup_
 698      06
 699 ???? B8FFFF00 	    mov  eax, 0x00ffff ;# 0GB is cyan
 699      00
 700 ???? E948FEFF 	    jmp  color
 700      FF
 701 ???? 8D76FC89 	magenta: dup_
 701      06
 702 ???? B8FF00FF 	    mov  eax, 0xff00ff ;# R0B is magenta
 702      00
 703 ???? E939FEFF 	    jmp  color
 703      FF
 704 ???? 8D76FC89 	silver: dup_ ;# half-brightness white
 704      06
 705 ???? B8C0C0C0 	    mov  eax, 0xc0c0c0 ;# rgb, 4 bits of each
 705      00
 706 ???? E92AFEFF 	    jmp  color
 706      FF
 707 ???? 8D76FC89 	blue: dup_
 707      06
 708 ???? B8FF4040 	    mov  eax, 0x4040ff ;# a little r and g to make it brighter
 708      00
 709 ???? E91BFEFF 	    jmp  color
 709      FF
 710 ???? 8D76FC89 	red: dup_
 710      06
 711 ???? B80000FF 	    mov  eax, 0xff0000 ;# pure red
 711      00
 712 ???? E90CFEFF 	    jmp  color
 712      FF
 713 ???? 8D76FC89 	green: dup_
 713      06
 714 ???? B800FF00 	    mov  eax, 0x8000ff00 ;# what's that 0x80 for?
 714      80
 715 ???? E9FDFDFF 	    jmp  color
 715      FF
 716              	
 717              	history:
 718              	.ifdef CM2001
 719              	    .byte 0, 0, 0, 0, 0, 0, 0, 37, 10, 3, 9
 720              	.else
 721 ???? 00000000 	    .rept 11; .byte 0; .endr
 721      00000000 
 721      000000
 722              	.endif
 723 ???? 56       	echo_: push esi
 724 ???? B90A0000 	    mov  ecx, 11-1
 724      00
 725 ???? 8D3D0000 	    lea  edi, history
 725      0000
 726 ???? 8D7701   	    lea  esi, [1+edi]
 727 ???? F3A4     	    rep  movsb
 728 ???? 5E       	    pop  esi
 729 ???? A2000000 	    mov  history+11-1, al
 729      00
 730 ???? AD       	    drop
 731 ???? C3       	    ret
 732              	
 733 ???? 8D76FC89 	right: dup_
 733      06
 734 ???? B90B0000 	    mov  ecx, 11
 734      00
 735 ???? 8D3D0000 	    lea  edi, history
 735      0000
 736 ???? 31C0     	    xor  eax, eax
 737 ???? F3AA     	    rep  stosb
 738 ???? AD       	    drop
 739 ???? C3       	    ret
 740              	
 741 ???? 8D76FC89 	down: dup_
 741      06
 742 ???? 31D2     	    xor  edx, edx
 743 ???? B91E0000 	    mov  ecx, ih
 743      00
 744 ???? F7F1     	    div  ecx
 745 ???? 89D0     	    mov  eax, edx
 746 ???? 81C2E57F 	    add  edx, 3*0x10000+0x8000-ih+3
 746      0300
 747 ???? 89150000 	    mov  xy, edx
 747      0000
 748 ???? 85C0     	zero: test eax, eax
 749 ???? B8000000 	    mov  eax, 0
 749      00
 750 ???? 7501     	    jnz  0f
 751 ???? 40       	    inc  eax
 752 ???? C3       	0:  ret
 753              	
 754 ???? 8D76FC89 	blank: dup_
 754      06
 755 ???? 31C0     	    xor  eax, eax
 756 ???? A3000000 	    mov  xy, eax
 756      00
 757 ???? E88BFDFF 	    call color
 757      FF
 758 ???? 8D76FC89 	    dup_
 758      06
 759 ???? B8000400 	    mov  eax, hp
 759      00
 760 ???? 8D76FC89 	    dup_
 760      06
 761 ???? B8000300 	    mov  eax, vp
 761      00
 762 ???? E9CCFEFF 	    jmp  box
 762      FF
 763              	
 764 ???? 8B0D0000 	top: mov  ecx, lm
 764      0000
 765 ???? C1E110   	    shl  ecx, 16
 766 ???? 83C103   	    add  ecx, 3
 767 ???? 890D0000 	    mov  xy, ecx
 767      0000
 768 ???? 890D0000 	    mov  xycr, ecx
 768      0000
 769 ???? C3       	    ret
 770              	
 771              	;# insert a carriage return if at end of line
 772 ???? 668B0D00 	qcr: mov  cx, word ptr xy+2
 772      000000
 773 ???? 663B0D00 	    cmp  cx, word ptr rm
 773      000000
 774 ???? 7819     	    js   0f
 775              	;# insert a carriage return (drop to next line)
 776 ???? 8B0D0000 	cr: mov  ecx, lm
 776      0000
 777 ???? C1E110   	    shl  ecx, 16
 778 ???? 668B0D00 	    mov  cx, word ptr xy
 778      000000
 779 ???? 83C11E   	    add  ecx, ih
 780 ???? 890D0000 	    mov  xy, ecx
 780      0000
 781 ???? C3       	0:  ret
 782              	
 783 ???? A3000000 	lms: mov  lm, eax
 783      00
 784 ???? AD       	    drop
 785 ???? C3       	    ret
 786              	
 787 ???? A3000000 	rms: mov  rm, eax
 787      00
 788 ???? AD       	    drop
 789 ???? C3       	    ret
 790              	
 791 ???? 66A30000 	at: mov  word ptr xy, ax
 791      0000
 792 ???? AD       	    drop
 793 ???? 66A30000 	    mov  word ptr xy+2, ax
 793      0000
 794 ???? AD       	    drop
 795 ???? C3       	    ret
 796              	
 797 ???? 66010500 	pat: add  word ptr xy, ax
 797      000000
 798 ???? AD       	    drop
 799 ???? 66010500 	    add  word ptr xy+2, ax
 799      000000
 800 ???? AD       	    drop
 801 ???? C3       	    ret
 802              	
 803 ???? 8D76FC89 	octant: dup_
 803      06
 804 ???? B8430000 	    mov  eax, 0x43 ;# poly -last y+ x+ ;0x23 ; last y+ x+
 804      00
 805 ???? 8B5604   	    mov  edx, [4+esi]
 806 ???? 85D2     	    test edx, edx
 807 ???? 7907     	    jns  0f
 808 ???? F7DA     	    neg  edx
 809 ???? 895604   	    mov  [4+esi], edx
 810 ???? 3401     	    xor  al, 1
 811 ???? 3B16     	0:  cmp  edx, [esi]
 812 ???? 7902     	    jns  0f
 813 ???? 3404     	    xor  al, 4
 814 ???? C3       	0:  ret
 815              	
 816              	;# keyboard
 817              	;# display one line of the onscreen keyboard (eight icons)
 818              	;# four chars at addr+12, space, four chars at addr.
 819              	;# IN: edi = addr-4
 820              	;# OUT: edi = addr
 821 ???? 83C70C   	eight: add  edi, 12
 822 ???? E8080000 	    call four
 822      00
 823 ???? E8ADFDFF 	    call space
 823      FF
 824 ???? 83EF10   	    sub  edi, 16
 825 ???? B9040000 	four: mov  ecx, 4
 825      00
 826              	;# display ECX chars from EDI+4, incrementing EDI with each char.
 827 ???? 51       	four1: push ecx
 828 ???? 8D76FC89 	    dup_
 828      06
 829 ???? 31C0     	    xor  eax, eax
 830 ???? 8A4704   	    mov  al, [4+edi]
 831 ???? 47       	    inc  edi
 832 ???? E85FFDFF 	    call emit
 832      FF
 833 ???? 59       	    pop  ecx
 834 ???? 4975EB   	    next four1
 835 ???? C3       	    ret
 836              	
 837 ???? BF44F409 	stack: mov  edi, godd-4
 837      00
 838 ???? 8B150000 	0:  mov  edx, god
 838      0000
 839 ???? 393A     	    cmp  [edx], edi
 840 ???? 7311     	    jnc  0f
 841 ???? 8D76FC89 	    dup_
 841      06
 842 ???? 8B07     	    mov  eax, [edi]
 843 ???? 83EF04   	    sub  edi, 4
 844 ???? E8CA0400 	    call qdot
 844      00
 845 ???? EBE5     	    jmp  0b
 846 ???? C3       	0:  ret
 847              	
 848 ???? E8AFFDFF 	keyboard: call text1
 848      FF
 849 ???? 8B3D0000 	    mov  edi, board
 849      0000
 850 ???? 8D76FC89 	    dup_
 850      06
 851 ???? A1000000 	    mov  eax, keyc
 851      00
 852 ???? E87CFCFF 	    call color
 852      FF
 853 ???? C7050000 	    mov dword ptr  rm, hc*iw
 853      0000F403 
 853      0000
 854 ???? C7050000 	    mov dword ptr  lm, hp-9*iw+3
 854      00003D03 
 854      0000
 855 ???? C7050000 	    mov dword ptr  xy, (hp-9*iw+3)*0x10000+vp-4*ih+3
 855      00008B02 
 855      3D03
 856 ???? E877FFFF 	    call eight
 856      FF
 857 ???? E872FFFF 	    call eight
 857      FF
 858 ???? E86DFFFF 	    call eight
 858      FF
 859 ???? E801FFFF 	    call cr
 859      FF
 860 ???? 81050000 	    add dword ptr  xy, 4*iw*0x10000
 860      00000000 
 860      5800
 861 ???? 8B3D0000 	    mov  edi, shift
 861      0000
 862 ???? 83C70C   	    add  edi, 4*4-4
 863 ???? B9030000 	    mov  ecx, 3
 863      00
 864 ???? E860FFFF 	    call four1
 864      FF
 865 ???? C7050000 	    mov dword ptr  lm, 3
 865      00000300 
 865      0000
 866 ???? 66C70500 	    mov  word ptr xy+2, 3
 866      00000003 
 866      00
 867 ???? E85EFFFF 	    call stack
 867      FF
 868 ???? 66C70500 	    mov  word ptr xy+2, hp-(11+9)*iw+3
 868      0000004B 
 868      02
 869 ???? 8D3D0000 	    lea  edi, history-4
 869      0000
 870 ???? B90B0000 	    mov  ecx, 11
 870      00
 871 ???? E92FFFFF 	    jmp  four1
 871      FF
 872              	
 873 ???? 0D0A010C 	alpha: .byte 015, 012,  1 , 014
 874 ???? 14020608 	    .byte 024,  2 ,  6 , 010
 875 ???? 13090F11 	    .byte 023, 011, 017, 021
 876 ???? 120B0E07 	    .byte 022, 013, 016,  7
 877 ???? 05030416 	    .byte  5 ,  3 ,  4 , 026
 878 ???? 17241510 	    .byte 027, 044, 025, 020
 879 ???? 191A1B00 	graphics: .byte 031, 032, 033, 0 ;# 1 2 3
 880 ???? 1C1D1E18 	    .byte 034, 035, 036, 030 ;# 4 5 6 0
 881 ???? 1F20212F 	    .byte 037, 040, 041, 057 ;# 7 8 9 ?
 882 ???? 29282A2C 	    .byte 051, 050, 052, 054 ;# : ; ! @
 883 ???? 2622252E 	    .byte 046, 042, 045, 056 ;# z j . ,
 884 ???? 2D272B23 	    .byte 055, 047, 053, 043 ;# * / + -
 885 ???? 191A1B00 	numbers: .byte 031, 032, 033, 0 ;# 1 2 3
 886 ???? 1C1D1E18 	    .byte 034, 035, 036, 030 ;# 4 5 6 0
 887 ???? 1F202100 	    .byte 037, 040, 041,  0  ;# 7 8 9 ?
 888 ???? 00000000 	    .byte  0,   0 ,  0 ,  0
 889 ???? 00000000 	    .byte  0,   0 ,  0 ,  0
 890 ???? 00000000 	    .byte  0,   0 ,  0 ,  0
 891 ???? 191A1B00 	octals: .byte 031, 032, 033, 0 ;# 1 2 3
 892 ???? 1C1D1E18 	    .byte 034, 035, 036, 030 ;# 4 5 6 0
 893 ???? 1F202100 	    .byte 037, 040, 041,  0  ;# 7 8 9
 894 ???? 0005130A 	    .byte  0 ,  5 , 023, 012
 895 ???? 0010040E 	    .byte  0 , 020,  4 , 016
 896 ???? 00000000 	    .byte  0 ,  0 ,  0 ,  0
 897              	letter:
 898 ???? 3C04     	    cmp  al, 4
 899 ???? 7809     	    js   0f
 900 ???? 8B150000 	    mov  edx, board
 900      0000
 901 ???? 8A0402   	    mov  al, [edx][eax]
 902 ???? C3       	0:  ret
 903              	
 904 ???? 10111213 	keys: .byte 16, 17, 18, 19,  0,  0,  4,  5 ;# 20
 904      00000405 
 905 ???? 06070000 	    .byte  6,  7,  0,  0,  0,  0, 20, 21
 905      00001415 
 906 ???? 16170000 	    .byte 22, 23,  0,  0,  8,  9, 10, 11 ;# 40
 906      08090A0B 
 907 ???? 00000000 	    .byte  0,  0,  0,  0, 24, 25, 26, 27
 907      18191A1B 
 908 ???? 00010C0D 	    .byte  0,  1, 12, 13, 14, 15,  0,  0 ;# 60 n
 908      0E0F0000 
 909 ???? 0302     	    .byte  3,  2 ;# alt space
 910              	
 911              	key: ;# loop forever, returning keyhits when available
 912              	/* the original CM2001 version uses this as the multitasking loop,
 913              	/* by calling 'pause' each time through the loop. this is what enables
 914              	/* the constant screen refresh, which causes significant delays in
 915              	/* keystroke processing under Bochs. */
 916 ???? 8D76FC89 	    dup_             ;# save copy of return stack pointer(?)
 916      06
 917 ???? 31C0     	    xor  eax, eax    ;# used as index later, so clear it
 918 ???? E858DFFF 	0:  call pause       ;# give other task a chance to run
 918      FF
 919 ???? E464     	    in   al, 0x64    ;# keyboard status port
 920 ???? A801     	    test al, 1       ;# see if there is a byte waiting
 921 ???? 74F5     	    jz   0b          ;# if not, loop
 922 ???? E460     	    in   al, 0x60    ;# fetch the scancode
 923 ???? A8F0     	    test al, 0xf0    ;# top row of keyboard generates scancodes < 0x10
 924 ???? 74EF     	    jz   0b          ;# we don't use that row (the numbers row), so ignore it
 925 ???? 3C3A     	    cmp  al, 58      ;# 57, right shift, is the highest scancode we use
 926 ???? 73EB     	    jnc  0b          ;# so if it's over, ignore that too
 927              	    /* since we're ignoring scancodes less than 0x10, we subtract that
 928              	    /* before indexing into the table, that way the table doesn't have
 929              	    /* to have 16 wasted bytes */
 930 ???? 8A800000 	    mov  al, [keys-0x10+eax] ;# index into key table
 930      0000
 931 ???? C3       	    ret
 932              	
 933 ???? 90       	.align 4
 934              	;# layouts for the thumb (shift) keys
 935              	;# these sort of go in pairs:
 936              	;# foo0 is for the first character of a word
 937              	;# foo1 is used for the rest
 938 ???? 00000000 	graph0: .long nul0, nul0, nul0, alph0
 938      00000000 
 938      00000000 
 938      00000000 
 939 ???? 00000500 	    .byte  0 ,  0 ,  5 , 0 ;#     a
 940 ???? 00000000 	graph1: .long word0, x, lj, alph
 940      00000000 
 940      00000000 
 940      00000000 
 941 ???? 15250500 	    .byte 025, 045,  5 , 0 ;# x . a
 942 ???? 00000000 	alpha0: .long nul0, nul0, number, star0
 942      00000000 
 942      00000000 
 942      00000000 
 943 ???? 00212D00 	    .byte  0 , 041, 055, 0 ;#   9 *
 944 ???? 00000000 	alpha1: .long word0, x, lj, graph
 944      00000000 
 944      00000000 
 944      00000000 
 945 ???? 15252D00 	    .byte 025, 045, 055, 0 ;# x . *
 946 ???? 00000000 	numb0: .long nul0, minus, alphn, octal
 946      00000000 
 946      00000000 
 946      00000000 
 947 ???? 23050E00 	    .byte 043,  5 , 016, 0 ;# - a f
 948 ???? 00000000 	numb1: .long number0, xn, endn, number0
 948      00000000 
 948      00000000 
 948      00000000 
 949 ???? 15250000 	    .byte 025, 045,  0 , 0 ;# x .
 950              	
 951 ???? 00000000 	board: .long alpha-4
 952              	.ifdef CM2001
 953              	shift: .long alpha1
 954              	base: .long 10
 955              	current: .long decimal
 956              	keyc: .long yellow
 957              	chars: .long 5
 958              	aword: .long ex1
 959              	anumber: .long nul
 960              	words: .long 0
 961              	.else
 962 ???? 00000000 	shift: .long alpha0
 963 ???? 0A000000 	base: .long 10
 964 ???? 00000000 	current: .long decimal
 965 ???? 00FFFF00 	keyc: .long yellow
 966 ???? 01000000 	chars: .long 1
 967 ???? 00000000 	aword: .long ex1
 968 ???? 00000000 	anumber: .long nul
 969 ???? 01000000 	words: .long 1
 970              	.endif
 971              	
 972 ???? AD       	nul0: drop
 973 ???? EB16     	    jmp  0f
 974              	accept:
 975 ???? C7050000 	acceptn: mov dword ptr  shift, offset alpha0
 975      00000000 
 975      0000
 976 ???? 8D3D0000 	    lea  edi, alpha-4
 976      0000
 977 ???? 893D0000 	accept1: mov  board, edi
 977      0000
 978 ???? E822FFFF 	0:  call key
 978      FF
 979 ???? 3C04     	    cmp  al, 4
 980 ???? 0F891B02 	    jns  first
 980      0000
 981 ???? 8B150000 	    mov  edx, shift
 981      0000
 982 ???? FF2482   	    jmp  dword ptr [edx+eax*4]
 983              	
 984              	bits: ;# number of bits available in word for packing more Huffman codes
 985              	.ifdef CM2001
 986              	   .byte 7 ;# matches CM2001 color.com binary
 987              	.else
 988 ???? 1C       	   .byte 28
 989              	.endif
 990              	/* for reference, Huffman codes are in groups of 8, the prefixes being:
 991              	  0xxx, 10xxx, 1100xxx, 1101xxx, 1110xxx, 1111xxx
 992              	  "pack" packs one letter (character code at a time, 
 993              	  into a Huffman-coded word at [ESI] (stack item) */
 994 ???? 83C050   	0:  add  eax, 0b01010000 ;# make 0b00010000 into 0b01100000, high 2 bits set
 995 ???? B107     	    mov  cl, 7 ;# this is a 7-bit Huffman code
 996 ???? EB0D     	    jmp  0f ;# continue below
 997 ???? 3C10     	pack: cmp  al, 0b00010000 ;# character code greater than 16?
 998 ???? 73F5     	    jnc  0b ;# if so, it's a 7-bitter, see above
 999 ???? B104     	    mov  cl, 4 ;# otherwise assume it's a 4-bit code
 1000 ???? A808     	    test al, 0b00001000 ;# character code more than 7?
 1001 ???? 7403     	    jz   0f ;# if so, it's a 5-bit Huffman code
 1002 ???? 41       	    inc  ecx ;# make the 4 into a 5
 1003 ???? 3418     	    xor  al, 0b00011000 ;# and change prefix to 10xxx
 1004              	;# common entry point for 4, 5, and 7-bit Huffman codes
 1005 ???? 89C2     	0:  mov  edx, eax ;# copy Huffman code into EDX
 1006 ???? 88CD     	    mov  ch, cl ;# copy Huffman-code bitcount into 8-bit CH register
 1007 ???? 380D0000 	0:  cmp  bits, cl ;# do we have enough bits left in the word?
 1007      0000
 1008 ???? 7308     	    jnc  0f  ;# if so, continue on
 1009 ???? D0E8     	    shr  al, 1 ;# low bit of character code set?
 1010 ???? 7222     	    jc   full ;# if so, word is full, need to start an extension word instead
 1011 ???? FEC9     	    dec  cl  ;# subtract one from bitcount
 1012 ???? EBF0     	    jmp  0b ;# keep going; as long as we don't find any set bits, it'll fit
 1013 ???? D326     	0:  shl  dword ptr [esi], cl ;# shift over just the amount of bits necessary
 1014 ???? 3106     	    xor  [esi], eax ;# 'or' or 'add' would have worked as well (and clearer?)
 1015 ???? 280D0000 	    sub  bits, cl ;# reduce remaining bitcount by what we just used
 1015      0000
 1016 ???? C3       	    ret
 1017              	
 1018              	;# left-justification routine packs Huffman codes into the MSBs of the word
 1019 ???? 8A0D0000 	lj0: mov  cl, bits ;# bits remaining into CL register
 1019      0000
 1020 ???? 80C104   	    add  cl, 4 ;# add to that the 4 reserved bits for type tag
 1021 ???? D326     	    shl  dword ptr [esi], cl ;# shift packed word into MSBs
 1022 ???? C3       	    ret
 1023              	
 1024              	;# this is just the high-level entry point to the above routine
 1025 ???? E8EFFFFF 	lj: call lj0
 1025      FF
 1026 ???? AD       	    drop
 1027 ???? C3       	    ret
 1028              	
 1029              	;# the packed word is full, so finish processing
 1030 ???? E8E8FFFF 	full: call lj0 ;# left-justify the packed word
 1030      FF
 1031 ???? FF050000 	    inc dword ptr words ;# bump the count
 1031      0000
 1032 ???? C6050000 	    mov byte ptr bits, 32-4 ;# reset bit count, still saving 4 bits for tag
 1032      00001C
 1033              	;# we were processing a character when we found the word full, so add it in
 1034 ???? 282D0000 	    sub  bits, ch ;# subtract saved bitcount of this Huffman code
 1034      0000
 1035 ???? 89D0     	    mov  eax, edx ;# restore top-of-stack with partial packed word
 1036 ???? 8D76FC89 	    dup_
 1036      06
 1037 ???? C3       	    ret
 1038              	
 1039 ???? E830FCFF 	x:  call right
 1039      FF
 1040 ???? A1000000 	    mov  eax, words
 1040      00
 1041 ???? 8D3486   	    lea  esi, [eax*4+esi]
 1042 ???? AD       	    drop
 1043 ???? E95AFFFF 	    jmp  accept
 1043      FF
 1044              	
 1045 ???? E81DFCFF 	word_: call right
 1045      FF
 1046 ???? C7050000 	    mov dword ptr  words, 1
 1046      00000100 
 1046      0000
 1047 ???? C7050000 	    mov dword ptr  chars, 1
 1047      00000100 
 1047      0000
 1048 ???? 8D76FC89 	    dup_
 1048      06
 1049 ???? C7060000 	    mov  dword ptr [esi], 0
 1049      0000
 1050 ???? C6050000 	    mov byte ptr bits, 28
 1050      00001C
 1051 ???? E82FFEFF 	word1: call letter
 1051      FF
 1052 ???? 7909     	    jns  0f
 1053 ???? 8B150000 	    mov  edx, shift
 1053      0000
 1054 ???? FF2482   	    jmp  dword ptr [edx+eax*4]
 1055 ???? 84C0     	0:  test al, al
 1056 ???? 7415     	    jz   word0
 1057 ???? 8D76FC89 	    dup_
 1057      06
 1058 ???? E8C0FBFF 	    call echo_
 1058      FF
 1059 ???? E840FFFF 	    call pack
 1059      FF
 1060 ???? FF050000 	    inc dword ptr  chars
 1060      0000
 1061 ???? AD       	word0: drop
 1062 ???? E83DFEFF 	    call key
 1062      FF
 1063 ???? EBCF     	    jmp  word1
 1064              	
 1065 ???? C7050000 	decimal: mov dword ptr  base, 10
 1065      00000A00 
 1065      0000
 1066 ???? C7050000 	    mov dword ptr  shift, offset numb0
 1066      00000000 
 1066      0000
 1067 ???? C7050000 	    mov dword ptr  board, offset numbers-4
 1067      00000000 
 1067      0000
 1068 ???? C3       	    ret
 1069              	
 1070 ???? C7050000 	hex: mov dword ptr  base, 16
 1070      00001000 
 1070      0000
 1071 ???? C7050000 	    mov dword ptr  shift, offset numb0 ;# oct0
 1071      00000000 
 1071      0000
 1072 ???? C7050000 	    mov dword ptr  board, offset octals-4
 1072      00000000 
 1072      0000
 1073 ???? C3       	    ret
 1074              	
 1075 ???? 81350000 	octal: xor dword ptr current, (offset decimal-offset start) ^ (offset hex-offset start)
 1075      00002100 
 1075      0000
 1076 ???? 80350000 	    xor  byte ptr numb0+18, 041 ^ 016 ;# f vs 9
 1076      00002F
 1077 ???? FF150000 	    call [current]
 1077      0000
 1078 ???? EB2D     	    jmp  number0
 1079              	
 1080 ???? AD       	xn: drop
 1081 ???? AD       	    drop
 1082 ???? E9A0FEFF 	    jmp  acceptn
 1082      FF
 1083              	
 1084 ???? 0E0A0000 	digit: .byte 14, 10,  0,  0
 1085 ???? 00000C00 	    .byte  0,  0, 12,  0,  0,  0, 15,  0
 1085      00000F00 
 1086 ???? 0D00000B 	    .byte 13,  0,  0, 11,  0,  0,  0,  0
 1086      00000000 
 1087 ???? 00010203 	    .byte  0,  1,  2,  3,  4,  5,  6,  7
 1087      04050607 
 1088 ???? 0809     	    .byte  8,  9
 1089 ???? 00       	sign: .byte 0
 1090              	minus:
 1091 ???? A2000000 	    mov  sign, al
 1091      00
 1092 ???? EB49     	    jmp  number2
 1093              	
 1094 ???? AD       	number0: drop
 1095 ???? EB0F     	    jmp  number3
 1096 ???? FF150000 	number: call [current]
 1096      0000
 1097 ???? C6050000 	    mov byte ptr sign, 0
 1097      000000
 1098 ???? 31C0     	    xor  eax, eax
 1099 ???? E8A0FDFF 	number3: call key
 1099      FF
 1100 ???? E863FDFF 	    call letter
 1100      FF
 1101 ???? 7909     	    jns  0f
 1102 ???? 8B150000 	    mov  edx, shift
 1102      0000
 1103 ???? FF2482   	    jmp  dword ptr [edx+eax*4]
 1104 ???? 84C0     	0:  test al, al
 1105 ???? 74D5     	    jz   number0
 1106 ???? 8A800000 	    mov  al, [digit-4+eax]
 1106      0000
 1107 ???? F6050000 	    test byte ptr sign, 037
 1107      00001F
 1108 ???? 7402     	    jz   0f
 1109 ???? F7D8     	    neg  eax
 1110 ???? 8B16     	0:  mov  edx, [esi]
 1111 ???? 0FAF1500 	    imul edx, base
 1111      000000
 1112 ???? 01C2     	    add  edx, eax
 1113 ???? 8916     	0:  mov  [esi], edx
 1114 ???? AD       	number2: drop
 1115 ???? C7050000 	    mov  dword ptr  shift, offset numb1
 1115      00000000 
 1115      0000
 1116 ???? EBBC     	    jmp  number3
 1117              	
 1118 ???? AD       	endn: drop
 1119 ???? FF150000 	    call [anumber]
 1119      0000
 1120 ???? E918FEFF 	    jmp  acceptn
 1120      FF
 1121              	
 1122 ???? AD       	alphn: drop
 1123 ???? C7050000 	alph0: mov dword ptr  shift, offset alpha0
 1123      00000000 
 1123      0000
 1124 ???? 8D3D0000 	    lea  edi, alpha-4
 1124      0000
 1125 ???? EB10     	    jmp  0f
 1126 ???? C7050000 	star0: mov dword ptr  shift, offset graph0
 1126      00000000 
 1126      0000
 1127 ???? 8D3D0000 	    lea  edi, graphics-4
 1127      0000
 1128 ???? AD       	0:  drop
 1129 ???? E9FFFDFF 	    jmp  accept1
 1129      FF
 1130              	
 1131 ???? C7050000 	alph: mov dword ptr  shift, offset alpha1
 1131      00000000 
 1131      0000
 1132              	    /* variable 'board' holds a pointer to the keyboard currently in use:
 1133              	    /* alphabetic, numeric, graphic, etc.
 1134              	    /* since valid key codes start at 1, subtract length of 1 address
 1135              	    /* (4 bytes) from the start of the table into which we index */
 1136 ???? 8D3D0000 	    lea  edi, alpha-4
 1136      0000
 1137 ???? EB10     	    jmp  0f
 1138 ???? C7050000 	graph: mov dword ptr shift, offset graph1
 1138      00000000 
 1138      0000
 1139 ???? 8D3D0000 	    lea  edi, graphics-4
 1139      0000
 1140 ???? 893D0000 	0:  mov  board, edi
 1140      0000
 1141 ???? E9BCFEFF 	    jmp  word0
 1141      FF
 1142              	
 1143 ???? 83050000 	first: add dword ptr shift, 4*4+4
 1143      000014
 1144 ???? E85CFEFF 	    call word_
 1144      FF
 1145 ???? FF150000 	    call [aword]
 1145      0000
 1146 ???? E9ABFDFF 	    jmp  accept
 1146      FF
 1147              	
 1148 ???? 18191A1B 	hicon: .byte 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f
 1148      1C1D1E1F 
 1149 ???? 20210513 	    .byte 0x20, 0x21,  5 , 0x13, 0xa, 0x10,  4 , 0xe
 1149      0A10040E 
 1150 ???? 8D76FC89 	edig1: dup_
 1150      06
 1151 ???? 51       	edig: push ecx
 1152 ???? 8A800000 	    mov  al, hicon[eax]
 1152      0000
 1153 ???? E8CEF8FF 	    call emit
 1153      FF
 1154 ???? 59       	    pop  ecx
 1155 ???? C3       	    ret
 1156              	
 1157 ???? C1C004   	odig: rol  eax, 4
 1158 ???? 8D76FC89 	    dup_
 1158      06
 1159 ???? 83E00F   	    and  eax, 0x0f
 1160 ???? C3       	    ret
 1161              	
 1162 ???? 89C2     	hdotn: mov  edx, eax
 1163 ???? F7D8     	    neg  eax
 1164 ???? 8D0C8520 	    lea  ecx, [32+eax*4]
 1164      000000
 1165 ???? AD       	    drop
 1166 ???? D3C0     	    rol  eax, cl
 1167 ???? 89D1     	    mov  ecx, edx
 1168 ???? EB05     	    jmp  0f
 1169 ???? B9080000 	hdot: mov  ecx, 8
 1169      00
 1170 ???? E8D8FFFF 	0:  call odig
 1170      FF
 1171 ???? E8C5FFFF 	    call edig
 1171      FF
 1172 ???? 4975F3   	    next 0b
 1173 ???? AD       	    drop
 1174 ???? C3       	    ret
 1175              	
 1176              	/* '.', 'dot' is the original Forth 'word' for
 1177              	/* displaying a number off the stack */
 1178 ???? B9070000 	dot: mov  ecx, 7
 1178      00
 1179 ???? E8C4FFFF 	0:  call odig
 1179      FF
 1180 ???? 7519     	    jnz  Lh  ;# local symbol syntax changed from @ to L
 1181 ???? AD       	    drop
 1182 ???? 4975F5   	    next 0b
 1183 ???? 41       	    inc  ecx
 1184 ???? E8B8FFFF 	0:  call odig
 1184      FF
 1185 ???? E8A5FFFF 	Lh1: call edig
 1185      FF
 1186 ???? 4975F3   	    next 0b
 1187 ???? E8ACF8FF 	    call space
 1187      FF
 1188 ???? AD       	    drop
 1189 ???? C3       	    ret
 1190 ???? 41       	Lh: inc  ecx
 1191 ???? EBEE     	    jmp  Lh1
 1192              	
 1193 ???? 833D0000 	qdot: cmp dword ptr  base, 10
 1193      00000A
 1194 ???? 75CF     	    jnz  dot
 1195 ???? 89C2     	dot10: mov  edx, eax
 1196 ???? 85D2     	    test edx, edx
 1197 ???? 7911     	    jns  0f
 1198 ???? F7DA     	    neg  edx
 1199 ???? 8D76FC89 	    dup_
 1199      06
 1200 ???? B8230000 	    mov  eax, 043
 1200      00
 1201 ???? E852F8FF 	    call emit
 1201      FF
 1202 ???? B9080000 	0:  mov  ecx, 8
 1202      00
 1203 ???? 89D0     	0:  mov  eax, edx
 1204 ???? 31D2     	    xor  edx, edx
 1205 ???? F7348D00 	    div dword ptr  tens[ecx*4]
 1205      000000
 1206 ???? 85C0     	    test eax, eax
 1207 ???? 7510     	    jnz  d_1
 1208 ???? 49       	    dec  ecx
 1209 ???? 79EE     	    jns  0b
 1210 ???? EB13     	    jmp  d_2
 1211 ???? 89D0     	0:  mov  eax, edx
 1212 ???? 31D2     	    xor  edx, edx
 1213 ???? F7348D00 	    div dword ptr  tens[ecx*4]
 1213      000000
 1214 ???? E84AFFFF 	d_1: call edig1
 1214      FF
 1215 ???? 49       	    dec  ecx
 1216 ???? 79ED     	    jns  0b
 1217 ???? 89D0     	d_2: mov  eax, edx
 1218 ???? E840FFFF 	    call edig1
 1218      FF
 1219 ???? E84FF8FF 	    call space ;# spcr
 1219      FF
 1220 ???? AD       	    drop
 1221 ???? C3       	    ret
 1222              	
 1223              	/* unpack the Huffman-coded characters in a 32-bit word */
 1224 ???? 8D76FC89 	unpack: dup_
 1224      06
 1225 ???? 85C0     	    test eax, eax
 1226 ???? 780A     	    js   0f
 1227 ???? C12604   	    shl  dword ptr [esi], 4
 1228 ???? C1C004   	    rol  eax, 4
 1229 ???? 83E007   	    and  eax, 7
 1230 ???? C3       	    ret
 1231 ???? D1E0     	0:  shl  eax, 1
 1232 ???? 780C     	    js   0f
 1233 ???? C12605   	    shl  dword ptr [esi], 5
 1234 ???? C1C004   	    rol  eax, 4
 1235 ???? 83E007   	    and  eax, 7
 1236 ???? 3408     	    xor  al, 0x8
 1237 ???? C3       	    ret
 1238 ???? C12607   	0:  shl  dword ptr [esi], 7
 1239 ???? C1C006   	    rol  eax, 6
 1240 ???? 83E03F   	    and  eax, 0x3f
 1241 ???? 2C10     	    sub  al, 0x10
 1242 ???? C3       	    ret
 1243              	
 1244 ???? 8D76FC89 	qring: dup_
 1244      06
 1245 ???? FF06     	    inc  dword ptr [esi]
 1246 ???? 393D0000 	    cmp  curs, edi ;# from abort, insert
 1246      0000
 1247 ???? 7505     	    jnz  0f
 1248 ???? A3000000 	    mov  curs, eax
 1248      00
 1249 ???? 3B050000 	0:  cmp  eax, curs
 1249      0000
 1250 ???? 740A     	    jz   ring
 1251 ???? 7906     	    jns  0f
 1252 ???? 893D0000 	    mov  pcad, edi
 1252      0000
 1253 ???? AD       	0:  drop
 1254 ???? C3       	    ret
 1255              	
 1256              	ring:
 1257 ???? 893D0000 	    mov  cad, edi
 1257      0000
 1258 ???? 812D0000 	    sub dword ptr xy, iw*0x10000 ;# bksp
 1258      00000000 
 1258      1600
 1259 ???? 8D76FC89 	    dup_
 1259      06
 1260 ???? B80040E0 	    mov  eax, 0x0e04000 ;# ochre-colored cursor
 1260      00
 1261 ???? E801F7FF 	    call color
 1261      FF
 1262 ???? B8300000 	    mov  eax, 060
 1262      00
 1263 ???? 668B0D00 	    mov  cx, word ptr xy+2
 1263      000000
 1264 ???? 663B0D00 	    cmp  cx, word ptr rm
 1264      000000
 1265 ???? 7810     	    js   0f
 1266 ???? E88AF7FF 	    call emit
 1266      FF
 1267 ???? 812D0000 	    sub dword ptr xy, iw*0x10000 ;# bksp
 1267      00000000 
 1267      1600
 1268 ???? C3       	    ret
 1269 ???? E97AF7FF 	0:  jmp  emit
 1269      FF
 1270              	
 1271 ???? 668B0D00 	rw: mov  cx, word ptr xy+2
 1271      000000
 1272 ???? 663B0D00 	    cmp  cx, word ptr lm
 1272      000000
 1273 ???? 7405     	    jz   0f
 1274 ???? E879F9FF 	    call cr
 1274      FF
 1275 ???? E8A2F8FF 	0:  call red
 1275      FF
 1276 ???? E99F0000 	    jmp  type_
 1276      00
 1277              	
 1278 ???? E8A7F8FF 	gw: call green
 1278      FF
 1279 ???? E9950000 	    jmp  type_
 1279      00
 1280 ???? E852F8FF 	mw: call cyan
 1280      FF
 1281 ???? E98B0000 	    jmp  type_
 1281      00
 1282 ???? 8D76FC89 	ww: dup_
 1282      06
 1283 ???? B800FFFF 	    mov  eax, yellow
 1283      00
 1284 ???? E895F6FF 	    call color
 1284      FF
 1285 ???? EB7A     	    jmp  type_
 1286              	
 1287              	type0: ;# display continuation of previous word
 1288 ???? 812D0000 	    sub  dword ptr xy, iw*0x10000 ;# call bspcr
 1288      00000000 
 1288      1600
 1289 ???? F704BDFC 	    test dword ptr [-4+edi*4], 0xfffffff0 ;# valid packed word?
 1289      FFFFFFF0 
 1289      FFFFFF
 1290 ???? 7563     	    jnz  type1
 1291 ???? 4F       	    dec  edi
 1292 ???? 893D0000 	    mov  lcad, edi
 1292      0000
 1293 ???? E848F7FF 	    call space
 1293      FF
 1294 ???? E825FFFF 	    call qring
 1294      FF
 1295 ???? 5A       	    pop  edx ;# .end of block
 1296 ???? AD       	    drop
 1297 ???? E9CEF9FF 	    jmp  keyboard
 1297      FF
 1298              	
 1299              	cap: ;# display a capitalized comment word
 1300 ???? E855F6FF 	    call white
 1300      FF
 1301 ???? 8D76FC89 	    dup_
 1301      06
 1302 ???? 8B04BDFC 	    mov  eax, [-4+edi*4]
 1302      FFFFFF
 1303 ???? 83E0F0   	    and  eax, 0xfffffff0 ;# mask out tag bits
 1304 ???? E8D6FEFF 	    call unpack
 1304      FF
 1305 ???? 0430     	    add  al, 48
 1306 ???? E8E7F6FF 	    call emit
 1306      FF
 1307 ???? EB38     	    jmp  type2
 1308              	
 1309              	caps: ;# display an all-caps comment word
 1310 ???? E833F6FF 	    call white
 1310      FF
 1311 ???? 8D76FC89 	    dup_
 1311      06
 1312 ???? 8B04BDFC 	    mov  eax, [-4+edi*4]
 1312      FFFFFF
 1313 ???? 83E0F0   	    and  eax, 0xfffffff0 ;# mask out tag bits
 1314 ???? E8B4FEFF 	0:  call unpack
 1314      FF
 1315 ???? 742B     	    jz   0f ;# space if it unpacked to nothing
 1316 ???? 0430     	    add  al, 48
 1317 ???? E8C3F6FF 	    call emit
 1317      FF
 1318 ???? EBF0     	    jmp  0b
 1319              	
 1320 ???? E80FF6FF 	text: call white
 1320      FF
 1321              	type_:
 1322 ???? 8D76FC89 	type1: dup_
 1322      06
 1323 ???? 8B04BDFC 	    mov  eax, [-4+edi*4]
 1323      FFFFFF
 1324 ???? 83E0F0   	    and  eax, 0xfffffff0 ;# mask out tag bits
 1325 ???? E890FEFF 	type2: call unpack
 1325      FF
 1326 ???? 7407     	    jz   0f
 1327 ???? E8A1F6FF 	    call emit
 1327      FF
 1328 ???? EBF2     	    jmp  type2
 1329 ???? E8CFF6FF 	0:  call space
 1329      FF
 1330 ???? AD       	    drop
 1331 ???? AD       	    drop
 1332 ???? C3       	    ret
 1333              	
 1334              	;# green (compiled) short (27 bits) word
 1335 ???? 8B14BDFC 	gsw: mov  edx, [-4+edi*4]
 1335      FFFFFF
 1336 ???? C1FA05   	    sar  edx, 5 ;# shift into position
 1337 ???? EB12     	    jmp  gnw1
 1338              	
 1339              	var: ;# within editor, display a variable name
 1340 ???? E89BF7FF 	    call magenta
 1340      FF
 1341 ???? E8C5FFFF 	    call type_
 1341      FF
 1342              	;# fall through to next routine to display its value
 1343              	;# green (compiled) normal (32 bits) word
 1344 ???? 8B14BD00 	gnw: mov  edx, [edi*4]
 1344      000000
 1345 ???? 47       	    inc  edi
 1346 ???? 8D76FC89 	gnw1: dup_
 1346      06
 1347 ???? B800F800 	    mov  eax, 0x0f800 ;# green
 1347      00
 1348 ???? 813D0000 	    cmp dword ptr bas, offset dot10 ;# is it base 10?
 1348      00000000 
 1348      0000
 1349 ???? 7436     	    jz   0f ;# bright green if so
 1350 ???? B800C000 	    mov  eax, 0x0c000 ;# else dark green
 1350      00
 1351 ???? EB2F     	    jmp  0f
 1352              	
 1353              	;# short (27 bits) yellow (executable) word
 1354 ???? 8B14BDFC 	sw: mov  edx, [-4+edi*4]
 1354      FFFFFF
 1355 ???? C1FA05   	    sar  edx, 5 ;# shift into position
 1356 ???? EB08     	    jmp  nw1
 1357              	
 1358              	;# normal (32 bits) yellow (executable) word
 1359 ???? 8B14BD00 	nw: mov  edx, [edi*4]
 1359      000000
 1360 ???? 47       	    inc  edi
 1361 ???? 8D76FC89 	nw1: dup_
 1361      06
 1362 ???? B800FFFF 	    mov  eax, yellow
 1362      00
 1363 ???? 813D0000 	    cmp dword ptr bas, offset dot10 ;# is it base 10?
 1363      00000000 
 1363      0000
 1364 ???? 7405     	    jz   0f ;# bright yellow if so
 1365 ???? B800C0C0 	    mov  eax, 0x0c0c000 ;# else dark yellow
 1365      00
 1366 ???? E885F5FF 	0:  call color
 1366      FF
 1367 ???? 8D76FC89 	    dup_
 1367      06
 1368 ???? 89D0     	    mov  eax, edx
 1369 ???? FF250000 	    jmp  [bas]
 1369      0000
 1370              	
 1371 ???? E8B0D9FF 	refresh: call show
 1371      FF
 1372 ???? E8D2F7FF 	    call blank
 1372      FF
 1373 ???? E887F6FF 	    call text1
 1373      FF
 1374 ???? 8D76FC89 	    dup_            ;# counter
 1374      06
 1375 ???? A1000000 	    mov  eax, lcad
 1375      00
 1376 ???? A3000000 	    mov  cad, eax ;# for curs beyond .end
 1376      00
 1377 ???? 31C0     	    xor  eax, eax
 1378 ???? 8B3D0000 	    mov  edi, blk
 1378      0000
 1379 ???? C1E708   	    shl  edi, 10-2
 1380 ???? 893D0000 	    mov  pcad, edi ;# for curs=0
 1380      0000
 1381 ???? F704BD00 	ref1: test dword ptr [edi*4], 0x0f
 1381      0000000F 
 1381      000000
 1382 ???? 7405     	    jz   0f
 1383 ???? E8F1FDFF 	    call qring
 1383      FF
 1384 ???? 8B14BD00 	0:  mov  edx, [edi*4]
 1384      000000
 1385 ???? 47       	    inc  edi
 1386 ???? C7050000 	    mov dword ptr  bas, offset dot10
 1386      00000000 
 1386      0000
 1387 ???? F6C210   	    test dl, 020
 1388 ???? 740A     	    jz   0f
 1389 ???? C7050000 	    mov dword ptr  bas, offset dot
 1389      00000000 
 1389      0000
 1390 ???? 83E20F   	0:  and  edx, 017
 1391 ???? FF149500 	    call display[edx*4]
 1391      000000
 1392 ???? EBC1     	    jmp  ref1
 1393              	
 1394 ???? 6690     	.align 4
 1395 ???? 00000000 	display: .long type0, ww, nw, rw
 1395      00000000 
 1395      00000000 
 1395      00000000 
 1396 ???? 00000000 	    .long gw, gnw, gsw, mw
 1396      00000000 
 1396      00000000 
 1396      00000000 
 1397 ???? 00000000 	    .long sw, text, cap, caps
 1397      00000000 
 1397      00000000 
 1397      00000000 
 1398 ???? 00000000 	    .long var, nul, nul, nul
 1398      00000000 
 1398      00000000 
 1398      00000000 
 1399 ???? 0A000000 	tens: .long 10, 100, 1000, 10000, 100000, 1000000
 1399      64000000 
 1399      E8030000 
 1399      10270000 
 1399      A0860100 
 1399      40420F00 
 1400 ???? 80969800 	    .long 10000000, 100000000, 1000000000
 1400      00E1F505 
 1400      00CA9A3B 
 1401 ???? 00000000 	bas: .long dot10
 1402 ???? 12000000 	blk: .long 18
 1403              	.ifdef CM2001 ;# match CM2001 color.com binary
 1404              	curs: .long 2
 1405              	cad: .long 0x1204
 1406              	pcad: .long 0x1202
 1407              	lcad: .long 0x122c
 1408              	trash: .long buffer*4+12
 1409              	.else
 1410 ???? 00000000 	curs: .long 0
 1411 ???? 00000000 	cad: .long 0
 1412 ???? 00000000 	pcad: .long 0
 1413 ???? 00000000 	lcad: .long 0
 1414 ???? 00700900 	trash: .long buffer*4
 1415              	.endif
 1416              	
 1417              	/* the editor keys and their actions */
 1418              	ekeys:
 1419              	;# delete (cut), exit editor, insert (paste)
 1420 ???? 00000000 	    .long nul, del, eout, destack ;# n<space><alt>
 1420      00000000 
 1420      00000000 
 1420      00000000 
 1421              	;# white (yellow), red, green, to shadow block
 1422 ???? 00000000 	    .long act1, act3, act4, shadow ;# uiop=yrg*
 1422      00000000 
 1422      00000000 
 1422      00000000 
 1423              	;# left, up, down, right
 1424 ???? 00000000 	    .long mcur, mmcur, ppcur, pcur ;# jkl;=ludr
 1424      00000000 
 1424      00000000 
 1424      00000000 
 1425              	;# previous block, magenta (variable), cyan (macro), next block
 1426 ???? 00000000 	    .long mblk, actv, act7, pblk ;# m,./=-mc+
 1426      00000000 
 1426      00000000 
 1426      00000000 
 1427              	;# white (comment) all caps, white (comment) capitalized, white (comment)
 1428 ???? 00000000 	    .long nul, act11, act10, act9 ;# wer=SCt
 1428      00000000 
 1428      00000000 
 1428      00000000 
 1429 ???? 00000000 	    .long nul, nul, nul, nul ;# df=fj (find and jump) not in this version
 1429      00000000 
 1429      00000000 
 1429      00000000 
 1430              	;# these are the huffman encodings of the characters to display
 1431 ???? 00000000 	ekbd0: .long nul, nul, nul, nul
 1431      00000000 
 1431      00000000 
 1431      00000000 
 1432 ???? 15250700 	    .byte 21, 37,  7,  0  ;# x  .  i
 1433              	ekbd:
 1434 ???? 0F010D2D 	    .byte 15,  1, 13, 45  ;# w  r  g  *
 1435 ???? 0C161001 	    .byte 12, 22, 16,  1  ;# l  u  d  r
 1436 ???? 23090A2B 	    .byte 35,  9, 10, 43  ;# -  m  c  +
 1437 ???? 00383A02 	    .byte  0, 56, 58,  2  ;#    S  C  t
 1438 ???? 00000000 	    .byte  0,  0,  0,  0
 1439 ???? 00000000 	    .byte  0,  0,  0,  0
 1440              	;# 1-based array of colors used for various action modes
 1441              	actc:
 1442 ???? 00FFFF00 	    .long yellow, 0, 0x0ff0000, 0x0c000 ;# 1=yellow, 2=none, 3=red, 4=green
 1442      00000000 
 1442      0000FF00 
 1442      00C00000 
 1443 ???? 00000000 	    .long 0, 0, 0x0ffff, 0 ;# 7=cyan
 1443      00000000 
 1443      FFFF0000 
 1443      00000000 
 1444 ???? FFFFFF00 	    .long 0x0ffffff, 0x0ffffff, 0x0ffffff, 0x8080ff ;# 9-11=white, 12=magenta
 1444      FFFFFF00 
 1444      FFFFFF00 
 1444      FF808000 
 1445 ???? 00000000 	vector: .long 0
 1446              	.ifdef CM2001
 1447              	action: .byte 10 ;# matches CM2001 color.com binary
 1448              	.else
 1449 ???? 01       	action: .byte 1
 1450              	.endif
 1451              	
 1452 ???? B001     	act1: mov  al, 1 ;# word execute, yellow
 1453 ???? EB16     	    jmp  0f
 1454 ???? B003     	act3: mov  al, 3 ;# word define, red
 1455 ???? EB12     	    jmp  0f
 1456 ???? B004     	act4: mov  al, 4 ;# word compile, green
 1457 ???? EB0E     	    jmp  0f
 1458 ???? B009     	act9: mov  al, 9 ;# word comment, white
 1459 ???? EB0A     	    jmp  0f
 1460 ???? B00A     	act10: mov  al, 10 ;# word comment, white Capitalized
 1461 ???? EB06     	    jmp  0f
 1462 ???? B00B     	act11: mov  al, 11 ;# word comment, ALL CAPS
 1463 ???? EB02     	    jmp  0f
 1464 ???? B007     	act7: mov  al, 7 ;# macro compile, cyan
 1465 ???? A2000000 	0:  mov  action, al ;# number of action
 1465      00
 1466 ???? 8B048500 	    mov  eax, [actc-4+eax*4] ;# load color corresponding to action
 1466      000000
 1467 ???? C7050000 	    mov dword ptr aword, offset insert ;# "insert" becomes the active word
 1467      00000000 
 1467      0000
 1468              	;# action for number
 1469 ???? A3000000 	actn: mov  keyc, eax
 1469      00
 1470 ???? 58       	    pop  eax
 1471 ???? AD       	    drop
 1472 ???? E9EAF8FF 	    jmp  accept
 1472      FF
 1473              	;# after 'm' pressed, change color and prepare to store variable name
 1474 ???? C6050000 	actv: mov byte ptr action, 12 ;# variable
 1474      00000C
 1475 ???? B8FF00FF 	    mov  eax, 0x0ff00ff ;# magenta
 1475      00
 1476 ???? C7050000 	    mov dword ptr aword, offset 0f
 1476      00000000 
 1476      0000
 1477 ???? EBDC     	    jmp  actn
 1478              	;# this is the action performed after the variable name is entered
 1479 ???? 8D76FC89 	0:  dup_ ;# save EAX (packed word) on stack
 1479      06
 1480 ???? 31C0     	    xor  eax, eax ;# zero out EAX
 1481 ???? FF050000 	    inc  dword ptr words ;# add one to count of words
 1481      0000
 1482 ???? E9840100 	    jmp  insert ;# insert new word into dictionary
 1482      00
 1483              	
 1484 ???? FF0D0000 	mcur: dec dword ptr curs ;# minus cursor: move left
 1484      0000
 1485 ???? 7906     	    jns  0f  ;# just return if it didn't go negative, otherwise undo it...
 1486 ???? FF050000 	pcur: inc dword ptr curs ;# plus cursor: move right
 1486      0000
 1487 ???? C3       	0:  ret
 1488              	
 1489 ???? 832D0000 	mmcur: sub dword ptr curs, 8 ;# move up one row
 1489      000008
 1490 ???? 790A     	    jns  0f  ;# return if it didn't go negative
 1491 ???? C7050000 	    mov dword ptr curs, 0  ;# otherwise set to 0
 1491      00000000 
 1491      0000
 1492 ???? C3       	0:  ret
 1493 ???? 83050000 	ppcur: add dword ptr curs, 8 ;# move down one row
 1493      000008
 1494 ???? C3       	    ret  ;# guess it's ok to increment beyond end of screen (?)
 1495              	
 1496 ???? 83050000 	pblk: add dword ptr  blk, 2 ;# plus one block (+2 since odd are shadows)
 1496      000002
 1497 ???? 830602   	    add  dword ptr [esi], 2
 1498 ???? C3       	    ret
 1499 ???? 833D0000 	mblk: cmp dword ptr  blk, 20 ;# minus one block unless below 20
 1499      000014
 1500 ???? 780A     	    js   0f ;# (18 is first block available for editing)
 1501 ???? 832D0000 	    sub dword ptr  blk, 2
 1501      000002
 1502 ???? 832E02   	    sub  dword ptr [esi], 2
 1503 ???? C3       	0:  ret
 1504              	;# shadow screens in Forth are documentation for corresponding source screens
 1505 ???? 83350000 	shadow: xor dword ptr  blk, 1 ;# switch between shadow and source
 1505      000001
 1506 ???? 833601   	    xor  dword ptr [esi], 1 ;# change odd to even and vice versa
 1507 ???? C3       	    ret
 1508              	
 1509 ???? AD       	e0: drop
 1510 ???? EB30     	    jmp  0f
 1511              	
 1512              	/* colorForth editor */
 1513              	;# when invoked with 'edit', the block number is passed on the stack
 1514 ???? A3000000 	edit: mov  blk, eax
 1514      00
 1515 ???? AD       	    drop
 1516              	;# when invoked with 'e', uses block number in blk, by default 18
 1517 ???? 8D76FC89 	e:  dup_
 1517      06
 1518 ???? A1000000 	    mov  eax, blk
 1518      00
 1519 ???? C7050000 	    mov dword ptr  anumber, offset format
 1519      00000000 
 1519      0000
 1520 ???? C6050000 	    mov  byte ptr alpha0+4*4, 045 ;# .
 1520      000025
 1521 ???? C7050000 	    mov dword ptr alpha0+4, offset e0
 1521      00000000 
 1521      0000
 1522 ???? E861FDFF 	    call refresh
 1522      FF
 1523 ???? C7050000 	0:  mov dword ptr shift, offset ekbd0
 1523      00000000 
 1523      0000
 1524 ???? C7050000 	    mov dword ptr board, offset ekbd-4
 1524      00000000 
 1524      0000
 1525 ???? C7050000 	    mov dword ptr keyc, yellow ;# default key color, yellow
 1525      000000FF 
 1525      FF00
 1526              	;# this is the main loop
 1527 ???? E852F7FF 	0:  call key
 1527      FF
 1528 ???? FF148500 	    call ekeys[eax*4]
 1528      000000
 1529 ???? AD       	    drop
 1530 ???? EBF1     	    jmp  0b
 1531              	
 1532              	/* exit editor */
 1533 ???? 58       	eout: pop  eax
 1534 ???? AD       	    drop
 1535 ???? AD       	    drop
 1536 ???? C7050000 	    mov  dword ptr aword, offset ex1
 1536      00000000 
 1536      0000
 1537 ???? C7050000 	    mov  dword ptr anumber, offset nul
 1537      00000000 
 1537      0000
 1538 ???? C6050000 	    mov  byte ptr alpha0+4*4, 0
 1538      000000
 1539 ???? C7050000 	    mov  dword ptr alpha0+4, offset nul0
 1539      00000000 
 1539      0000
 1540 ???? C7050000 	    mov  dword ptr keyc, yellow ;# restore key color to yellow
 1540      000000FF 
 1540      FF00
 1541 ???? E9D4F7FF 	    jmp  accept ;# revert to command-line processing
 1541      FF
 1542              	
 1543              	/* insert, or paste */
 1544 ???? 8B150000 	destack: mov  edx, trash ;# grab what was left by last "cut" operation
 1544      0000
 1545 ???? 81FA0070 	    cmp  edx, buffer*4 ;# anything in there?
 1545      0900
 1546 ???? 7501     	    jnz  0f ;# continue if so...
 1547 ???? C3       	    ret  ;# otherwise, 'insert' is already the default action so nothing to do
 1548 ???? 83EA08   	0:  sub  edx, 2*4
 1549 ???? 8B4A04   	    mov  ecx, [edx+1*4]
 1550 ???? 890D0000 	    mov  words, ecx
 1550      0000
 1551 ???? 8D76FC89 	0:  dup_
 1551      06
 1552 ???? 8B02     	    mov  eax, [edx]
 1553 ???? 83EA04   	    sub  edx, 1*4
 1554 ???? 4975F3   	    next 0b
 1555 ???? 83C204   	    add  edx, 1*4
 1556 ???? 89150000 	    mov  trash, edx
 1556      0000
 1557              	
 1558 ???? 8B0D0000 	insert0: mov  ecx, lcad  ;# room available?
 1558      0000
 1559 ???? 030D0000 	    add  ecx, words
 1559      0000
 1560 ???? 330D0000 	    xor  ecx, lcad
 1560      0000
 1561 ???? 81E100FF 	    and  ecx, -0x100
 1561      FFFF
 1562 ???? 740B     	    jz   insert1
 1563 ???? 8B0D0000 	    mov  ecx, words ;# no
 1563      0000
 1564 ???? AD       	0:  drop
 1565 ???? 4975FC   	    next 0b
 1566 ???? C3       	    ret
 1567 ???? 56       	insert1: push esi
 1568 ???? 8B350000 	    mov  esi, lcad
 1568      0000
 1569 ???? 89F1     	    mov  ecx, esi
 1570 ???? 4E       	    dec  esi
 1571 ???? 89F7     	    mov  edi, esi
 1572 ???? 033D0000 	    add  edi, words
 1572      0000
 1573 ???? C1E702   	    shl  edi, 2
 1574 ???? 2B0D0000 	    sub  ecx, cad
 1574      0000
 1575 ???? 7807     	    js   0f
 1576 ???? C1E602   	    shl  esi, 2
 1577 ???? FD       	    std
 1578 ???? F3A5     	    rep movsd
 1579 ???? FC       	    cld
 1580 ???? 5E       	0:  pop  esi
 1581 ???? C1EF02   	    shr  edi, 2
 1582 ???? 47       	    inc  edi
 1583 ???? 893D0000 	    mov  curs, edi ;# like abort
 1583      0000
 1584 ???? 8B0D0000 	    mov  ecx, words
 1584      0000
 1585 ???? 4F       	0:  dec  edi
 1586 ???? 8904BD00 	    mov  [edi*4], eax
 1586      000000
 1587 ???? AD       	    drop ;# requires cld
 1588 ???? 4975F4   	    next 0b
 1589 ???? C3       	    ret
 1590              	
 1591 ???? E894FFFF 	insert: call insert0
 1591      FF
 1592 ???? 8A0D0000 	    mov  cl, action
 1592      0000
 1593 ???? 300CBD00 	    xor  [edi*4], cl
 1593      000000
 1594 ???? E925F7FF 	    jmp  accept
 1594      FF
 1595              	
 1596 ???? F6050000 	format: test byte ptr action, 012 ;# ignore 3 and 9
 1596      00000A
 1597 ???? 7402     	    jz   0f
 1598 ???? AD       	    drop
 1599 ???? C3       	    ret
 1600 ???? 89C2     	0:  mov  edx, eax
 1601 ???? 81E20000 	    and  edx, 0x0fc000000
 1601      00FC
 1602 ???? 7408     	    jz   0f
 1603 ???? 81FA0000 	    cmp  edx, 0x0fc000000
 1603      00FC
 1604 ???? 7527     	    jnz  format2
 1605 ???? C1E005   	0:  shl  eax, 5
 1606 ???? 3402     	    xor  al, 2 ;# 6
 1607 ???? 803D0000 	    cmp  byte ptr  action, 4
 1607      000004
 1608 ???? 7402     	    jz   0f
 1609 ???? 340B     	    xor  al, 013 ;# 8
 1610 ???? 833D0000 	0:  cmp  dword ptr base, 10 ;# base 10?
 1610      00000A
 1611 ???? 7402     	    jz   0f ;# continue if so...
 1612 ???? 3410     	    xor  al, 0x10 ;# otherwise remove 'hex' bit
 1613 ???? C7050000 	0:  mov  dword ptr words, 1
 1613      00000100 
 1613      0000
 1614 ???? EBA5     	    jmp  insert
 1615              	
 1616 ???? 8D76FC89 	format2: dup_
 1616      06
 1617 ???? B8010000 	    mov  eax, 1 ;# 5
 1617      00
 1618 ???? 803D0000 	    cmp  byte ptr  action, 4
 1618      000004
 1619 ???? 7402     	    jz   0f
 1620 ???? B003     	    mov  al, 3 ;# 2
 1621 ???? 833D0000 	0:  cmp  dword ptr base, 10 ;# base 10?
 1621      00000A
 1622 ???? 7402     	    jz   0f ;# continue if so...
 1623 ???? 3410     	    xor  al, 0x10 ;# otherwise remove 'hex' bit
 1624 ???? 8706     	0:  xchg eax, [esi]
 1625 ???? C7050000 	    mov  dword ptr words, 2
 1625      00000200 
 1625      0000
 1626 ???? E974FFFF 	    jmp  insert
 1626      FF
 1627              	
 1628              	;# delete, or cut, current word in editor (to the left of pacman cursor)
 1629 ???? E8230000 	del: call enstack
 1629      00
 1630 ???? 8B3D0000 	    mov  edi, pcad
 1630      0000
 1631 ???? 8B0D0000 	    mov  ecx, lcad
 1631      0000
 1632 ???? 29F9     	    sub  ecx, edi
 1633 ???? C1E702   	    shl  edi, 2
 1634 ???? 56       	    push esi
 1635 ???? 8B350000 	    mov  esi, cad
 1635      0000
 1636 ???? C1E602   	    shl  esi, 2
 1637 ???? F3A5     	    rep  movsd
 1638 ???? 5E       	    pop  esi
 1639 ???? E9C8FDFF 	    jmp  mcur
 1639      FF
 1640              	
 1641 ???? 8D76FC89 	enstack: dup_
 1641      06
 1642 ???? A1000000 	    mov  eax, cad
 1642      00
 1643 ???? 2B050000 	    sub  eax, pcad
 1643      0000
 1644 ???? 7427     	    jz   ens
 1645 ???? 89C1     	    mov  ecx, eax
 1646 ???? 92       	    xchg eax, edx
 1647 ???? 56       	    push esi
 1648 ???? 8B350000 	    mov  esi, cad
 1648      0000
 1649 ???? 8D34B5FC 	    lea  esi, [esi*4-4]
 1649      FFFFFF
 1650 ???? 8B3D0000 	    mov  edi, trash
 1650      0000
 1651 ???? FD       	0:  std
 1652 ???? AD       	    lodsd
 1653 ???? FC       	    cld
 1654 ???? AB       	    stosd
 1655 ???? 4975F9   	    next 0b
 1656 ???? 92       	    xchg eax, edx
 1657 ???? AB       	    stosd
 1658 ???? 893D0000 	    mov  trash, edi
 1658      0000
 1659 ???? 5E       	    pop  esi
 1660 ???? AD       	ens: drop
 1661 ???? C3       	    ret
 1662              	
 1663 ???? 5A       	pad: pop  edx
 1664 ???? 89150000 	    mov  vector, edx
 1664      0000
 1665 ???? 81C28C00 	    add  edx, 28*5
 1665      0000
 1666 ???? 89150000 	    mov  board, edx
 1666      0000
 1667 ???? 83EA10   	    sub  edx, 4*4
 1668 ???? 89150000 	    mov  shift, edx
 1668      0000
 1669 ???? E869F5FF 	0:  call key
 1669      FF
 1670 ???? 8B150000 	    mov  edx, vector
 1670      0000
 1671 ???? 01C2     	    add  edx, eax
 1672 ???? 8D548205 	    lea  edx, [5+eax*4+edx]
 1673 ???? 0352FC   	    add  edx, [-4+edx]
 1674 ???? AD       	    drop
 1675 ???? FFD2     	    call edx
 1676 ???? EBE7     	    jmp  0b
 1677              	
 1678              	.ifdef OBSOLETE_CM2001
 1679              	 .org (0x1200-1)*4
 1680              	    .long 0
 1681              	.else
 1682              	 .include "chars.asm"
   1              	;# compile character map from data stored as "######.......###"
   2              	;# the above should compile to the two bytes 0xfc 0x07
   3              	.macro CHR16X24 row
   4              	 .equ packed, 0
   5              	 .irpc pixel, "\row"
   6              	  .equ packed, packed << 1
   7              	  .ifeqs "\pixel", "#"
   8              	   .equ packed, packed | 1
   9              	  .endif
  10              	 .endr
  11              	 .byte packed >> 8, packed & 0xff
  12              	.endm
  13              	
  14              	;# compile character map from data stored as "######........#######..........#"
  15              	;# the above should compile to the bytes 0xfc 0x03 0xf8 0x01
  16              	.macro CHR32X32 row
  17              	 .equ packed, 0
  18              	 .equ bitcount, 0
  19              	 .irpc pixel, "\row"
  20              	  .equ packed, packed << 1
  21              	  .ifeqs "\pixel", "#"
  22              	   .equ packed, packed | 1
  23              	  .endif
  24              	  .equ bitcount, bitcount + 1
  25              	  .ifeq bitcount - 8
  26              	   .byte packed
  27              	   .equ packed, 0
  28              	   .equ bitcount, 0
  29              	  .endif
  30              	 .endr
  31              	.endm
  32              	
  33 ???? 00000000 	.org 0x3000  ;# block 12 through block 17
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  34 ???? 0000     	CHR16X24 "................"
  35 ???? 0000     	CHR16X24 "................"
  36 ???? 0000     	CHR16X24 "................"
  37 ???? 0000     	CHR16X24 "................"
  38 ???? 0000     	CHR16X24 "................"
  39 ???? 0000     	CHR16X24 "................"
  40 ???? 0000     	CHR16X24 "................"
  41 ???? 0000     	CHR16X24 "................"
  42 ???? 0000     	CHR16X24 "................"
  43 ???? 0000     	CHR16X24 "................"
  44 ???? 0000     	CHR16X24 "................"
  45 ???? 0000     	CHR16X24 "................"
  46 ???? 0000     	CHR16X24 "................"
  47 ???? 0000     	CHR16X24 "................"
  48 ???? 0000     	CHR16X24 "................"
  49 ???? 0000     	CHR16X24 "................"
  50 ???? 0000     	CHR16X24 "................"
  51 ???? 0000     	CHR16X24 "................"
  52 ???? 0000     	CHR16X24 "................"
  53 ???? 0000     	CHR16X24 "................"
  54 ???? 0000     	CHR16X24 "................"
  55 ???? 0000     	CHR16X24 "................"
  56 ???? 0000     	CHR16X24 "................"
  57 ???? 0000     	CHR16X24 "................"
  58              	
  59 ???? 0000     	CHR16X24 "................"
  60 ???? 0000     	CHR16X24 "................"
  61 ???? 0000     	CHR16X24 "................"
  62 ???? 0000     	CHR16X24 "................"
  63 ???? 0000     	CHR16X24 "................"
  64 ???? 0000     	CHR16X24 "................"
  65 ???? E3F8     	CHR16X24 "###...#######..."
  66 ???? F7FE     	CHR16X24 "####.##########."
  67 ???? FFFF     	CHR16X24 "################"
  68 ???? FC07     	CHR16X24 "######.......###"
  69 ???? F801     	CHR16X24 "#####..........#"
  70 ???? F000     	CHR16X24 "####............"
  71 ???? F000     	CHR16X24 "####............"
  72 ???? F000     	CHR16X24 "####............"
  73 ???? F000     	CHR16X24 "####............"
  74 ???? F000     	CHR16X24 "####............"
  75 ???? F000     	CHR16X24 "####............"
  76 ???? F000     	CHR16X24 "####............"
  77 ???? F000     	CHR16X24 "####............"
  78 ???? F000     	CHR16X24 "####............"
  79 ???? 0000     	CHR16X24 "................"
  80 ???? 0000     	CHR16X24 "................"
  81 ???? 0000     	CHR16X24 "................"
  82 ???? 0000     	CHR16X24 "................"
  83              	
  84 ???? 03C0     	CHR16X24 "......####......"
  85 ???? 03C0     	CHR16X24 "......####......"
  86 ???? 03C0     	CHR16X24 "......####......"
  87 ???? 03C0     	CHR16X24 "......####......"
  88 ???? 3FFC     	CHR16X24 "..############.."
  89 ???? 3FFC     	CHR16X24 "..############.."
  90 ???? 3FFC     	CHR16X24 "..############.."
  91 ???? 03C0     	CHR16X24 "......####......"
  92 ???? 03C0     	CHR16X24 "......####......"
  93 ???? 03C0     	CHR16X24 "......####......"
  94 ???? 03C0     	CHR16X24 "......####......"
  95 ???? 03C0     	CHR16X24 "......####......"
  96 ???? 03C0     	CHR16X24 "......####......"
  97 ???? 03C0     	CHR16X24 "......####......"
  98 ???? 03C0     	CHR16X24 "......####......"
  99 ???? 03C0     	CHR16X24 "......####......"
 100 ???? 03C0     	CHR16X24 "......####......"
 101 ???? 03C0     	CHR16X24 "......####......"
 102 ???? 03C0     	CHR16X24 "......####......"
 103 ???? 03C0     	CHR16X24 "......####......"
 104 ???? 0000     	CHR16X24 "................"
 105 ???? 0000     	CHR16X24 "................"
 106 ???? 0000     	CHR16X24 "................"
 107 ???? 0000     	CHR16X24 "................"
 108              	
 109 ???? 0000     	CHR16X24 "................"
 110 ???? 0000     	CHR16X24 "................"
 111 ???? 0000     	CHR16X24 "................"
 112 ???? 0000     	CHR16X24 "................"
 113 ???? 0000     	CHR16X24 "................"
 114 ???? 0000     	CHR16X24 "................"
 115 ???? 1FF8     	CHR16X24 "...##########..."
 116 ???? 7FFE     	CHR16X24 ".##############."
 117 ???? 7FFE     	CHR16X24 ".##############."
 118 ???? F81F     	CHR16X24 "#####......#####"
 119 ???? F00F     	CHR16X24 "####........####"
 120 ???? F00F     	CHR16X24 "####........####"
 121 ???? F00F     	CHR16X24 "####........####"
 122 ???? F00F     	CHR16X24 "####........####"
 123 ???? F00F     	CHR16X24 "####........####"
 124 ???? F00F     	CHR16X24 "####........####"
 125 ???? F81F     	CHR16X24 "#####......#####"
 126 ???? 7FFE     	CHR16X24 ".##############."
 127 ???? 7FFE     	CHR16X24 ".##############."
 128 ???? 1FF8     	CHR16X24 "...##########..."
 129 ???? 0000     	CHR16X24 "................"
 130 ???? 0000     	CHR16X24 "................"
 131 ???? 0000     	CHR16X24 "................"
 132 ???? 0000     	CHR16X24 "................"
 133              	
 134 ???? 0000     	CHR16X24 "................"
 135 ???? 0000     	CHR16X24 "................"
 136 ???? 0000     	CHR16X24 "................"
 137 ???? 0000     	CHR16X24 "................"
 138 ???? 0000     	CHR16X24 "................"
 139 ???? 0000     	CHR16X24 "................"
 140 ???? 1FF8     	CHR16X24 "...##########..."
 141 ???? 7FFE     	CHR16X24 ".##############."
 142 ???? 7FFE     	CHR16X24 ".##############."
 143 ???? F00F     	CHR16X24 "####........####"
 144 ???? F00F     	CHR16X24 "####........####"
 145 ???? F01F     	CHR16X24 "####.......#####"
 146 ???? FFFE     	CHR16X24 "###############."
 147 ???? FFFC     	CHR16X24 "##############.."
 148 ???? F000     	CHR16X24 "####............"
 149 ???? F000     	CHR16X24 "####............"
 150 ???? F800     	CHR16X24 "#####..........."
 151 ???? 7FFE     	CHR16X24 ".##############."
 152 ???? 7FFE     	CHR16X24 ".##############."
 153 ???? 1FF8     	CHR16X24 "...##########..."
 154 ???? 0000     	CHR16X24 "................"
 155 ???? 0000     	CHR16X24 "................"
 156 ???? 0000     	CHR16X24 "................"
 157 ???? 0000     	CHR16X24 "................"
 158              	
 159 ???? 0000     	CHR16X24 "................"
 160 ???? 0000     	CHR16X24 "................"
 161 ???? 0000     	CHR16X24 "................"
 162 ???? 0000     	CHR16X24 "................"
 163 ???? 0000     	CHR16X24 "................"
 164 ???? 0000     	CHR16X24 "................"
 165 ???? 1FF8     	CHR16X24 "...##########..."
 166 ???? 7FFE     	CHR16X24 ".##############."
 167 ???? 7FFE     	CHR16X24 ".##############."
 168 ???? 001F     	CHR16X24 "...........#####"
 169 ???? 000F     	CHR16X24 "............####"
 170 ???? 000F     	CHR16X24 "............####"
 171 ???? 3FFF     	CHR16X24 "..##############"
 172 ???? 7FFF     	CHR16X24 ".###############"
 173 ???? F80F     	CHR16X24 "#####.......####"
 174 ???? F00F     	CHR16X24 "####........####"
 175 ???? F01F     	CHR16X24 "####.......#####"
 176 ???? 7FFF     	CHR16X24 ".###############"
 177 ???? 7FFF     	CHR16X24 ".###############"
 178 ???? 1FF7     	CHR16X24 "...#########.###"
 179 ???? 0000     	CHR16X24 "................"
 180 ???? 0000     	CHR16X24 "................"
 181 ???? 0000     	CHR16X24 "................"
 182 ???? 0000     	CHR16X24 "................"
 183              	
 184 ???? 0000     	CHR16X24 "................"
 185 ???? 0000     	CHR16X24 "................"
 186 ???? 0000     	CHR16X24 "................"
 187 ???? 0000     	CHR16X24 "................"
 188 ???? 0000     	CHR16X24 "................"
 189 ???? 0000     	CHR16X24 "................"
 190 ???? E3F8     	CHR16X24 "###...#######..."
 191 ???? F7FE     	CHR16X24 "####.##########."
 192 ???? FFFE     	CHR16X24 "###############."
 193 ???? FC1F     	CHR16X24 "######.....#####"
 194 ???? F80F     	CHR16X24 "#####.......####"
 195 ???? F00F     	CHR16X24 "####........####"
 196 ???? F00F     	CHR16X24 "####........####"
 197 ???? F00F     	CHR16X24 "####........####"
 198 ???? F00F     	CHR16X24 "####........####"
 199 ???? F00F     	CHR16X24 "####........####"
 200 ???? F00F     	CHR16X24 "####........####"
 201 ???? F00F     	CHR16X24 "####........####"
 202 ???? F00F     	CHR16X24 "####........####"
 203 ???? F00F     	CHR16X24 "####........####"
 204 ???? 0000     	CHR16X24 "................"
 205 ???? 0000     	CHR16X24 "................"
 206 ???? 0000     	CHR16X24 "................"
 207 ???? 0000     	CHR16X24 "................"
 208              	
 209 ???? 03C0     	CHR16X24 "......####......"
 210 ???? 03C0     	CHR16X24 "......####......"
 211 ???? 03C0     	CHR16X24 "......####......"
 212 ???? 03C0     	CHR16X24 "......####......"
 213 ???? 0000     	CHR16X24 "................"
 214 ???? 0000     	CHR16X24 "................"
 215 ???? 0000     	CHR16X24 "................"
 216 ???? 03C0     	CHR16X24 "......####......"
 217 ???? 03C0     	CHR16X24 "......####......"
 218 ???? 03C0     	CHR16X24 "......####......"
 219 ???? 03C0     	CHR16X24 "......####......"
 220 ???? 03C0     	CHR16X24 "......####......"
 221 ???? 03C0     	CHR16X24 "......####......"
 222 ???? 03C0     	CHR16X24 "......####......"
 223 ???? 03C0     	CHR16X24 "......####......"
 224 ???? 03C0     	CHR16X24 "......####......"
 225 ???? 03C0     	CHR16X24 "......####......"
 226 ???? 03C0     	CHR16X24 "......####......"
 227 ???? 03C0     	CHR16X24 "......####......"
 228 ???? 03C0     	CHR16X24 "......####......"
 229 ???? 0000     	CHR16X24 "................"
 230 ???? 0000     	CHR16X24 "................"
 231 ???? 0000     	CHR16X24 "................"
 232 ???? 0000     	CHR16X24 "................"
 233              	
 234 ???? 0000     	CHR16X24 "................"
 235 ???? 0000     	CHR16X24 "................"
 236 ???? 0000     	CHR16X24 "................"
 237 ???? 0000     	CHR16X24 "................"
 238 ???? 0000     	CHR16X24 "................"
 239 ???? 0000     	CHR16X24 "................"
 240 ???? 1FF8     	CHR16X24 "...##########..."
 241 ???? 7FFE     	CHR16X24 ".##############."
 242 ???? 7FFE     	CHR16X24 ".##############."
 243 ???? F802     	CHR16X24 "#####.........#."
 244 ???? F000     	CHR16X24 "####............"
 245 ???? F000     	CHR16X24 "####............"
 246 ???? 7FFC     	CHR16X24 ".#############.."
 247 ???? 3FFE     	CHR16X24 "..#############."
 248 ???? 000F     	CHR16X24 "............####"
 249 ???? 000F     	CHR16X24 "............####"
 250 ???? 401F     	CHR16X24 ".#.........#####"
 251 ???? 7FFE     	CHR16X24 ".##############."
 252 ???? 7FFE     	CHR16X24 ".##############."
 253 ???? 1FF8     	CHR16X24 "...##########..."
 254 ???? 0000     	CHR16X24 "................"
 255 ???? 0000     	CHR16X24 "................"
 256 ???? 0000     	CHR16X24 "................"
 257 ???? 0000     	CHR16X24 "................"
 258              	
 259 ???? 0000     	CHR16X24 "................"
 260 ???? 0000     	CHR16X24 "................"
 261 ???? 0000     	CHR16X24 "................"
 262 ???? 0000     	CHR16X24 "................"
 263 ???? 0000     	CHR16X24 "................"
 264 ???? 0000     	CHR16X24 "................"
 265 ???? DC3C     	CHR16X24 "##.###....####.."
 266 ???? FE7E     	CHR16X24 "#######..######."
 267 ???? FFFF     	CHR16X24 "################"
 268 ???? FFFF     	CHR16X24 "################"
 269 ???? F3CF     	CHR16X24 "####..####..####"
 270 ???? E187     	CHR16X24 "###....##....###"
 271 ???? E007     	CHR16X24 "###..........###"
 272 ???? E007     	CHR16X24 "###..........###"
 273 ???? E007     	CHR16X24 "###..........###"
 274 ???? E007     	CHR16X24 "###..........###"
 275 ???? E007     	CHR16X24 "###..........###"
 276 ???? E007     	CHR16X24 "###..........###"
 277 ???? E007     	CHR16X24 "###..........###"
 278 ???? E007     	CHR16X24 "###..........###"
 279 ???? 0000     	CHR16X24 "................"
 280 ???? 0000     	CHR16X24 "................"
 281 ???? 0000     	CHR16X24 "................"
 282 ???? 0000     	CHR16X24 "................"
 283              	
 284 ???? 0000     	CHR16X24 "................"
 285 ???? 0000     	CHR16X24 "................"
 286 ???? 0000     	CHR16X24 "................"
 287 ???? 0000     	CHR16X24 "................"
 288 ???? 0000     	CHR16X24 "................"
 289 ???? 0000     	CHR16X24 "................"
 290 ???? 1FF8     	CHR16X24 "...##########..."
 291 ???? 7FFE     	CHR16X24 ".##############."
 292 ???? 7FFE     	CHR16X24 ".##############."
 293 ???? F80F     	CHR16X24 "#####.......####"
 294 ???? F001     	CHR16X24 "####...........#"
 295 ???? F000     	CHR16X24 "####............"
 296 ???? F000     	CHR16X24 "####............"
 297 ???? F000     	CHR16X24 "####............"
 298 ???? F000     	CHR16X24 "####............"
 299 ???? F001     	CHR16X24 "####...........#"
 300 ???? F80F     	CHR16X24 "#####.......####"
 301 ???? 7FFE     	CHR16X24 ".##############."
 302 ???? 7FFE     	CHR16X24 ".##############."
 303 ???? 1FF8     	CHR16X24 "...##########..."
 304 ???? 0000     	CHR16X24 "................"
 305 ???? 0000     	CHR16X24 "................"
 306 ???? 0000     	CHR16X24 "................"
 307 ???? 0000     	CHR16X24 "................"
 308              	
 309 ???? 0000     	CHR16X24 "................"
 310 ???? 0000     	CHR16X24 "................"
 311 ???? 0000     	CHR16X24 "................"
 312 ???? 0000     	CHR16X24 "................"
 313 ???? 0000     	CHR16X24 "................"
 314 ???? 0000     	CHR16X24 "................"
 315 ???? E007     	CHR16X24 "###..........###"
 316 ???? F00F     	CHR16X24 "####........####"
 317 ???? F81F     	CHR16X24 "#####......#####"
 318 ???? 7C3E     	CHR16X24 ".#####....#####."
 319 ???? 3E7C     	CHR16X24 "..#####..#####.."
 320 ???? 1FF8     	CHR16X24 "...##########..."
 321 ???? 0FF0     	CHR16X24 "....########...."
 322 ???? 07E0     	CHR16X24 ".....######....."
 323 ???? 07C0     	CHR16X24 ".....#####......"
 324 ???? 0F80     	CHR16X24 "....#####......."
 325 ???? 1F00     	CHR16X24 "...#####........"
 326 ???? 3E00     	CHR16X24 "..#####........."
 327 ???? 7C00     	CHR16X24 ".#####.........."
 328 ???? F800     	CHR16X24 "#####..........."
 329 ???? F000     	CHR16X24 "####............"
 330 ???? E000     	CHR16X24 "###............."
 331 ???? C000     	CHR16X24 "##.............."
 332 ???? 8000     	CHR16X24 "#..............."
 333              	
 334 ???? 0700     	CHR16X24 ".....###........"
 335 ???? 0780     	CHR16X24 ".....####......."
 336 ???? 0780     	CHR16X24 ".....####......."
 337 ???? 0780     	CHR16X24 ".....####......."
 338 ???? 0780     	CHR16X24 ".....####......."
 339 ???? 0780     	CHR16X24 ".....####......."
 340 ???? 0780     	CHR16X24 ".....####......."
 341 ???? 0780     	CHR16X24 ".....####......."
 342 ???? 0780     	CHR16X24 ".....####......."
 343 ???? 0780     	CHR16X24 ".....####......."
 344 ???? 0780     	CHR16X24 ".....####......."
 345 ???? 0780     	CHR16X24 ".....####......."
 346 ???? 0780     	CHR16X24 ".....####......."
 347 ???? 0780     	CHR16X24 ".....####......."
 348 ???? 0780     	CHR16X24 ".....####......."
 349 ???? 0780     	CHR16X24 ".....####......."
 350 ???? 07C0     	CHR16X24 ".....#####......"
 351 ???? 07C0     	CHR16X24 ".....#####......"
 352 ???? 03E0     	CHR16X24 "......#####....."
 353 ???? 01E0     	CHR16X24 ".......####....."
 354 ???? 0000     	CHR16X24 "................"
 355 ???? 0000     	CHR16X24 "................"
 356 ???? 0000     	CHR16X24 "................"
 357 ???? 0000     	CHR16X24 "................"
 358              	
 359 ???? 0000     	CHR16X24 "................"
 360 ???? 0000     	CHR16X24 "................"
 361 ???? 0000     	CHR16X24 "................"
 362 ???? 0000     	CHR16X24 "................"
 363 ???? 0000     	CHR16X24 "................"
 364 ???? 0000     	CHR16X24 "................"
 365 ???? 1FE7     	CHR16X24 "...########..###"
 366 ???? 7FF7     	CHR16X24 ".###########.###"
 367 ???? 7FFF     	CHR16X24 ".###############"
 368 ???? F81F     	CHR16X24 "#####......#####"
 369 ???? F00F     	CHR16X24 "####........####"
 370 ???? F00F     	CHR16X24 "####........####"
 371 ???? F00F     	CHR16X24 "####........####"
 372 ???? F00F     	CHR16X24 "####........####"
 373 ???? F81F     	CHR16X24 "#####......#####"
 374 ???? 7FFF     	CHR16X24 ".###############"
 375 ???? 7FFF     	CHR16X24 ".###############"
 376 ???? 1FFF     	CHR16X24 "...#############"
 377 ???? 000F     	CHR16X24 "............####"
 378 ???? 000F     	CHR16X24 "............####"
 379 ???? 601F     	CHR16X24 ".##........#####"
 380 ???? 7FFE     	CHR16X24 ".##############."
 381 ???? 7FFE     	CHR16X24 ".##############."
 382 ???? 1FF8     	CHR16X24 "...##########..."
 383              	
 384 ???? 01F0     	CHR16X24 ".......#####...."
 385 ???? 03F8     	CHR16X24 "......#######..."
 386 ???? 0788     	CHR16X24 ".....####...#..."
 387 ???? 0780     	CHR16X24 ".....####......."
 388 ???? 3FE0     	CHR16X24 "..#########....."
 389 ???? 3FF0     	CHR16X24 "..##########...."
 390 ???? 3FF0     	CHR16X24 "..##########...."
 391 ???? 0780     	CHR16X24 ".....####......."
 392 ???? 0780     	CHR16X24 ".....####......."
 393 ???? 0780     	CHR16X24 ".....####......."
 394 ???? 0780     	CHR16X24 ".....####......."
 395 ???? 0780     	CHR16X24 ".....####......."
 396 ???? 0780     	CHR16X24 ".....####......."
 397 ???? 0780     	CHR16X24 ".....####......."
 398 ???? 0780     	CHR16X24 ".....####......."
 399 ???? 0780     	CHR16X24 ".....####......."
 400 ???? 0780     	CHR16X24 ".....####......."
 401 ???? 0780     	CHR16X24 ".....####......."
 402 ???? 0780     	CHR16X24 ".....####......."
 403 ???? 0780     	CHR16X24 ".....####......."
 404 ???? 0000     	CHR16X24 "................"
 405 ???? 0000     	CHR16X24 "................"
 406 ???? 0000     	CHR16X24 "................"
 407 ???? 0000     	CHR16X24 "................"
 408              	
 409 ???? 0000     	CHR16X24 "................"
 410 ???? 0000     	CHR16X24 "................"
 411 ???? 0000     	CHR16X24 "................"
 412 ???? 0000     	CHR16X24 "................"
 413 ???? 0000     	CHR16X24 "................"
 414 ???? 0000     	CHR16X24 "................"
 415 ???? C003     	CHR16X24 "##............##"
 416 ???? E007     	CHR16X24 "###..........###"
 417 ???? E007     	CHR16X24 "###..........###"
 418 ???? E007     	CHR16X24 "###..........###"
 419 ???? F18F     	CHR16X24 "####...##...####"
 420 ???? 718E     	CHR16X24 ".###...##...###."
 421 ???? 718E     	CHR16X24 ".###...##...###."
 422 ???? 7BDE     	CHR16X24 ".####.####.####."
 423 ???? 3BDC     	CHR16X24 "..###.####.###.."
 424 ???? 3FFC     	CHR16X24 "..############.."
 425 ???? 1E78     	CHR16X24 "...####..####..."
 426 ???? 1E78     	CHR16X24 "...####..####..."
 427 ???? 0C30     	CHR16X24 "....##....##...."
 428 ???? 0C30     	CHR16X24 "....##....##...."
 429 ???? 0000     	CHR16X24 "................"
 430 ???? 0000     	CHR16X24 "................"
 431 ???? 0000     	CHR16X24 "................"
 432 ???? 0000     	CHR16X24 "................"
 433              	
 434 ???? 000F     	CHR16X24 "............####"
 435 ???? 000F     	CHR16X24 "............####"
 436 ???? 000F     	CHR16X24 "............####"
 437 ???? 000F     	CHR16X24 "............####"
 438 ???? 000F     	CHR16X24 "............####"
 439 ???? 000F     	CHR16X24 "............####"
 440 ???? 1FEF     	CHR16X24 "...########.####"
 441 ???? 7FFF     	CHR16X24 ".###############"
 442 ???? 7FFF     	CHR16X24 ".###############"
 443 ???? F81F     	CHR16X24 "#####......#####"
 444 ???? F00F     	CHR16X24 "####........####"
 445 ???? F00F     	CHR16X24 "####........####"
 446 ???? F00F     	CHR16X24 "####........####"
 447 ???? F00F     	CHR16X24 "####........####"
 448 ???? F00F     	CHR16X24 "####........####"
 449 ???? F00F     	CHR16X24 "####........####"
 450 ???? F81F     	CHR16X24 "#####......#####"
 451 ???? 7FFF     	CHR16X24 ".###############"
 452 ???? 7FFF     	CHR16X24 ".###############"
 453 ???? 1FEF     	CHR16X24 "...########.####"
 454 ???? 0000     	CHR16X24 "................"
 455 ???? 0000     	CHR16X24 "................"
 456 ???? 0000     	CHR16X24 "................"
 457 ???? 0000     	CHR16X24 "................"
 458              	
 459 ???? 0000     	CHR16X24 "................"
 460 ???? 0000     	CHR16X24 "................"
 461 ???? 0000     	CHR16X24 "................"
 462 ???? 0000     	CHR16X24 "................"
 463 ???? 0000     	CHR16X24 "................"
 464 ???? 0000     	CHR16X24 "................"
 465 ???? E007     	CHR16X24 "###..........###"
 466 ???? E007     	CHR16X24 "###..........###"
 467 ???? F00F     	CHR16X24 "####........####"
 468 ???? 700E     	CHR16X24 ".###........###."
 469 ???? 781E     	CHR16X24 ".####......####."
 470 ???? 381C     	CHR16X24 "..###......###.."
 471 ???? 3C3C     	CHR16X24 "..####....####.."
 472 ???? 1C38     	CHR16X24 "...###....###..."
 473 ???? 1E78     	CHR16X24 "...####..####..."
 474 ???? 0E70     	CHR16X24 "....###..###...."
 475 ???? 0FF0     	CHR16X24 "....########...."
 476 ???? 07E0     	CHR16X24 ".....######....."
 477 ???? 03C0     	CHR16X24 "......####......"
 478 ???? 0180     	CHR16X24 ".......##......."
 479 ???? 0000     	CHR16X24 "................"
 480 ???? 0000     	CHR16X24 "................"
 481 ???? 0000     	CHR16X24 "................"
 482 ???? 0000     	CHR16X24 "................"
 483              	
 484 ???? 0000     	CHR16X24 "................"
 485 ???? 0000     	CHR16X24 "................"
 486 ???? 0000     	CHR16X24 "................"
 487 ???? 0000     	CHR16X24 "................"
 488 ???? 0000     	CHR16X24 "................"
 489 ???? 0000     	CHR16X24 "................"
 490 ???? E3F8     	CHR16X24 "###...#######..."
 491 ???? F7FE     	CHR16X24 "####.##########."
 492 ???? FFFE     	CHR16X24 "###############."
 493 ???? FE1F     	CHR16X24 "#######....#####"
 494 ???? FC0F     	CHR16X24 "######......####"
 495 ???? F80F     	CHR16X24 "#####.......####"
 496 ???? F00F     	CHR16X24 "####........####"
 497 ???? F00F     	CHR16X24 "####........####"
 498 ???? F81F     	CHR16X24 "#####......#####"
 499 ???? FFFE     	CHR16X24 "###############."
 500 ???? FFFE     	CHR16X24 "###############."
 501 ???? F7F8     	CHR16X24 "####.########..."
 502 ???? F000     	CHR16X24 "####............"
 503 ???? F000     	CHR16X24 "####............"
 504 ???? F000     	CHR16X24 "####............"
 505 ???? F000     	CHR16X24 "####............"
 506 ???? F000     	CHR16X24 "####............"
 507 ???? F000     	CHR16X24 "####............"
 508              	
 509 ???? F000     	CHR16X24 "####............"
 510 ???? F000     	CHR16X24 "####............"
 511 ???? F000     	CHR16X24 "####............"
 512 ???? F000     	CHR16X24 "####............"
 513 ???? F000     	CHR16X24 "####............"
 514 ???? F000     	CHR16X24 "####............"
 515 ???? F7F8     	CHR16X24 "####.########..."
 516 ???? FFFE     	CHR16X24 "###############."
 517 ???? FFFE     	CHR16X24 "###############."
 518 ???? F81F     	CHR16X24 "#####......#####"
 519 ???? F00F     	CHR16X24 "####........####"
 520 ???? F00F     	CHR16X24 "####........####"
 521 ???? F00F     	CHR16X24 "####........####"
 522 ???? F00F     	CHR16X24 "####........####"
 523 ???? F00F     	CHR16X24 "####........####"
 524 ???? F00F     	CHR16X24 "####........####"
 525 ???? F81F     	CHR16X24 "#####......#####"
 526 ???? FFFE     	CHR16X24 "###############."
 527 ???? EFFE     	CHR16X24 "###.###########."
 528 ???? E7F8     	CHR16X24 "###..########..."
 529 ???? 0000     	CHR16X24 "................"
 530 ???? 0000     	CHR16X24 "................"
 531 ???? 0000     	CHR16X24 "................"
 532 ???? 0000     	CHR16X24 "................"
 533              	
 534 ???? F000     	CHR16X24 "####............"
 535 ???? F000     	CHR16X24 "####............"
 536 ???? F000     	CHR16X24 "####............"
 537 ???? F000     	CHR16X24 "####............"
 538 ???? F000     	CHR16X24 "####............"
 539 ???? F000     	CHR16X24 "####............"
 540 ???? F3F8     	CHR16X24 "####..#######..."
 541 ???? F7FE     	CHR16X24 "####.##########."
 542 ???? FFFE     	CHR16X24 "###############."
 543 ???? FC1F     	CHR16X24 "######.....#####"
 544 ???? F80F     	CHR16X24 "#####.......####"
 545 ???? F00F     	CHR16X24 "####........####"
 546 ???? F00F     	CHR16X24 "####........####"
 547 ???? F00F     	CHR16X24 "####........####"
 548 ???? F00F     	CHR16X24 "####........####"
 549 ???? F00F     	CHR16X24 "####........####"
 550 ???? F00F     	CHR16X24 "####........####"
 551 ???? F00F     	CHR16X24 "####........####"
 552 ???? F00F     	CHR16X24 "####........####"
 553 ???? F00F     	CHR16X24 "####........####"
 554 ???? 0000     	CHR16X24 "................"
 555 ???? 0000     	CHR16X24 "................"
 556 ???? 0000     	CHR16X24 "................"
 557 ???? 0000     	CHR16X24 "................"
 558              	
 559 ???? 0000     	CHR16X24 "................"
 560 ???? 0000     	CHR16X24 "................"
 561 ???? 0000     	CHR16X24 "................"
 562 ???? 0000     	CHR16X24 "................"
 563 ???? 0000     	CHR16X24 "................"
 564 ???? 0000     	CHR16X24 "................"
 565 ???? F00F     	CHR16X24 "####........####"
 566 ???? F81F     	CHR16X24 "#####......#####"
 567 ???? 7C3E     	CHR16X24 ".#####....#####."
 568 ???? 3E7C     	CHR16X24 "..#####..#####.."
 569 ???? 1FF8     	CHR16X24 "...##########..."
 570 ???? 0FF0     	CHR16X24 "....########...."
 571 ???? 07E0     	CHR16X24 ".....######....."
 572 ???? 07E0     	CHR16X24 ".....######....."
 573 ???? 0FF0     	CHR16X24 "....########...."
 574 ???? 1FF8     	CHR16X24 "...##########..."
 575 ???? 3E7C     	CHR16X24 "..#####..#####.."
 576 ???? 7C3E     	CHR16X24 ".#####....#####."
 577 ???? F81F     	CHR16X24 "#####......#####"
 578 ???? F00F     	CHR16X24 "####........####"
 579 ???? 0000     	CHR16X24 "................"
 580 ???? 0000     	CHR16X24 "................"
 581 ???? 0000     	CHR16X24 "................"
 582 ???? 0000     	CHR16X24 "................"
 583              	
 584 ???? 0000     	CHR16X24 "................"
 585 ???? 0000     	CHR16X24 "................"
 586 ???? 0000     	CHR16X24 "................"
 587 ???? 0000     	CHR16X24 "................"
 588 ???? 0000     	CHR16X24 "................"
 589 ???? 0000     	CHR16X24 "................"
 590 ???? F00F     	CHR16X24 "####........####"
 591 ???? F00F     	CHR16X24 "####........####"
 592 ???? F00F     	CHR16X24 "####........####"
 593 ???? F00F     	CHR16X24 "####........####"
 594 ???? F00F     	CHR16X24 "####........####"
 595 ???? F00F     	CHR16X24 "####........####"
 596 ???? F00F     	CHR16X24 "####........####"
 597 ???? F00F     	CHR16X24 "####........####"
 598 ???? F00F     	CHR16X24 "####........####"
 599 ???? F00F     	CHR16X24 "####........####"
 600 ???? F81F     	CHR16X24 "#####......#####"
 601 ???? 7FFE     	CHR16X24 ".##############."
 602 ???? 7FFE     	CHR16X24 ".##############."
 603 ???? 1FF8     	CHR16X24 "...##########..."
 604 ???? 0000     	CHR16X24 "................"
 605 ???? 0000     	CHR16X24 "................"
 606 ???? 0000     	CHR16X24 "................"
 607 ???? 0000     	CHR16X24 "................"
 608              	
 609 ???? 0000     	CHR16X24 "................"
 610 ???? 0000     	CHR16X24 "................"
 611 ???? 0000     	CHR16X24 "................"
 612 ???? 0000     	CHR16X24 "................"
 613 ???? 0000     	CHR16X24 "................"
 614 ???? 0000     	CHR16X24 "................"
 615 ???? 1FC7     	CHR16X24 "...#######...###"
 616 ???? 7FEF     	CHR16X24 ".##########.####"
 617 ???? 7FFF     	CHR16X24 ".###############"
 618 ???? F83F     	CHR16X24 "#####.....######"
 619 ???? F01F     	CHR16X24 "####.......#####"
 620 ???? F00F     	CHR16X24 "####........####"
 621 ???? F00F     	CHR16X24 "####........####"
 622 ???? F00F     	CHR16X24 "####........####"
 623 ???? F81F     	CHR16X24 "#####......#####"
 624 ???? 7FFF     	CHR16X24 ".###############"
 625 ???? 7FFF     	CHR16X24 ".###############"
 626 ???? 1FEF     	CHR16X24 "...########.####"
 627 ???? 000F     	CHR16X24 "............####"
 628 ???? 000F     	CHR16X24 "............####"
 629 ???? 000F     	CHR16X24 "............####"
 630 ???? 000F     	CHR16X24 "............####"
 631 ???? 000F     	CHR16X24 "............####"
 632 ???? 000E     	CHR16X24 "............###."
 633              	
 634 ???? 1FF8     	CHR16X24 "...##########..."
 635 ???? 7FFE     	CHR16X24 ".##############."
 636 ???? 7FFE     	CHR16X24 ".##############."
 637 ???? F81F     	CHR16X24 "#####......#####"
 638 ???? F00F     	CHR16X24 "####........####"
 639 ???? F00F     	CHR16X24 "####........####"
 640 ???? F00F     	CHR16X24 "####........####"
 641 ???? F00F     	CHR16X24 "####........####"
 642 ???? F00F     	CHR16X24 "####........####"
 643 ???? F00F     	CHR16X24 "####........####"
 644 ???? F00F     	CHR16X24 "####........####"
 645 ???? F00F     	CHR16X24 "####........####"
 646 ???? F00F     	CHR16X24 "####........####"
 647 ???? F00F     	CHR16X24 "####........####"
 648 ???? F00F     	CHR16X24 "####........####"
 649 ???? F00F     	CHR16X24 "####........####"
 650 ???? F81F     	CHR16X24 "#####......#####"
 651 ???? 7FFE     	CHR16X24 ".##############."
 652 ???? 7FFE     	CHR16X24 ".##############."
 653 ???? 1FF8     	CHR16X24 "...##########..."
 654 ???? 0000     	CHR16X24 "................"
 655 ???? 0000     	CHR16X24 "................"
 656 ???? 0000     	CHR16X24 "................"
 657 ???? 0000     	CHR16X24 "................"
 658              	
 659 ???? 01E0     	CHR16X24 ".......####....."
 660 ???? 03E0     	CHR16X24 "......#####....."
 661 ???? 03E0     	CHR16X24 "......#####....."
 662 ???? 07E0     	CHR16X24 ".....######....."
 663 ???? 07E0     	CHR16X24 ".....######....."
 664 ???? 05E0     	CHR16X24 ".....#.####....."
 665 ???? 01E0     	CHR16X24 ".......####....."
 666 ???? 01E0     	CHR16X24 ".......####....."
 667 ???? 01E0     	CHR16X24 ".......####....."
 668 ???? 01E0     	CHR16X24 ".......####....."
 669 ???? 01E0     	CHR16X24 ".......####....."
 670 ???? 01E0     	CHR16X24 ".......####....."
 671 ???? 01E0     	CHR16X24 ".......####....."
 672 ???? 01E0     	CHR16X24 ".......####....."
 673 ???? 01E0     	CHR16X24 ".......####....."
 674 ???? 01E0     	CHR16X24 ".......####....."
 675 ???? 01E0     	CHR16X24 ".......####....."
 676 ???? 01E0     	CHR16X24 ".......####....."
 677 ???? 01E0     	CHR16X24 ".......####....."
 678 ???? 01E0     	CHR16X24 ".......####....."
 679 ???? 0000     	CHR16X24 "................"
 680 ???? 0000     	CHR16X24 "................"
 681 ???? 0000     	CHR16X24 "................"
 682 ???? 0000     	CHR16X24 "................"
 683              	
 684 ???? 1FF8     	CHR16X24 "...##########..."
 685 ???? 7FFE     	CHR16X24 ".##############."
 686 ???? 7FFE     	CHR16X24 ".##############."
 687 ???? F01F     	CHR16X24 "####.......#####"
 688 ???? 000F     	CHR16X24 "............####"
 689 ???? 000F     	CHR16X24 "............####"
 690 ???? 000F     	CHR16X24 "............####"
 691 ???? 000F     	CHR16X24 "............####"
 692 ???? 001F     	CHR16X24 "...........#####"
 693 ???? 1FFE     	CHR16X24 "...############."
 694 ???? 7FFE     	CHR16X24 ".##############."
 695 ???? 7FF8     	CHR16X24 ".############..."
 696 ???? F800     	CHR16X24 "#####..........."
 697 ???? F000     	CHR16X24 "####............"
 698 ???? F000     	CHR16X24 "####............"
 699 ???? F000     	CHR16X24 "####............"
 700 ???? F000     	CHR16X24 "####............"
 701 ???? FFFF     	CHR16X24 "################"
 702 ???? FFFF     	CHR16X24 "################"
 703 ???? FFFF     	CHR16X24 "################"
 704 ???? 0000     	CHR16X24 "................"
 705 ???? 0000     	CHR16X24 "................"
 706 ???? 0000     	CHR16X24 "................"
 707 ???? 0000     	CHR16X24 "................"
 708              	
 709 ???? 1FF8     	CHR16X24 "...##########..."
 710 ???? 7FFE     	CHR16X24 ".##############."
 711 ???? 7FFE     	CHR16X24 ".##############."
 712 ???? F01F     	CHR16X24 "####.......#####"
 713 ???? 000F     	CHR16X24 "............####"
 714 ???? 000F     	CHR16X24 "............####"
 715 ???? 000F     	CHR16X24 "............####"
 716 ???? 000F     	CHR16X24 "............####"
 717 ???? 001F     	CHR16X24 "...........#####"
 718 ???? 07FE     	CHR16X24 ".....##########."
 719 ???? 07FC     	CHR16X24 ".....#########.."
 720 ???? 07FE     	CHR16X24 ".....##########."
 721 ???? 001F     	CHR16X24 "...........#####"
 722 ???? 000F     	CHR16X24 "............####"
 723 ???? 000F     	CHR16X24 "............####"
 724 ???? 000F     	CHR16X24 "............####"
 725 ???? F01F     	CHR16X24 "####.......#####"
 726 ???? 7FFE     	CHR16X24 ".##############."
 727 ???? 7FFE     	CHR16X24 ".##############."
 728 ???? 1FF8     	CHR16X24 "...##########..."
 729 ???? 0000     	CHR16X24 "................"
 730 ???? 0000     	CHR16X24 "................"
 731 ???? 0000     	CHR16X24 "................"
 732 ???? 0000     	CHR16X24 "................"
 733              	
 734 ???? F0F0     	CHR16X24 "####....####...."
 735 ???? F0F0     	CHR16X24 "####....####...."
 736 ???? F0F0     	CHR16X24 "####....####...."
 737 ???? F0F0     	CHR16X24 "####....####...."
 738 ???? F0F0     	CHR16X24 "####....####...."
 739 ???? F0F0     	CHR16X24 "####....####...."
 740 ???? F0F0     	CHR16X24 "####....####...."
 741 ???? F0F0     	CHR16X24 "####....####...."
 742 ???? F0F0     	CHR16X24 "####....####...."
 743 ???? FFFF     	CHR16X24 "################"
 744 ???? FFFF     	CHR16X24 "################"
 745 ???? FFFF     	CHR16X24 "################"
 746 ???? 00F0     	CHR16X24 "........####...."
 747 ???? 00F0     	CHR16X24 "........####...."
 748 ???? 00F0     	CHR16X24 "........####...."
 749 ???? 00F0     	CHR16X24 "........####...."
 750 ???? 00F0     	CHR16X24 "........####...."
 751 ???? 00F0     	CHR16X24 "........####...."
 752 ???? 00F0     	CHR16X24 "........####...."
 753 ???? 00F0     	CHR16X24 "........####...."
 754 ???? 0000     	CHR16X24 "................"
 755 ???? 0000     	CHR16X24 "................"
 756 ???? 0000     	CHR16X24 "................"
 757 ???? 0000     	CHR16X24 "................"
 758              	
 759 ???? FFFF     	CHR16X24 "################"
 760 ???? FFFF     	CHR16X24 "################"
 761 ???? FFFF     	CHR16X24 "################"
 762 ???? F000     	CHR16X24 "####............"
 763 ???? F000     	CHR16X24 "####............"
 764 ???? F000     	CHR16X24 "####............"
 765 ???? F000     	CHR16X24 "####............"
 766 ???? F000     	CHR16X24 "####............"
 767 ???? F000     	CHR16X24 "####............"
 768 ???? FFF8     	CHR16X24 "#############..."
 769 ???? FFFE     	CHR16X24 "###############."
 770 ???? FFFE     	CHR16X24 "###############."
 771 ???? 001F     	CHR16X24 "...........#####"
 772 ???? 000F     	CHR16X24 "............####"
 773 ???? 000F     	CHR16X24 "............####"
 774 ???? 000F     	CHR16X24 "............####"
 775 ???? F01F     	CHR16X24 "####.......#####"
 776 ???? 7FFE     	CHR16X24 ".##############."
 777 ???? 7FFE     	CHR16X24 ".##############."
 778 ???? 1FF8     	CHR16X24 "...##########..."
 779 ???? 0000     	CHR16X24 "................"
 780 ???? 0000     	CHR16X24 "................"
 781 ???? 0000     	CHR16X24 "................"
 782 ???? 0000     	CHR16X24 "................"
 783              	
 784 ???? 1FF8     	CHR16X24 "...##########..."
 785 ???? 7FFE     	CHR16X24 ".##############."
 786 ???? 7FFE     	CHR16X24 ".##############."
 787 ???? F80F     	CHR16X24 "#####.......####"
 788 ???? F000     	CHR16X24 "####............"
 789 ???? F000     	CHR16X24 "####............"
 790 ???? F000     	CHR16X24 "####............"
 791 ???? F000     	CHR16X24 "####............"
 792 ???? F800     	CHR16X24 "#####..........."
 793 ???? FFF8     	CHR16X24 "#############..."
 794 ???? FFFE     	CHR16X24 "###############."
 795 ???? FFFE     	CHR16X24 "###############."
 796 ???? F81F     	CHR16X24 "#####......#####"
 797 ???? F00F     	CHR16X24 "####........####"
 798 ???? F00F     	CHR16X24 "####........####"
 799 ???? F00F     	CHR16X24 "####........####"
 800 ???? F81F     	CHR16X24 "#####......#####"
 801 ???? 7FFE     	CHR16X24 ".##############."
 802 ???? 7FFE     	CHR16X24 ".##############."
 803 ???? 1FF8     	CHR16X24 "...##########..."
 804 ???? 0000     	CHR16X24 "................"
 805 ???? 0000     	CHR16X24 "................"
 806 ???? 0000     	CHR16X24 "................"
 807 ???? 0000     	CHR16X24 "................"
 808              	
 809 ???? FFFF     	CHR16X24 "################"
 810 ???? FFFF     	CHR16X24 "################"
 811 ???? FFFF     	CHR16X24 "################"
 812 ???? 0007     	CHR16X24 ".............###"
 813 ???? 000F     	CHR16X24 "............####"
 814 ???? 001F     	CHR16X24 "...........#####"
 815 ???? 003E     	CHR16X24 "..........#####."
 816 ???? 007C     	CHR16X24 ".........#####.."
 817 ???? 00F8     	CHR16X24 "........#####..."
 818 ???? 01F0     	CHR16X24 ".......#####...."
 819 ???? 03E0     	CHR16X24 "......#####....."
 820 ???? 07C0     	CHR16X24 ".....#####......"
 821 ???? 0F80     	CHR16X24 "....#####......."
 822 ???? 1F00     	CHR16X24 "...#####........"
 823 ???? 3E00     	CHR16X24 "..#####........."
 824 ???? 7C00     	CHR16X24 ".#####.........."
 825 ???? F800     	CHR16X24 "#####..........."
 826 ???? F000     	CHR16X24 "####............"
 827 ???? E000     	CHR16X24 "###............."
 828 ???? C000     	CHR16X24 "##.............."
 829 ???? 0000     	CHR16X24 "................"
 830 ???? 0000     	CHR16X24 "................"
 831 ???? 0000     	CHR16X24 "................"
 832 ???? 0000     	CHR16X24 "................"
 833              	
 834 ???? 1FF8     	CHR16X24 "...##########..."
 835 ???? 7FFE     	CHR16X24 ".##############."
 836 ???? 7FFE     	CHR16X24 ".##############."
 837 ???? F81F     	CHR16X24 "#####......#####"
 838 ???? F00F     	CHR16X24 "####........####"
 839 ???? F00F     	CHR16X24 "####........####"
 840 ???? F00F     	CHR16X24 "####........####"
 841 ???? F00F     	CHR16X24 "####........####"
 842 ???? F81F     	CHR16X24 "#####......#####"
 843 ???? 7FFE     	CHR16X24 ".##############."
 844 ???? 3FFC     	CHR16X24 "..############.."
 845 ???? 7FFE     	CHR16X24 ".##############."
 846 ???? F81F     	CHR16X24 "#####......#####"
 847 ???? F00F     	CHR16X24 "####........####"
 848 ???? F00F     	CHR16X24 "####........####"
 849 ???? F00F     	CHR16X24 "####........####"
 850 ???? F81F     	CHR16X24 "#####......#####"
 851 ???? 7FFE     	CHR16X24 ".##############."
 852 ???? 7FFE     	CHR16X24 ".##############."
 853 ???? 1FF8     	CHR16X24 "...##########..."
 854 ???? 0000     	CHR16X24 "................"
 855 ???? 0000     	CHR16X24 "................"
 856 ???? 0000     	CHR16X24 "................"
 857 ???? 0000     	CHR16X24 "................"
 858              	
 859 ???? 1FF8     	CHR16X24 "...##########..."
 860 ???? 7FFE     	CHR16X24 ".##############."
 861 ???? 7FFE     	CHR16X24 ".##############."
 862 ???? F81F     	CHR16X24 "#####......#####"
 863 ???? F00F     	CHR16X24 "####........####"
 864 ???? F00F     	CHR16X24 "####........####"
 865 ???? F00F     	CHR16X24 "####........####"
 866 ???? F00F     	CHR16X24 "####........####"
 867 ???? F81F     	CHR16X24 "#####......#####"
 868 ???? 7FFF     	CHR16X24 ".###############"
 869 ???? 7FFF     	CHR16X24 ".###############"
 870 ???? 1FEF     	CHR16X24 "...########.####"
 871 ???? 000F     	CHR16X24 "............####"
 872 ???? 000F     	CHR16X24 "............####"
 873 ???? 000F     	CHR16X24 "............####"
 874 ???? 000F     	CHR16X24 "............####"
 875 ???? F01F     	CHR16X24 "####.......#####"
 876 ???? 7FFE     	CHR16X24 ".##############."
 877 ???? 7FFE     	CHR16X24 ".##############."
 878 ???? 1FF8     	CHR16X24 "...##########..."
 879 ???? 0000     	CHR16X24 "................"
 880 ???? 0000     	CHR16X24 "................"
 881 ???? 0000     	CHR16X24 "................"
 882 ???? 0000     	CHR16X24 "................"
 883              	
 884 ???? 0078     	CHR16X24 ".........####..."
 885 ???? 0078     	CHR16X24 ".........####..."
 886 ???? 0078     	CHR16X24 ".........####..."
 887 ???? 0078     	CHR16X24 ".........####..."
 888 ???? 0000     	CHR16X24 "................"
 889 ???? 0000     	CHR16X24 "................"
 890 ???? 0000     	CHR16X24 "................"
 891 ???? 0078     	CHR16X24 ".........####..."
 892 ???? 0078     	CHR16X24 ".........####..."
 893 ???? 0078     	CHR16X24 ".........####..."
 894 ???? 0078     	CHR16X24 ".........####..."
 895 ???? 0078     	CHR16X24 ".........####..."
 896 ???? 0078     	CHR16X24 ".........####..."
 897 ???? 0078     	CHR16X24 ".........####..."
 898 ???? 0078     	CHR16X24 ".........####..."
 899 ???? 0078     	CHR16X24 ".........####..."
 900 ???? 0078     	CHR16X24 ".........####..."
 901 ???? 0078     	CHR16X24 ".........####..."
 902 ???? 0078     	CHR16X24 ".........####..."
 903 ???? 0078     	CHR16X24 ".........####..."
 904 ???? 1CF8     	CHR16X24 "...###..#####..."
 905 ???? 1FF0     	CHR16X24 "...#########...."
 906 ???? 0FF0     	CHR16X24 "....########...."
 907 ???? 07C0     	CHR16X24 ".....#####......"
 908              	
 909 ???? 0000     	CHR16X24 "................"
 910 ???? 0000     	CHR16X24 "................"
 911 ???? 0000     	CHR16X24 "................"
 912 ???? 0000     	CHR16X24 "................"
 913 ???? 0000     	CHR16X24 "................"
 914 ???? 0000     	CHR16X24 "................"
 915 ???? 0000     	CHR16X24 "................"
 916 ???? 0000     	CHR16X24 "................"
 917 ???? 0000     	CHR16X24 "................"
 918 ???? 0000     	CHR16X24 "................"
 919 ???? 0000     	CHR16X24 "................"
 920 ???? 7FFF     	CHR16X24 ".###############"
 921 ???? 7FFF     	CHR16X24 ".###############"
 922 ???? FFFE     	CHR16X24 "###############."
 923 ???? FFFE     	CHR16X24 "###############."
 924 ???? 0000     	CHR16X24 "................"
 925 ???? 0000     	CHR16X24 "................"
 926 ???? 0000     	CHR16X24 "................"
 927 ???? 0000     	CHR16X24 "................"
 928 ???? 0000     	CHR16X24 "................"
 929 ???? 0000     	CHR16X24 "................"
 930 ???? 0000     	CHR16X24 "................"
 931 ???? 0000     	CHR16X24 "................"
 932 ???? 0000     	CHR16X24 "................"
 933              	
 934 ???? F000     	CHR16X24 "####............"
 935 ???? F000     	CHR16X24 "####............"
 936 ???? F000     	CHR16X24 "####............"
 937 ???? F000     	CHR16X24 "####............"
 938 ???? F000     	CHR16X24 "####............"
 939 ???? F000     	CHR16X24 "####............"
 940 ???? F03C     	CHR16X24 "####......####.."
 941 ???? F0FC     	CHR16X24 "####....######.."
 942 ???? F3FC     	CHR16X24 "####..########.."
 943 ???? FFE0     	CHR16X24 "###########....."
 944 ???? FF80     	CHR16X24 "#########......."
 945 ???? FF00     	CHR16X24 "########........"
 946 ???? FF00     	CHR16X24 "########........"
 947 ???? FFC0     	CHR16X24 "##########......"
 948 ???? FFF0     	CHR16X24 "############...."
 949 ???? F3FC     	CHR16X24 "####..########.."
 950 ???? F0FF     	CHR16X24 "####....########"
 951 ???? F03F     	CHR16X24 "####......######"
 952 ???? F00F     	CHR16X24 "####........####"
 953 ???? F003     	CHR16X24 "####..........##"
 954 ???? 0000     	CHR16X24 "................"
 955 ???? 0000     	CHR16X24 "................"
 956 ???? 0000     	CHR16X24 "................"
 957 ???? 0000     	CHR16X24 "................"
 958              	
 959 ???? 0000     	CHR16X24 "................"
 960 ???? 0000     	CHR16X24 "................"
 961 ???? 0000     	CHR16X24 "................"
 962 ???? 0000     	CHR16X24 "................"
 963 ???? 0000     	CHR16X24 "................"
 964 ???? 0000     	CHR16X24 "................"
 965 ???? 0000     	CHR16X24 "................"
 966 ???? 0000     	CHR16X24 "................"
 967 ???? 0000     	CHR16X24 "................"
 968 ???? 0000     	CHR16X24 "................"
 969 ???? 0000     	CHR16X24 "................"
 970 ???? 0000     	CHR16X24 "................"
 971 ???? 0000     	CHR16X24 "................"
 972 ???? 0000     	CHR16X24 "................"
 973 ???? 0600     	CHR16X24 ".....##........."
 974 ???? 0F00     	CHR16X24 "....####........"
 975 ???? 1F80     	CHR16X24 "...######......."
 976 ???? 1F80     	CHR16X24 "...######......."
 977 ???? 0F00     	CHR16X24 "....####........"
 978 ???? 0600     	CHR16X24 ".....##........."
 979 ???? 0000     	CHR16X24 "................"
 980 ???? 0000     	CHR16X24 "................"
 981 ???? 0000     	CHR16X24 "................"
 982 ???? 0000     	CHR16X24 "................"
 983              	
 984 ???? 0000     	CHR16X24 "................"
 985 ???? 0000     	CHR16X24 "................"
 986 ???? 0000     	CHR16X24 "................"
 987 ???? 0000     	CHR16X24 "................"
 988 ???? 0000     	CHR16X24 "................"
 989 ???? 0000     	CHR16X24 "................"
 990 ???? FFFF     	CHR16X24 "################"
 991 ???? FFFF     	CHR16X24 "################"
 992 ???? FFFF     	CHR16X24 "################"
 993 ???? 001F     	CHR16X24 "...........#####"
 994 ???? 003F     	CHR16X24 "..........######"
 995 ???? 00FE     	CHR16X24 "........#######."
 996 ???? 03F8     	CHR16X24 "......#######..."
 997 ???? 0FE0     	CHR16X24 "....#######....."
 998 ???? 3F80     	CHR16X24 "..#######......."
 999 ???? FE00     	CHR16X24 "#######........."
 1000 ???? F800     	CHR16X24 "#####..........."
 1001 ???? FFFF     	CHR16X24 "################"
 1002 ???? FFFF     	CHR16X24 "################"
 1003 ???? FFFF     	CHR16X24 "################"
 1004 ???? 0000     	CHR16X24 "................"
 1005 ???? 0000     	CHR16X24 "................"
 1006 ???? 0000     	CHR16X24 "................"
 1007 ???? 0000     	CHR16X24 "................"
 1008              	
 1009 ???? 000F     	CHR16X24 "............####"
 1010 ???? 001F     	CHR16X24 "...........#####"
 1011 ???? 001F     	CHR16X24 "...........#####"
 1012 ???? 003E     	CHR16X24 "..........#####."
 1013 ???? 007C     	CHR16X24 ".........#####.."
 1014 ???? 007C     	CHR16X24 ".........#####.."
 1015 ???? 00F8     	CHR16X24 "........#####..."
 1016 ???? 01F0     	CHR16X24 ".......#####...."
 1017 ???? 01F0     	CHR16X24 ".......#####...."
 1018 ???? 03E0     	CHR16X24 "......#####....."
 1019 ???? 07C0     	CHR16X24 ".....#####......"
 1020 ???? 07C0     	CHR16X24 ".....#####......"
 1021 ???? 0F80     	CHR16X24 "....#####......."
 1022 ???? 1F00     	CHR16X24 "...#####........"
 1023 ???? 1F00     	CHR16X24 "...#####........"
 1024 ???? 3E00     	CHR16X24 "..#####........."
 1025 ???? 7C00     	CHR16X24 ".#####.........."
 1026 ???? 7C00     	CHR16X24 ".#####.........."
 1027 ???? F800     	CHR16X24 "#####..........."
 1028 ???? F800     	CHR16X24 "#####..........."
 1029 ???? 0000     	CHR16X24 "................"
 1030 ???? 0000     	CHR16X24 "................"
 1031 ???? 0000     	CHR16X24 "................"
 1032 ???? 0000     	CHR16X24 "................"
 1033              	
 1034 ???? 0000     	CHR16X24 "................"
 1035 ???? 0000     	CHR16X24 "................"
 1036 ???? 0000     	CHR16X24 "................"
 1037 ???? 0700     	CHR16X24 ".....###........"
 1038 ???? 0F80     	CHR16X24 "....#####......."
 1039 ???? 1FC0     	CHR16X24 "...#######......"
 1040 ???? 1FC0     	CHR16X24 "...#######......"
 1041 ???? 1FC0     	CHR16X24 "...#######......"
 1042 ???? 0F80     	CHR16X24 "....#####......."
 1043 ???? 0700     	CHR16X24 ".....###........"
 1044 ???? 0000     	CHR16X24 "................"
 1045 ???? 0000     	CHR16X24 "................"
 1046 ???? 0000     	CHR16X24 "................"
 1047 ???? 0700     	CHR16X24 ".....###........"
 1048 ???? 0F80     	CHR16X24 "....#####......."
 1049 ???? 1FC0     	CHR16X24 "...#######......"
 1050 ???? 1FC0     	CHR16X24 "...#######......"
 1051 ???? 1FC0     	CHR16X24 "...#######......"
 1052 ???? 0F80     	CHR16X24 "....#####......."
 1053 ???? 0780     	CHR16X24 ".....####......."
 1054 ???? 0380     	CHR16X24 "......###......."
 1055 ???? 0700     	CHR16X24 ".....###........"
 1056 ???? 0E00     	CHR16X24 "....###........."
 1057 ???? 1C00     	CHR16X24 "...###.........."
 1058              	
 1059 ???? 0000     	CHR16X24 "................"
 1060 ???? 0000     	CHR16X24 "................"
 1061 ???? 0000     	CHR16X24 "................"
 1062 ???? 0700     	CHR16X24 ".....###........"
 1063 ???? 0F80     	CHR16X24 "....#####......."
 1064 ???? 1FC0     	CHR16X24 "...#######......"
 1065 ???? 1FC0     	CHR16X24 "...#######......"
 1066 ???? 1FC0     	CHR16X24 "...#######......"
 1067 ???? 0F80     	CHR16X24 "....#####......."
 1068 ???? 0700     	CHR16X24 ".....###........"
 1069 ???? 0000     	CHR16X24 "................"
 1070 ???? 0000     	CHR16X24 "................"
 1071 ???? 0000     	CHR16X24 "................"
 1072 ???? 0700     	CHR16X24 ".....###........"
 1073 ???? 0F80     	CHR16X24 "....#####......."
 1074 ???? 1FC0     	CHR16X24 "...#######......"
 1075 ???? 1FC0     	CHR16X24 "...#######......"
 1076 ???? 1FC0     	CHR16X24 "...#######......"
 1077 ???? 0F80     	CHR16X24 "....#####......."
 1078 ???? 0700     	CHR16X24 ".....###........"
 1079 ???? 0000     	CHR16X24 "................"
 1080 ???? 0000     	CHR16X24 "................"
 1081 ???? 0000     	CHR16X24 "................"
 1082 ???? 0000     	CHR16X24 "................"
 1083              	
 1084 ???? 0180     	CHR16X24 ".......##......."
 1085 ???? 03C0     	CHR16X24 "......####......"
 1086 ???? 03C0     	CHR16X24 "......####......"
 1087 ???? 07E0     	CHR16X24 ".....######....."
 1088 ???? 07E0     	CHR16X24 ".....######....."
 1089 ???? 07E0     	CHR16X24 ".....######....."
 1090 ???? 07E0     	CHR16X24 ".....######....."
 1091 ???? 07E0     	CHR16X24 ".....######....."
 1092 ???? 03C0     	CHR16X24 "......####......"
 1093 ???? 03C0     	CHR16X24 "......####......"
 1094 ???? 0180     	CHR16X24 ".......##......."
 1095 ???? 0180     	CHR16X24 ".......##......."
 1096 ???? 0180     	CHR16X24 ".......##......."
 1097 ???? 0000     	CHR16X24 "................"
 1098 ???? 0000     	CHR16X24 "................"
 1099 ???? 0000     	CHR16X24 "................"
 1100 ???? 03C0     	CHR16X24 "......####......"
 1101 ???? 03C0     	CHR16X24 "......####......"
 1102 ???? 03C0     	CHR16X24 "......####......"
 1103 ???? 03C0     	CHR16X24 "......####......"
 1104 ???? 0000     	CHR16X24 "................"
 1105 ???? 0000     	CHR16X24 "................"
 1106 ???? 0000     	CHR16X24 "................"
 1107 ???? 0000     	CHR16X24 "................"
 1108              	
 1109 ???? 0000     	CHR16X24 "................"
 1110 ???? 0000     	CHR16X24 "................"
 1111 ???? 0000     	CHR16X24 "................"
 1112 ???? 0000     	CHR16X24 "................"
 1113 ???? 0000     	CHR16X24 "................"
 1114 ???? 0000     	CHR16X24 "................"
 1115 ???? 03C0     	CHR16X24 "......####......"
 1116 ???? 03C0     	CHR16X24 "......####......"
 1117 ???? 03C0     	CHR16X24 "......####......"
 1118 ???? 03C0     	CHR16X24 "......####......"
 1119 ???? 03C0     	CHR16X24 "......####......"
 1120 ???? 7FFE     	CHR16X24 ".##############."
 1121 ???? 7FFE     	CHR16X24 ".##############."
 1122 ???? 7FFE     	CHR16X24 ".##############."
 1123 ???? 7FFE     	CHR16X24 ".##############."
 1124 ???? 03C0     	CHR16X24 "......####......"
 1125 ???? 03C0     	CHR16X24 "......####......"
 1126 ???? 03C0     	CHR16X24 "......####......"
 1127 ???? 03C0     	CHR16X24 "......####......"
 1128 ???? 03C0     	CHR16X24 "......####......"
 1129 ???? 0000     	CHR16X24 "................"
 1130 ???? 0000     	CHR16X24 "................"
 1131 ???? 0000     	CHR16X24 "................"
 1132 ???? 0000     	CHR16X24 "................"
 1133              	
 1134 ???? 1FF8     	CHR16X24 "...##########..."
 1135 ???? 7FFE     	CHR16X24 ".##############."
 1136 ???? 7FFE     	CHR16X24 ".##############."
 1137 ???? F00F     	CHR16X24 "####........####"
 1138 ???? E007     	CHR16X24 "###..........###"
 1139 ???? E007     	CHR16X24 "###..........###"
 1140 ???? E1C7     	CHR16X24 "###....###...###"
 1141 ???? E3E7     	CHR16X24 "###...#####..###"
 1142 ???? E3E7     	CHR16X24 "###...#####..###"
 1143 ???? E3E7     	CHR16X24 "###...#####..###"
 1144 ???? E3FF     	CHR16X24 "###...##########"
 1145 ???? E3FE     	CHR16X24 "###...#########."
 1146 ???? E3FE     	CHR16X24 "###...#########."
 1147 ???? E1F8     	CHR16X24 "###....######..."
 1148 ???? E000     	CHR16X24 "###............."
 1149 ???? E000     	CHR16X24 "###............."
 1150 ???? F00F     	CHR16X24 "####........####"
 1151 ???? 7FFE     	CHR16X24 ".##############."
 1152 ???? 7FFE     	CHR16X24 ".##############."
 1153 ???? 1FF8     	CHR16X24 "...##########..."
 1154 ???? 0000     	CHR16X24 "................"
 1155 ???? 0000     	CHR16X24 "................"
 1156 ???? 0000     	CHR16X24 "................"
 1157 ???? 0000     	CHR16X24 "................"
 1158              	
 1159 ???? 0000     	CHR16X24 "................"
 1160 ???? 0000     	CHR16X24 "................"
 1161 ???? 0000     	CHR16X24 "................"
 1162 ???? 0000     	CHR16X24 "................"
 1163 ???? 0000     	CHR16X24 "................"
 1164 ???? 0000     	CHR16X24 "................"
 1165 ???? 0000     	CHR16X24 "................"
 1166 ???? 0830     	CHR16X24 "....#.....##...."
 1167 ???? 1C78     	CHR16X24 "...###...####..."
 1168 ???? 1EF0     	CHR16X24 "...####.####...."
 1169 ???? 0FE0     	CHR16X24 "....#######....."
 1170 ???? 07C0     	CHR16X24 ".....#####......"
 1171 ???? 03E0     	CHR16X24 "......#####....."
 1172 ???? 07F0     	CHR16X24 ".....#######...."
 1173 ???? 0F78     	CHR16X24 "....####.####..."
 1174 ???? 1E38     	CHR16X24 "...####...###..."
 1175 ???? 0C10     	CHR16X24 "....##.....#...."
 1176 ???? 0000     	CHR16X24 "................"
 1177 ???? 0000     	CHR16X24 "................"
 1178 ???? 0000     	CHR16X24 "................"
 1179 ???? 0000     	CHR16X24 "................"
 1180 ???? 0000     	CHR16X24 "................"
 1181 ???? 0000     	CHR16X24 "................"
 1182 ???? 0000     	CHR16X24 "................"
 1183              	
 1184 ???? 0000     	CHR16X24 "................"
 1185 ???? 0000     	CHR16X24 "................"
 1186 ???? 0000     	CHR16X24 "................"
 1187 ???? 0000     	CHR16X24 "................"
 1188 ???? 0000     	CHR16X24 "................"
 1189 ???? 0000     	CHR16X24 "................"
 1190 ???? 0000     	CHR16X24 "................"
 1191 ???? 0000     	CHR16X24 "................"
 1192 ???? 0000     	CHR16X24 "................"
 1193 ???? 0000     	CHR16X24 "................"
 1194 ???? 0000     	CHR16X24 "................"
 1195 ???? 0000     	CHR16X24 "................"
 1196 ???? 0000     	CHR16X24 "................"
 1197 ???? 0700     	CHR16X24 ".....###........"
 1198 ???? 0F80     	CHR16X24 "....#####......."
 1199 ???? 1FC0     	CHR16X24 "...#######......"
 1200 ???? 1FC0     	CHR16X24 "...#######......"
 1201 ???? 1FC0     	CHR16X24 "...#######......"
 1202 ???? 0FC0     	CHR16X24 "....######......"
 1203 ???? 07C0     	CHR16X24 ".....#####......"
 1204 ???? 0380     	CHR16X24 "......###......."
 1205 ???? 0700     	CHR16X24 ".....###........"
 1206 ???? 0E00     	CHR16X24 "....###........."
 1207 ???? 1C00     	CHR16X24 "...###.........."
 1208              	
 1209 ???? 1FF8     	CHR16X24 "...##########..."
 1210 ???? 7FFE     	CHR16X24 ".##############."
 1211 ???? 7FFE     	CHR16X24 ".##############."
 1212 ???? F00F     	CHR16X24 "####........####"
 1213 ???? 0007     	CHR16X24 ".............###"
 1214 ???? 0007     	CHR16X24 ".............###"
 1215 ???? 000F     	CHR16X24 "............####"
 1216 ???? 007E     	CHR16X24 ".........######."
 1217 ???? 01FE     	CHR16X24 ".......########."
 1218 ???? 01F8     	CHR16X24 ".......######..."
 1219 ???? 03E0     	CHR16X24 "......#####....."
 1220 ???? 03C0     	CHR16X24 "......####......"
 1221 ???? 03C0     	CHR16X24 "......####......"
 1222 ???? 0000     	CHR16X24 "................"
 1223 ???? 0000     	CHR16X24 "................"
 1224 ???? 0000     	CHR16X24 "................"
 1225 ???? 03C0     	CHR16X24 "......####......"
 1226 ???? 03C0     	CHR16X24 "......####......"
 1227 ???? 03C0     	CHR16X24 "......####......"
 1228 ???? 03C0     	CHR16X24 "......####......"
 1229 ???? 0000     	CHR16X24 "................"
 1230 ???? 0000     	CHR16X24 "................"
 1231 ???? 0000     	CHR16X24 "................"
 1232 ???? 0000     	CHR16X24 "................"
 1233              	
 1234 ???? FFF0     	CHR16X24 "############...."
 1235 ???? FFFC     	CHR16X24 "##############.."
 1236 ???? FFFE     	CHR16X24 "###############."
 1237 ???? 7FFE     	CHR16X24 ".##############."
 1238 ???? 3FFF     	CHR16X24 "..##############"
 1239 ???? 1FFF     	CHR16X24 "...#############"
 1240 ???? 0FFF     	CHR16X24 "....############"
 1241 ???? 07FF     	CHR16X24 ".....###########"
 1242 ???? 03FF     	CHR16X24 "......##########"
 1243 ???? 01FF     	CHR16X24 ".......#########"
 1244 ???? 00FF     	CHR16X24 "........########"
 1245 ???? 00FF     	CHR16X24 "........########"
 1246 ???? 00FF     	CHR16X24 "........########"
 1247 ???? 00FF     	CHR16X24 "........########"
 1248 ???? 01FF     	CHR16X24 ".......#########"
 1249 ???? 03FF     	CHR16X24 "......##########"
 1250 ???? 07FF     	CHR16X24 ".....###########"
 1251 ???? 0FFF     	CHR16X24 "....############"
 1252 ???? 1FFF     	CHR16X24 "...#############"
 1253 ???? 3FFF     	CHR16X24 "..##############"
 1254 ???? 7FFE     	CHR16X24 ".##############."
 1255 ???? FFFE     	CHR16X24 "###############."
 1256 ???? FFFC     	CHR16X24 "##############.."
 1257 ???? FFF0     	CHR16X24 "############...."
 1258              	
 1259 ???? FFF8     	CHR16X24 "#############..."
 1260 ???? FFFE     	CHR16X24 "###############."
 1261 ???? FFFE     	CHR16X24 "###############."
 1262 ???? FFFF     	CHR16X24 "################"
 1263 ???? F01F     	CHR16X24 "####.......#####"
 1264 ???? F00F     	CHR16X24 "####........####"
 1265 ???? F00F     	CHR16X24 "####........####"
 1266 ???? F00F     	CHR16X24 "####........####"
 1267 ???? F01F     	CHR16X24 "####.......#####"
 1268 ???? FFFF     	CHR16X24 "################"
 1269 ???? FFFE     	CHR16X24 "###############."
 1270 ???? FFFE     	CHR16X24 "###############."
 1271 ???? FFF8     	CHR16X24 "#############..."
 1272 ???? FFC0     	CHR16X24 "##########......"
 1273 ???? F7E0     	CHR16X24 "####.######....."
 1274 ???? F3F0     	CHR16X24 "####..######...."
 1275 ???? F1F8     	CHR16X24 "####...######..."
 1276 ???? F0FC     	CHR16X24 "####....######.."
 1277 ???? F07E     	CHR16X24 "####.....######."
 1278 ???? F03F     	CHR16X24 "####......######"
 1279 ???? F01F     	CHR16X24 "####.......#####"
 1280 ???? F00F     	CHR16X24 "####........####"
 1281 ???? 0000     	CHR16X24 "................"
 1282 ???? 0000     	CHR16X24 "................"
 1283              	
 1284 ???? FFFF     	CHR16X24 "################"
 1285 ???? FFFF     	CHR16X24 "################"
 1286 ???? FFFF     	CHR16X24 "################"
 1287 ???? FFFF     	CHR16X24 "################"
 1288 ???? 03C0     	CHR16X24 "......####......"
 1289 ???? 03C0     	CHR16X24 "......####......"
 1290 ???? 03C0     	CHR16X24 "......####......"
 1291 ???? 03C0     	CHR16X24 "......####......"
 1292 ???? 03C0     	CHR16X24 "......####......"
 1293 ???? 03C0     	CHR16X24 "......####......"
 1294 ???? 03C0     	CHR16X24 "......####......"
 1295 ???? 03C0     	CHR16X24 "......####......"
 1296 ???? 03C0     	CHR16X24 "......####......"
 1297 ???? 03C0     	CHR16X24 "......####......"
 1298 ???? 03C0     	CHR16X24 "......####......"
 1299 ???? 03C0     	CHR16X24 "......####......"
 1300 ???? 03C0     	CHR16X24 "......####......"
 1301 ???? 03C0     	CHR16X24 "......####......"
 1302 ???? 03C0     	CHR16X24 "......####......"
 1303 ???? 03C0     	CHR16X24 "......####......"
 1304 ???? 03C0     	CHR16X24 "......####......"
 1305 ???? 03C0     	CHR16X24 "......####......"
 1306 ???? 0000     	CHR16X24 "................"
 1307 ???? 0000     	CHR16X24 "................"
 1308              	
 1309 ???? 1FF8     	CHR16X24 "...##########..."
 1310 ???? 7FFE     	CHR16X24 ".##############."
 1311 ???? 7FFE     	CHR16X24 ".##############."
 1312 ???? FFFF     	CHR16X24 "################"
 1313 ???? F81F     	CHR16X24 "#####......#####"
 1314 ???? F00F     	CHR16X24 "####........####"
 1315 ???? F00F     	CHR16X24 "####........####"
 1316 ???? F00F     	CHR16X24 "####........####"
 1317 ???? F00F     	CHR16X24 "####........####"
 1318 ???? F00F     	CHR16X24 "####........####"
 1319 ???? F00F     	CHR16X24 "####........####"
 1320 ???? F00F     	CHR16X24 "####........####"
 1321 ???? F00F     	CHR16X24 "####........####"
 1322 ???? F00F     	CHR16X24 "####........####"
 1323 ???? F00F     	CHR16X24 "####........####"
 1324 ???? F00F     	CHR16X24 "####........####"
 1325 ???? F00F     	CHR16X24 "####........####"
 1326 ???? F81F     	CHR16X24 "#####......#####"
 1327 ???? FFFF     	CHR16X24 "################"
 1328 ???? 7FFE     	CHR16X24 ".##############."
 1329 ???? 7FFE     	CHR16X24 ".##############."
 1330 ???? 1FF8     	CHR16X24 "...##########..."
 1331 ???? 0000     	CHR16X24 "................"
 1332 ???? 0000     	CHR16X24 "................"
 1333              	
 1334 ???? FFFF     	CHR16X24 "################"
 1335 ???? FFFF     	CHR16X24 "################"
 1336 ???? FFFF     	CHR16X24 "################"
 1337 ???? FFFF     	CHR16X24 "################"
 1338 ???? F000     	CHR16X24 "####............"
 1339 ???? F000     	CHR16X24 "####............"
 1340 ???? F000     	CHR16X24 "####............"
 1341 ???? F000     	CHR16X24 "####............"
 1342 ???? F000     	CHR16X24 "####............"
 1343 ???? FFE0     	CHR16X24 "###########....."
 1344 ???? FFE0     	CHR16X24 "###########....."
 1345 ???? FFE0     	CHR16X24 "###########....."
 1346 ???? FFE0     	CHR16X24 "###########....."
 1347 ???? F000     	CHR16X24 "####............"
 1348 ???? F000     	CHR16X24 "####............"
 1349 ???? F000     	CHR16X24 "####............"
 1350 ???? F000     	CHR16X24 "####............"
 1351 ???? F000     	CHR16X24 "####............"
 1352 ???? FFFF     	CHR16X24 "################"
 1353 ???? FFFF     	CHR16X24 "################"
 1354 ???? FFFF     	CHR16X24 "################"
 1355 ???? FFFF     	CHR16X24 "################"
 1356 ???? 0000     	CHR16X24 "................"
 1357 ???? 0000     	CHR16X24 "................"
 1358              	
 1359 ???? 0180     	CHR16X24 ".......##......."
 1360 ???? 0180     	CHR16X24 ".......##......."
 1361 ???? 03C0     	CHR16X24 "......####......"
 1362 ???? 03C0     	CHR16X24 "......####......"
 1363 ???? 07E0     	CHR16X24 ".....######....."
 1364 ???? 07E0     	CHR16X24 ".....######....."
 1365 ???? 07E0     	CHR16X24 ".....######....."
 1366 ???? 0FF0     	CHR16X24 "....########...."
 1367 ???? 0E70     	CHR16X24 "....###..###...."
 1368 ???? 0E70     	CHR16X24 "....###..###...."
 1369 ???? 1E78     	CHR16X24 "...####..####..."
 1370 ???? 1FF8     	CHR16X24 "...##########..."
 1371 ???? 1FF8     	CHR16X24 "...##########..."
 1372 ???? 3FFC     	CHR16X24 "..############.."
 1373 ???? 3FFC     	CHR16X24 "..############.."
 1374 ???? 381C     	CHR16X24 "..###......###.."
 1375 ???? 781E     	CHR16X24 ".####......####."
 1376 ???? 700E     	CHR16X24 ".###........###."
 1377 ???? F00F     	CHR16X24 "####........####"
 1378 ???? F00F     	CHR16X24 "####........####"
 1379 ???? E007     	CHR16X24 "###..........###"
 1380 ???? E007     	CHR16X24 "###..........###"
 1381 ???? 0000     	CHR16X24 "................"
 1382 ???? 0000     	CHR16X24 "................"
 1383              	
 1384 ???? F80F     	CHR16X24 "#####.......####"
 1385 ???? FC0F     	CHR16X24 "######......####"
 1386 ???? FC0F     	CHR16X24 "######......####"
 1387 ???? FE0F     	CHR16X24 "#######.....####"
 1388 ???? FE0F     	CHR16X24 "#######.....####"
 1389 ???? FF0F     	CHR16X24 "########....####"
 1390 ???? F70F     	CHR16X24 "####.###....####"
 1391 ???? F70F     	CHR16X24 "####.###....####"
 1392 ???? F78F     	CHR16X24 "####.####...####"
 1393 ???? F38F     	CHR16X24 "####..###...####"
 1394 ???? F3CF     	CHR16X24 "####..####..####"
 1395 ???? F3CF     	CHR16X24 "####..####..####"
 1396 ???? F1CF     	CHR16X24 "####...###..####"
 1397 ???? F1EF     	CHR16X24 "####...####.####"
 1398 ???? F0EF     	CHR16X24 "####....###.####"
 1399 ???? F0EF     	CHR16X24 "####....###.####"
 1400 ???? F0FF     	CHR16X24 "####....########"
 1401 ???? F07F     	CHR16X24 "####.....#######"
 1402 ???? F07F     	CHR16X24 "####.....#######"
 1403 ???? F03F     	CHR16X24 "####......######"
 1404 ???? F03F     	CHR16X24 "####......######"
 1405 ???? F01F     	CHR16X24 "####.......#####"
 1406 ???? 0000     	CHR16X24 "................"
 1407 ???? 0000     	CHR16X24 "................"
 1408              	
 1409 ???? 03C0     	CHR16X24 "......####......"
 1410 ???? 03C0     	CHR16X24 "......####......"
 1411 ???? 03C0     	CHR16X24 "......####......"
 1412 ???? 03C0     	CHR16X24 "......####......"
 1413 ???? 03C0     	CHR16X24 "......####......"
 1414 ???? 03C0     	CHR16X24 "......####......"
 1415 ???? 03C0     	CHR16X24 "......####......"
 1416 ???? 03C0     	CHR16X24 "......####......"
 1417 ???? 03C0     	CHR16X24 "......####......"
 1418 ???? 03C0     	CHR16X24 "......####......"
 1419 ???? 03C0     	CHR16X24 "......####......"
 1420 ???? 03C0     	CHR16X24 "......####......"
 1421 ???? 03C0     	CHR16X24 "......####......"
 1422 ???? 03C0     	CHR16X24 "......####......"
 1423 ???? 03C0     	CHR16X24 "......####......"
 1424 ???? 03C0     	CHR16X24 "......####......"
 1425 ???? 03C0     	CHR16X24 "......####......"
 1426 ???? 03C0     	CHR16X24 "......####......"
 1427 ???? 03C0     	CHR16X24 "......####......"
 1428 ???? 03C0     	CHR16X24 "......####......"
 1429 ???? 03C0     	CHR16X24 "......####......"
 1430 ???? 03C0     	CHR16X24 "......####......"
 1431 ???? 0000     	CHR16X24 "................"
 1432 ???? 0000     	CHR16X24 "................"
 1433              	
 1434 ???? 1FF8     	CHR16X24 "...##########..."
 1435 ???? 7FFE     	CHR16X24 ".##############."
 1436 ???? 7FFE     	CHR16X24 ".##############."
 1437 ???? FFFF     	CHR16X24 "################"
 1438 ???? F803     	CHR16X24 "#####.........##"
 1439 ???? F000     	CHR16X24 "####............"
 1440 ???? F000     	CHR16X24 "####............"
 1441 ???? F000     	CHR16X24 "####............"
 1442 ???? F800     	CHR16X24 "#####..........."
 1443 ???? FFF8     	CHR16X24 "#############..."
 1444 ???? 7FFE     	CHR16X24 ".##############."
 1445 ???? 7FFE     	CHR16X24 ".##############."
 1446 ???? 1FFF     	CHR16X24 "...#############"
 1447 ???? 001F     	CHR16X24 "...........#####"
 1448 ???? 000F     	CHR16X24 "............####"
 1449 ???? 000F     	CHR16X24 "............####"
 1450 ???? 000F     	CHR16X24 "............####"
 1451 ???? C01F     	CHR16X24 "##.........#####"
 1452 ???? FFFF     	CHR16X24 "################"
 1453 ???? 7FFE     	CHR16X24 ".##############."
 1454 ???? 7FFE     	CHR16X24 ".##############."
 1455 ???? 1FF8     	CHR16X24 "...##########..."
 1456 ???? 0000     	CHR16X24 "................"
 1457 ???? 0000     	CHR16X24 "................"
 1458              	
 1459 ???? E007     	CHR16X24 "###..........###"
 1460 ???? E007     	CHR16X24 "###..........###"
 1461 ???? F00F     	CHR16X24 "####........####"
 1462 ???? F81F     	CHR16X24 "#####......#####"
 1463 ???? F81F     	CHR16X24 "#####......#####"
 1464 ???? FC3F     	CHR16X24 "######....######"
 1465 ???? FE7F     	CHR16X24 "#######..#######"
 1466 ???? EE77     	CHR16X24 "###.###..###.###"
 1467 ???? E7E7     	CHR16X24 "###..######..###"
 1468 ???? E7E7     	CHR16X24 "###..######..###"
 1469 ???? E3C7     	CHR16X24 "###...####...###"
 1470 ???? E187     	CHR16X24 "###....##....###"
 1471 ???? E007     	CHR16X24 "###..........###"
 1472 ???? E007     	CHR16X24 "###..........###"
 1473 ???? E007     	CHR16X24 "###..........###"
 1474 ???? E007     	CHR16X24 "###..........###"
 1475 ???? E007     	CHR16X24 "###..........###"
 1476 ???? E007     	CHR16X24 "###..........###"
 1477 ???? E007     	CHR16X24 "###..........###"
 1478 ???? E007     	CHR16X24 "###..........###"
 1479 ???? E007     	CHR16X24 "###..........###"
 1480 ???? E007     	CHR16X24 "###..........###"
 1481 ???? 0000     	CHR16X24 "................"
 1482 ???? 0000     	CHR16X24 "................"
 1483              	
 1484 ???? 1FF8     	CHR16X24 "...##########..."
 1485 ???? 7FFE     	CHR16X24 ".##############."
 1486 ???? 7FFE     	CHR16X24 ".##############."
 1487 ???? FFFF     	CHR16X24 "################"
 1488 ???? F81F     	CHR16X24 "#####......#####"
 1489 ???? F00F     	CHR16X24 "####........####"
 1490 ???? F000     	CHR16X24 "####............"
 1491 ???? F000     	CHR16X24 "####............"
 1492 ???? F000     	CHR16X24 "####............"
 1493 ???? F000     	CHR16X24 "####............"
 1494 ???? F000     	CHR16X24 "####............"
 1495 ???? F000     	CHR16X24 "####............"
 1496 ???? F000     	CHR16X24 "####............"
 1497 ???? F000     	CHR16X24 "####............"
 1498 ???? F000     	CHR16X24 "####............"
 1499 ???? F000     	CHR16X24 "####............"
 1500 ???? F00F     	CHR16X24 "####........####"
 1501 ???? F81F     	CHR16X24 "#####......#####"
 1502 ???? FFFF     	CHR16X24 "################"
 1503 ???? 7FFE     	CHR16X24 ".##############."
 1504 ???? 7FFE     	CHR16X24 ".##############."
 1505 ???? 1FF8     	CHR16X24 "...##########..."
 1506 ???? 0000     	CHR16X24 "................"
 1507 ???? 0000     	CHR16X24 "................"
 1508              	
 1509 ???? E007     	CHR16X24 "###..........###"
 1510 ???? F00F     	CHR16X24 "####........####"
 1511 ???? F00F     	CHR16X24 "####........####"
 1512 ???? 781E     	CHR16X24 ".####......####."
 1513 ???? 781E     	CHR16X24 ".####......####."
 1514 ???? 3C3C     	CHR16X24 "..####....####.."
 1515 ???? 3C3C     	CHR16X24 "..####....####.."
 1516 ???? 1E78     	CHR16X24 "...####..####..."
 1517 ???? 0FF0     	CHR16X24 "....########...."
 1518 ???? 0FF0     	CHR16X24 "....########...."
 1519 ???? 07E0     	CHR16X24 ".....######....."
 1520 ???? 03C0     	CHR16X24 "......####......"
 1521 ???? 03C0     	CHR16X24 "......####......"
 1522 ???? 03C0     	CHR16X24 "......####......"
 1523 ???? 03C0     	CHR16X24 "......####......"
 1524 ???? 03C0     	CHR16X24 "......####......"
 1525 ???? 03C0     	CHR16X24 "......####......"
 1526 ???? 03C0     	CHR16X24 "......####......"
 1527 ???? 03C0     	CHR16X24 "......####......"
 1528 ???? 03C0     	CHR16X24 "......####......"
 1529 ???? 03C0     	CHR16X24 "......####......"
 1530 ???? 03C0     	CHR16X24 "......####......"
 1531 ???? 0000     	CHR16X24 "................"
 1532 ???? 0000     	CHR16X24 "................"
 1533              	
 1534 ???? F000     	CHR16X24 "####............"
 1535 ???? F000     	CHR16X24 "####............"
 1536 ???? F000     	CHR16X24 "####............"
 1537 ???? F000     	CHR16X24 "####............"
 1538 ???? F000     	CHR16X24 "####............"
 1539 ???? F000     	CHR16X24 "####............"
 1540 ???? F000     	CHR16X24 "####............"
 1541 ???? F000     	CHR16X24 "####............"
 1542 ???? F000     	CHR16X24 "####............"
 1543 ???? F000     	CHR16X24 "####............"
 1544 ???? F000     	CHR16X24 "####............"
 1545 ???? F000     	CHR16X24 "####............"
 1546 ???? F000     	CHR16X24 "####............"
 1547 ???? F000     	CHR16X24 "####............"
 1548 ???? F000     	CHR16X24 "####............"
 1549 ???? F000     	CHR16X24 "####............"
 1550 ???? F000     	CHR16X24 "####............"
 1551 ???? F000     	CHR16X24 "####............"
 1552 ???? FFFF     	CHR16X24 "################"
 1553 ???? FFFF     	CHR16X24 "################"
 1554 ???? FFFF     	CHR16X24 "################"
 1555 ???? FFFF     	CHR16X24 "################"
 1556 ???? 0000     	CHR16X24 "................"
 1557 ???? 0000     	CHR16X24 "................"
 1558              	
 1559 ???? 1FF8     	CHR16X24 "...##########..."
 1560 ???? 7FFE     	CHR16X24 ".##############."
 1561 ???? 7FFE     	CHR16X24 ".##############."
 1562 ???? FFFF     	CHR16X24 "################"
 1563 ???? F81F     	CHR16X24 "#####......#####"
 1564 ???? F00F     	CHR16X24 "####........####"
 1565 ???? F000     	CHR16X24 "####............"
 1566 ???? F000     	CHR16X24 "####............"
 1567 ???? F000     	CHR16X24 "####............"
 1568 ???? F000     	CHR16X24 "####............"
 1569 ???? F000     	CHR16X24 "####............"
 1570 ???? F03F     	CHR16X24 "####......######"
 1571 ???? F03F     	CHR16X24 "####......######"
 1572 ???? F03F     	CHR16X24 "####......######"
 1573 ???? F00F     	CHR16X24 "####........####"
 1574 ???? F00F     	CHR16X24 "####........####"
 1575 ???? F00F     	CHR16X24 "####........####"
 1576 ???? F81F     	CHR16X24 "#####......#####"
 1577 ???? FFFF     	CHR16X24 "################"
 1578 ???? 7FFE     	CHR16X24 ".##############."
 1579 ???? 7FFE     	CHR16X24 ".##############."
 1580 ???? 1FF8     	CHR16X24 "...##########..."
 1581 ???? 0000     	CHR16X24 "................"
 1582 ???? 0000     	CHR16X24 "................"
 1583              	
 1584 ???? FFFF     	CHR16X24 "################"
 1585 ???? FFFF     	CHR16X24 "################"
 1586 ???? FFFF     	CHR16X24 "################"
 1587 ???? FFFF     	CHR16X24 "################"
 1588 ???? F000     	CHR16X24 "####............"
 1589 ???? F000     	CHR16X24 "####............"
 1590 ???? F000     	CHR16X24 "####............"
 1591 ???? F000     	CHR16X24 "####............"
 1592 ???? F000     	CHR16X24 "####............"
 1593 ???? FFE0     	CHR16X24 "###########....."
 1594 ???? FFE0     	CHR16X24 "###########....."
 1595 ???? FFE0     	CHR16X24 "###########....."
 1596 ???? FFE0     	CHR16X24 "###########....."
 1597 ???? F000     	CHR16X24 "####............"
 1598 ???? F000     	CHR16X24 "####............"
 1599 ???? F000     	CHR16X24 "####............"
 1600 ???? F000     	CHR16X24 "####............"
 1601 ???? F000     	CHR16X24 "####............"
 1602 ???? F000     	CHR16X24 "####............"
 1603 ???? F000     	CHR16X24 "####............"
 1604 ???? F000     	CHR16X24 "####............"
 1605 ???? F000     	CHR16X24 "####............"
 1606 ???? 0000     	CHR16X24 "................"
 1607 ???? 0000     	CHR16X24 "................"
 1608              	
 1609 ???? C003     	CHR16X24 "##............##"
 1610 ???? E007     	CHR16X24 "###..........###"
 1611 ???? E007     	CHR16X24 "###..........###"
 1612 ???? E007     	CHR16X24 "###..........###"
 1613 ???? E007     	CHR16X24 "###..........###"
 1614 ???? 700E     	CHR16X24 ".###........###."
 1615 ???? 700E     	CHR16X24 ".###........###."
 1616 ???? 700E     	CHR16X24 ".###........###."
 1617 ???? 700E     	CHR16X24 ".###........###."
 1618 ???? 700E     	CHR16X24 ".###........###."
 1619 ???? 718E     	CHR16X24 ".###...##...###."
 1620 ???? 718E     	CHR16X24 ".###...##...###."
 1621 ???? 399C     	CHR16X24 "..###..##..###.."
 1622 ???? 3BDC     	CHR16X24 "..###.####.###.."
 1623 ???? 3FFC     	CHR16X24 "..############.."
 1624 ???? 3FFC     	CHR16X24 "..############.."
 1625 ???? 1FF8     	CHR16X24 "...##########..."
 1626 ???? 1E78     	CHR16X24 "...####..####..."
 1627 ???? 1C38     	CHR16X24 "...###....###..."
 1628 ???? 1C38     	CHR16X24 "...###....###..."
 1629 ???? 1818     	CHR16X24 "...##......##..."
 1630 ???? 1818     	CHR16X24 "...##......##..."
 1631 ???? 0000     	CHR16X24 "................"
 1632 ???? 0000     	CHR16X24 "................"
 1633              	
 1634 ???? FFE0     	CHR16X24 "###########....."
 1635 ???? FFF8     	CHR16X24 "#############..."
 1636 ???? FFFC     	CHR16X24 "##############.."
 1637 ???? FFFE     	CHR16X24 "###############."
 1638 ???? F03E     	CHR16X24 "####......#####."
 1639 ???? F01F     	CHR16X24 "####.......#####"
 1640 ???? F00F     	CHR16X24 "####........####"
 1641 ???? F00F     	CHR16X24 "####........####"
 1642 ???? F00F     	CHR16X24 "####........####"
 1643 ???? F00F     	CHR16X24 "####........####"
 1644 ???? F00F     	CHR16X24 "####........####"
 1645 ???? F00F     	CHR16X24 "####........####"
 1646 ???? F00F     	CHR16X24 "####........####"
 1647 ???? F00F     	CHR16X24 "####........####"
 1648 ???? F00F     	CHR16X24 "####........####"
 1649 ???? F00F     	CHR16X24 "####........####"
 1650 ???? F01F     	CHR16X24 "####.......#####"
 1651 ???? F03E     	CHR16X24 "####......#####."
 1652 ???? FFFE     	CHR16X24 "###############."
 1653 ???? FFFC     	CHR16X24 "##############.."
 1654 ???? FFF8     	CHR16X24 "#############..."
 1655 ???? FFE0     	CHR16X24 "###########....."
 1656 ???? 0000     	CHR16X24 "................"
 1657 ???? 0000     	CHR16X24 "................"
 1658              	
 1659 ???? E007     	CHR16X24 "###..........###"
 1660 ???? E007     	CHR16X24 "###..........###"
 1661 ???? F00F     	CHR16X24 "####........####"
 1662 ???? F00F     	CHR16X24 "####........####"
 1663 ???? F00F     	CHR16X24 "####........####"
 1664 ???? F81F     	CHR16X24 "#####......#####"
 1665 ???? F81F     	CHR16X24 "#####......#####"
 1666 ???? 781E     	CHR16X24 ".####......####."
 1667 ???? 7C3E     	CHR16X24 ".#####....#####."
 1668 ???? 7C3E     	CHR16X24 ".#####....#####."
 1669 ???? 3C3C     	CHR16X24 "..####....####.."
 1670 ???? 3C3C     	CHR16X24 "..####....####.."
 1671 ???? 1E78     	CHR16X24 "...####..####..."
 1672 ???? 1E78     	CHR16X24 "...####..####..."
 1673 ???? 0FF0     	CHR16X24 "....########...."
 1674 ???? 0FF0     	CHR16X24 "....########...."
 1675 ???? 07E0     	CHR16X24 ".....######....."
 1676 ???? 07E0     	CHR16X24 ".....######....."
 1677 ???? 03C0     	CHR16X24 "......####......"
 1678 ???? 03C0     	CHR16X24 "......####......"
 1679 ???? 0180     	CHR16X24 ".......##......."
 1680 ???? 0180     	CHR16X24 ".......##......."
 1681 ???? 0000     	CHR16X24 "................"
 1682 ???? 0000     	CHR16X24 "................"
 1683              	
 1684 ???? FFF8     	CHR16X24 "#############..."
 1685 ???? FFFE     	CHR16X24 "###############."
 1686 ???? FFFE     	CHR16X24 "###############."
 1687 ???? FFFF     	CHR16X24 "################"
 1688 ???? F01F     	CHR16X24 "####.......#####"
 1689 ???? F00F     	CHR16X24 "####........####"
 1690 ???? F00F     	CHR16X24 "####........####"
 1691 ???? F00F     	CHR16X24 "####........####"
 1692 ???? F01F     	CHR16X24 "####.......#####"
 1693 ???? FFFF     	CHR16X24 "################"
 1694 ???? FFFE     	CHR16X24 "###############."
 1695 ???? FFFE     	CHR16X24 "###############."
 1696 ???? FFF8     	CHR16X24 "#############..."
 1697 ???? F000     	CHR16X24 "####............"
 1698 ???? F000     	CHR16X24 "####............"
 1699 ???? F000     	CHR16X24 "####............"
 1700 ???? F000     	CHR16X24 "####............"
 1701 ???? F000     	CHR16X24 "####............"
 1702 ???? F000     	CHR16X24 "####............"
 1703 ???? F000     	CHR16X24 "####............"
 1704 ???? F000     	CHR16X24 "####............"
 1705 ???? F000     	CHR16X24 "####............"
 1706 ???? 0000     	CHR16X24 "................"
 1707 ???? 0000     	CHR16X24 "................"
 1708              	
 1709 ???? FFE0     	CHR16X24 "###########....."
 1710 ???? FFF8     	CHR16X24 "#############..."
 1711 ???? FFFC     	CHR16X24 "##############.."
 1712 ???? FFFE     	CHR16X24 "###############."
 1713 ???? F03E     	CHR16X24 "####......#####."
 1714 ???? F01F     	CHR16X24 "####.......#####"
 1715 ???? F00F     	CHR16X24 "####........####"
 1716 ???? F00F     	CHR16X24 "####........####"
 1717 ???? F01F     	CHR16X24 "####.......#####"
 1718 ???? FFFE     	CHR16X24 "###############."
 1719 ???? FFFC     	CHR16X24 "##############.."
 1720 ???? FFFC     	CHR16X24 "##############.."
 1721 ???? FFFE     	CHR16X24 "###############."
 1722 ???? F01F     	CHR16X24 "####.......#####"
 1723 ???? F00F     	CHR16X24 "####........####"
 1724 ???? F00F     	CHR16X24 "####........####"
 1725 ???? F01F     	CHR16X24 "####.......#####"
 1726 ???? F03E     	CHR16X24 "####......#####."
 1727 ???? FFFE     	CHR16X24 "###############."
 1728 ???? FFFC     	CHR16X24 "##############.."
 1729 ???? FFF8     	CHR16X24 "#############..."
 1730 ???? FFE0     	CHR16X24 "###########....."
 1731 ???? 0000     	CHR16X24 "................"
 1732 ???? 0000     	CHR16X24 "................"
 1733              	
 1734 ???? F00F     	CHR16X24 "####........####"
 1735 ???? F00F     	CHR16X24 "####........####"
 1736 ???? F00F     	CHR16X24 "####........####"
 1737 ???? F00F     	CHR16X24 "####........####"
 1738 ???? F00F     	CHR16X24 "####........####"
 1739 ???? F00F     	CHR16X24 "####........####"
 1740 ???? F00F     	CHR16X24 "####........####"
 1741 ???? F00F     	CHR16X24 "####........####"
 1742 ???? F00F     	CHR16X24 "####........####"
 1743 ???? FFFF     	CHR16X24 "################"
 1744 ???? FFFF     	CHR16X24 "################"
 1745 ???? FFFF     	CHR16X24 "################"
 1746 ???? FFFF     	CHR16X24 "################"
 1747 ???? F00F     	CHR16X24 "####........####"
 1748 ???? F00F     	CHR16X24 "####........####"
 1749 ???? F00F     	CHR16X24 "####........####"
 1750 ???? F00F     	CHR16X24 "####........####"
 1751 ???? F00F     	CHR16X24 "####........####"
 1752 ???? F00F     	CHR16X24 "####........####"
 1753 ???? F00F     	CHR16X24 "####........####"
 1754 ???? F00F     	CHR16X24 "####........####"
 1755 ???? F00F     	CHR16X24 "####........####"
 1756 ???? 0000     	CHR16X24 "................"
 1757 ???? 0000     	CHR16X24 "................"
 1758              	
 1759 ???? E007     	CHR16X24 "###..........###"
 1760 ???? F00F     	CHR16X24 "####........####"
 1761 ???? F81F     	CHR16X24 "#####......#####"
 1762 ???? 781E     	CHR16X24 ".####......####."
 1763 ???? 7C3E     	CHR16X24 ".#####....#####."
 1764 ???? 3E7C     	CHR16X24 "..#####..#####.."
 1765 ???? 1E78     	CHR16X24 "...####..####..."
 1766 ???? 1FF8     	CHR16X24 "...##########..."
 1767 ???? 0FF0     	CHR16X24 "....########...."
 1768 ???? 07E0     	CHR16X24 ".....######....."
 1769 ???? 07E0     	CHR16X24 ".....######....."
 1770 ???? 07E0     	CHR16X24 ".....######....."
 1771 ???? 07E0     	CHR16X24 ".....######....."
 1772 ???? 0FF0     	CHR16X24 "....########...."
 1773 ???? 1FF8     	CHR16X24 "...##########..."
 1774 ???? 1E78     	CHR16X24 "...####..####..."
 1775 ???? 3E7C     	CHR16X24 "..#####..#####.."
 1776 ???? 7C3E     	CHR16X24 ".#####....#####."
 1777 ???? 781E     	CHR16X24 ".####......####."
 1778 ???? F81F     	CHR16X24 "#####......#####"
 1779 ???? F00F     	CHR16X24 "####........####"
 1780 ???? E007     	CHR16X24 "###..........###"
 1781 ???? 0000     	CHR16X24 "................"
 1782 ???? 0000     	CHR16X24 "................"
 1783              	
 1784 ???? F00F     	CHR16X24 "####........####"
 1785 ???? F00F     	CHR16X24 "####........####"
 1786 ???? F00F     	CHR16X24 "####........####"
 1787 ???? F00F     	CHR16X24 "####........####"
 1788 ???? F00F     	CHR16X24 "####........####"
 1789 ???? F00F     	CHR16X24 "####........####"
 1790 ???? F00F     	CHR16X24 "####........####"
 1791 ???? F00F     	CHR16X24 "####........####"
 1792 ???? F00F     	CHR16X24 "####........####"
 1793 ???? F00F     	CHR16X24 "####........####"
 1794 ???? F00F     	CHR16X24 "####........####"
 1795 ???? F00F     	CHR16X24 "####........####"
 1796 ???? F00F     	CHR16X24 "####........####"
 1797 ???? F00F     	CHR16X24 "####........####"
 1798 ???? F00F     	CHR16X24 "####........####"
 1799 ???? F00F     	CHR16X24 "####........####"
 1800 ???? F00F     	CHR16X24 "####........####"
 1801 ???? F81F     	CHR16X24 "#####......#####"
 1802 ???? FFFF     	CHR16X24 "################"
 1803 ???? 7FFE     	CHR16X24 ".##############."
 1804 ???? 7FFE     	CHR16X24 ".##############."
 1805 ???? 1FF8     	CHR16X24 "...##########..."
 1806 ???? 0000     	CHR16X24 "................"
 1807 ???? 0000     	CHR16X24 "................"
 1808              	
 1809 ???? 1FF8     	CHR16X24 "...##########..."
 1810 ???? 7FFE     	CHR16X24 ".##############."
 1811 ???? 7FFE     	CHR16X24 ".##############."
 1812 ???? FFFF     	CHR16X24 "################"
 1813 ???? F81F     	CHR16X24 "#####......#####"
 1814 ???? F00F     	CHR16X24 "####........####"
 1815 ???? F00F     	CHR16X24 "####........####"
 1816 ???? F00F     	CHR16X24 "####........####"
 1817 ???? F00F     	CHR16X24 "####........####"
 1818 ???? F00F     	CHR16X24 "####........####"
 1819 ???? F00F     	CHR16X24 "####........####"
 1820 ???? F00F     	CHR16X24 "####........####"
 1821 ???? F00F     	CHR16X24 "####........####"
 1822 ???? F00F     	CHR16X24 "####........####"
 1823 ???? F0CF     	CHR16X24 "####....##..####"
 1824 ???? F0EF     	CHR16X24 "####....###.####"
 1825 ???? F07F     	CHR16X24 "####.....#######"
 1826 ???? F83F     	CHR16X24 "#####.....######"
 1827 ???? FFFF     	CHR16X24 "################"
 1828 ???? 7FFE     	CHR16X24 ".##############."
 1829 ???? 7FFF     	CHR16X24 ".###############"
 1830 ???? 1FFB     	CHR16X24 "...##########.##"
 1831 ???? 0000     	CHR16X24 "................"
 1832 ???? 0000     	CHR16X24 "................"
 1833              	
 1834 ???? 1FF8     	CHR16X24 "...##########..."
 1835 ???? 7FFE     	CHR16X24 ".##############."
 1836 ???? 7FFE     	CHR16X24 ".##############."
 1837 ???? 7FFE     	CHR16X24 ".##############."
 1838 ???? E007     	CHR16X24 "###..........###"
 1839 ???? E007     	CHR16X24 "###..........###"
 1840 ???? E007     	CHR16X24 "###..........###"
 1841 ???? E007     	CHR16X24 "###..........###"
 1842 ???? E007     	CHR16X24 "###..........###"
 1843 ???? E007     	CHR16X24 "###..........###"
 1844 ???? E007     	CHR16X24 "###..........###"
 1845 ???? E007     	CHR16X24 "###..........###"
 1846 ???? E007     	CHR16X24 "###..........###"
 1847 ???? E007     	CHR16X24 "###..........###"
 1848 ???? E007     	CHR16X24 "###..........###"
 1849 ???? E007     	CHR16X24 "###..........###"
 1850 ???? E007     	CHR16X24 "###..........###"
 1851 ???? E007     	CHR16X24 "###..........###"
 1852 ???? E007     	CHR16X24 "###..........###"
 1853 ???? E007     	CHR16X24 "###..........###"
 1854 ???? 7FFE     	CHR16X24 ".##############."
 1855 ???? 7FFE     	CHR16X24 ".##############."
 1856 ???? 7FFE     	CHR16X24 ".##############."
 1857 ???? 1FF8     	CHR16X24 "...##########..."
 1858              	
 1859 ???? 0180     	CHR16X24 ".......##......."
 1860 ???? 0180     	CHR16X24 ".......##......."
 1861 ???? 0180     	CHR16X24 ".......##......."
 1862 ???? 0180     	CHR16X24 ".......##......."
 1863 ???? 0180     	CHR16X24 ".......##......."
 1864 ???? 0180     	CHR16X24 ".......##......."
 1865 ???? 0180     	CHR16X24 ".......##......."
 1866 ???? 0180     	CHR16X24 ".......##......."
 1867 ???? 0180     	CHR16X24 ".......##......."
 1868 ???? 0180     	CHR16X24 ".......##......."
 1869 ???? 0180     	CHR16X24 ".......##......."
 1870 ???? 0180     	CHR16X24 ".......##......."
 1871 ???? 0180     	CHR16X24 ".......##......."
 1872 ???? 0180     	CHR16X24 ".......##......."
 1873 ???? 0180     	CHR16X24 ".......##......."
 1874 ???? 0180     	CHR16X24 ".......##......."
 1875 ???? 0180     	CHR16X24 ".......##......."
 1876 ???? 0180     	CHR16X24 ".......##......."
 1877 ???? 0180     	CHR16X24 ".......##......."
 1878 ???? 0180     	CHR16X24 ".......##......."
 1879 ???? 0180     	CHR16X24 ".......##......."
 1880 ???? 0180     	CHR16X24 ".......##......."
 1881 ???? 0180     	CHR16X24 ".......##......."
 1882 ???? 0180     	CHR16X24 ".......##......."
 1883              	
 1884 ???? 1FF8     	CHR16X24 "...##########..."
 1885 ???? 7FFE     	CHR16X24 ".##############."
 1886 ???? 7FFE     	CHR16X24 ".##############."
 1887 ???? 7FFE     	CHR16X24 ".##############."
 1888 ???? E007     	CHR16X24 "###..........###"
 1889 ???? E007     	CHR16X24 "###..........###"
 1890 ???? 0007     	CHR16X24 ".............###"
 1891 ???? 0007     	CHR16X24 ".............###"
 1892 ???? 0007     	CHR16X24 ".............###"
 1893 ???? 0007     	CHR16X24 ".............###"
 1894 ???? 1FFE     	CHR16X24 "...############."
 1895 ???? 7FFE     	CHR16X24 ".##############."
 1896 ???? 7FFE     	CHR16X24 ".##############."
 1897 ???? 7FF8     	CHR16X24 ".############..."
 1898 ???? E000     	CHR16X24 "###............."
 1899 ???? E000     	CHR16X24 "###............."
 1900 ???? E000     	CHR16X24 "###............."
 1901 ???? E000     	CHR16X24 "###............."
 1902 ???? E000     	CHR16X24 "###............."
 1903 ???? E000     	CHR16X24 "###............."
 1904 ???? FFFF     	CHR16X24 "################"
 1905 ???? FFFF     	CHR16X24 "################"
 1906 ???? FFFF     	CHR16X24 "################"
 1907 ???? FFFF     	CHR16X24 "################"
 1908              	
 1909 ???? 1FF8     	CHR16X24 "...##########..."
 1910 ???? 7FFE     	CHR16X24 ".##############."
 1911 ???? 7FFE     	CHR16X24 ".##############."
 1912 ???? 7FFE     	CHR16X24 ".##############."
 1913 ???? E007     	CHR16X24 "###..........###"
 1914 ???? E007     	CHR16X24 "###..........###"
 1915 ???? 0007     	CHR16X24 ".............###"
 1916 ???? 0007     	CHR16X24 ".............###"
 1917 ???? 0007     	CHR16X24 ".............###"
 1918 ???? 0007     	CHR16X24 ".............###"
 1919 ???? 07FE     	CHR16X24 ".....##########."
 1920 ???? 07FE     	CHR16X24 ".....##########."
 1921 ???? 07FE     	CHR16X24 ".....##########."
 1922 ???? 07FE     	CHR16X24 ".....##########."
 1923 ???? 0007     	CHR16X24 ".............###"
 1924 ???? 0007     	CHR16X24 ".............###"
 1925 ???? 0007     	CHR16X24 ".............###"
 1926 ???? 0007     	CHR16X24 ".............###"
 1927 ???? E007     	CHR16X24 "###..........###"
 1928 ???? E007     	CHR16X24 "###..........###"
 1929 ???? 7FFE     	CHR16X24 ".##############."
 1930 ???? 7FFE     	CHR16X24 ".##############."
 1931 ???? 7FFE     	CHR16X24 ".##############."
 1932 ???? 1FF8     	CHR16X24 "...##########..."
 1933              	
 1934 ???? E0E0     	CHR16X24 "###.....###....."
 1935 ???? E0E0     	CHR16X24 "###.....###....."
 1936 ???? E0E0     	CHR16X24 "###.....###....."
 1937 ???? E0E0     	CHR16X24 "###.....###....."
 1938 ???? E0E0     	CHR16X24 "###.....###....."
 1939 ???? E0E0     	CHR16X24 "###.....###....."
 1940 ???? E0E0     	CHR16X24 "###.....###....."
 1941 ???? E0E0     	CHR16X24 "###.....###....."
 1942 ???? E0E0     	CHR16X24 "###.....###....."
 1943 ???? E0E0     	CHR16X24 "###.....###....."
 1944 ???? FFFF     	CHR16X24 "################"
 1945 ???? FFFF     	CHR16X24 "################"
 1946 ???? FFFF     	CHR16X24 "################"
 1947 ???? FFFF     	CHR16X24 "################"
 1948 ???? 00E0     	CHR16X24 "........###....."
 1949 ???? 00E0     	CHR16X24 "........###....."
 1950 ???? 00E0     	CHR16X24 "........###....."
 1951 ???? 00E0     	CHR16X24 "........###....."
 1952 ???? 00E0     	CHR16X24 "........###....."
 1953 ???? 00E0     	CHR16X24 "........###....."
 1954 ???? 00E0     	CHR16X24 "........###....."
 1955 ???? 00E0     	CHR16X24 "........###....."
 1956 ???? 00E0     	CHR16X24 "........###....."
 1957 ???? 00E0     	CHR16X24 "........###....."
 1958              	
 1959 ???? FFFF     	CHR16X24 "################"
 1960 ???? FFFF     	CHR16X24 "################"
 1961 ???? FFFF     	CHR16X24 "################"
 1962 ???? FFFF     	CHR16X24 "################"
 1963 ???? E000     	CHR16X24 "###............."
 1964 ???? E000     	CHR16X24 "###............."
 1965 ???? E000     	CHR16X24 "###............."
 1966 ???? E000     	CHR16X24 "###............."
 1967 ???? E000     	CHR16X24 "###............."
 1968 ???? E000     	CHR16X24 "###............."
 1969 ???? FFF8     	CHR16X24 "#############..."
 1970 ???? FFFE     	CHR16X24 "###############."
 1971 ???? FFFE     	CHR16X24 "###############."
 1972 ???? FFFE     	CHR16X24 "###############."
 1973 ???? 0007     	CHR16X24 ".............###"
 1974 ???? 0007     	CHR16X24 ".............###"
 1975 ???? 0007     	CHR16X24 ".............###"
 1976 ???? 0007     	CHR16X24 ".............###"
 1977 ???? E007     	CHR16X24 "###..........###"
 1978 ???? E007     	CHR16X24 "###..........###"
 1979 ???? 7FFE     	CHR16X24 ".##############."
 1980 ???? 7FFE     	CHR16X24 ".##############."
 1981 ???? 7FFE     	CHR16X24 ".##############."
 1982 ???? 1FF8     	CHR16X24 "...##########..."
 1983              	
 1984 ???? 1FF8     	CHR16X24 "...##########..."
 1985 ???? 7FFE     	CHR16X24 ".##############."
 1986 ???? 7FFE     	CHR16X24 ".##############."
 1987 ???? 7FFE     	CHR16X24 ".##############."
 1988 ???? E007     	CHR16X24 "###..........###"
 1989 ???? E007     	CHR16X24 "###..........###"
 1990 ???? E000     	CHR16X24 "###............."
 1991 ???? E000     	CHR16X24 "###............."
 1992 ???? E000     	CHR16X24 "###............."
 1993 ???? E000     	CHR16X24 "###............."
 1994 ???? FFF8     	CHR16X24 "#############..."
 1995 ???? FFFE     	CHR16X24 "###############."
 1996 ???? FFFE     	CHR16X24 "###############."
 1997 ???? FFFE     	CHR16X24 "###############."
 1998 ???? E007     	CHR16X24 "###..........###"
 1999 ???? E007     	CHR16X24 "###..........###"
 2000 ???? E007     	CHR16X24 "###..........###"
 2001 ???? E007     	CHR16X24 "###..........###"
 2002 ???? E007     	CHR16X24 "###..........###"
 2003 ???? E007     	CHR16X24 "###..........###"
 2004 ???? 7FFE     	CHR16X24 ".##############."
 2005 ???? 7FFE     	CHR16X24 ".##############."
 2006 ???? 7FFE     	CHR16X24 ".##############."
 2007 ???? 1FF8     	CHR16X24 "...##########..."
 2008              	
 2009 ???? FFFF     	CHR16X24 "################"
 2010 ???? FFFF     	CHR16X24 "################"
 2011 ???? FFFF     	CHR16X24 "################"
 2012 ???? FFFF     	CHR16X24 "################"
 2013 ???? 000F     	CHR16X24 "............####"
 2014 ???? 001E     	CHR16X24 "...........####."
 2015 ???? 001E     	CHR16X24 "...........####."
 2016 ???? 003C     	CHR16X24 "..........####.."
 2017 ???? 0078     	CHR16X24 ".........####..."
 2018 ???? 0078     	CHR16X24 ".........####..."
 2019 ???? 00F0     	CHR16X24 "........####...."
 2020 ???? 01E0     	CHR16X24 ".......####....."
 2021 ???? 01E0     	CHR16X24 ".......####....."
 2022 ???? 03C0     	CHR16X24 "......####......"
 2023 ???? 0780     	CHR16X24 ".....####......."
 2024 ???? 0780     	CHR16X24 ".....####......."
 2025 ???? 0F00     	CHR16X24 "....####........"
 2026 ???? 1E00     	CHR16X24 "...####........."
 2027 ???? 1E00     	CHR16X24 "...####........."
 2028 ???? 3C00     	CHR16X24 "..####.........."
 2029 ???? 7800     	CHR16X24 ".####..........."
 2030 ???? 7800     	CHR16X24 ".####..........."
 2031 ???? F000     	CHR16X24 "####............"
 2032 ???? E000     	CHR16X24 "###............."
 2033              	
 2034 ???? 1FF8     	CHR16X24 "...##########..."
 2035 ???? 7FFE     	CHR16X24 ".##############."
 2036 ???? 7FFE     	CHR16X24 ".##############."
 2037 ???? 7FFE     	CHR16X24 ".##############."
 2038 ???? E007     	CHR16X24 "###..........###"
 2039 ???? E007     	CHR16X24 "###..........###"
 2040 ???? E007     	CHR16X24 "###..........###"
 2041 ???? E007     	CHR16X24 "###..........###"
 2042 ???? E007     	CHR16X24 "###..........###"
 2043 ???? E007     	CHR16X24 "###..........###"
 2044 ???? 7FFE     	CHR16X24 ".##############."
 2045 ???? 7FFE     	CHR16X24 ".##############."
 2046 ???? 7FFE     	CHR16X24 ".##############."
 2047 ???? 7FFE     	CHR16X24 ".##############."
 2048 ???? E007     	CHR16X24 "###..........###"
 2049 ???? E007     	CHR16X24 "###..........###"
 2050 ???? E007     	CHR16X24 "###..........###"
 2051 ???? E007     	CHR16X24 "###..........###"
 2052 ???? E007     	CHR16X24 "###..........###"
 2053 ???? E007     	CHR16X24 "###..........###"
 2054 ???? 7FFE     	CHR16X24 ".##############."
 2055 ???? 7FFE     	CHR16X24 ".##############."
 2056 ???? 7FFE     	CHR16X24 ".##############."
 2057 ???? 1FF8     	CHR16X24 "...##########..."
 2058              	
 2059 ???? 1FF8     	CHR16X24 "...##########..."
 2060 ???? 7FFE     	CHR16X24 ".##############."
 2061 ???? 7FFE     	CHR16X24 ".##############."
 2062 ???? 7FFE     	CHR16X24 ".##############."
 2063 ???? E007     	CHR16X24 "###..........###"
 2064 ???? E007     	CHR16X24 "###..........###"
 2065 ???? E007     	CHR16X24 "###..........###"
 2066 ???? E007     	CHR16X24 "###..........###"
 2067 ???? E007     	CHR16X24 "###..........###"
 2068 ???? E007     	CHR16X24 "###..........###"
 2069 ???? 7FFF     	CHR16X24 ".###############"
 2070 ???? 7FFF     	CHR16X24 ".###############"
 2071 ???? 7FFF     	CHR16X24 ".###############"
 2072 ???? 1FFF     	CHR16X24 "...#############"
 2073 ???? 0007     	CHR16X24 ".............###"
 2074 ???? 0007     	CHR16X24 ".............###"
 2075 ???? 0007     	CHR16X24 ".............###"
 2076 ???? 0007     	CHR16X24 ".............###"
 2077 ???? E007     	CHR16X24 "###..........###"
 2078 ???? E007     	CHR16X24 "###..........###"
 2079 ???? 7FFE     	CHR16X24 ".##############."
 2080 ???? 7FFE     	CHR16X24 ".##############."
 2081 ???? 7FFE     	CHR16X24 ".##############."
 2082 ???? 1FF8     	CHR16X24 "...##########..."
 2083              	
 2084 ???? 000F     	CHR16X24 "............####"
 2085 ???? 000F     	CHR16X24 "............####"
 2086 ???? 000F     	CHR16X24 "............####"
 2087 ???? 000F     	CHR16X24 "............####"
 2088 ???? 000F     	CHR16X24 "............####"
 2089 ???? 000F     	CHR16X24 "............####"
 2090 ???? 000F     	CHR16X24 "............####"
 2091 ???? 000F     	CHR16X24 "............####"
 2092 ???? 000F     	CHR16X24 "............####"
 2093 ???? 000F     	CHR16X24 "............####"
 2094 ???? 000F     	CHR16X24 "............####"
 2095 ???? 000F     	CHR16X24 "............####"
 2096 ???? 000F     	CHR16X24 "............####"
 2097 ???? 000F     	CHR16X24 "............####"
 2098 ???? 000F     	CHR16X24 "............####"
 2099 ???? 000F     	CHR16X24 "............####"
 2100 ???? 000F     	CHR16X24 "............####"
 2101 ???? F01F     	CHR16X24 "####.......#####"
 2102 ???? FFFF     	CHR16X24 "################"
 2103 ???? 7FFE     	CHR16X24 ".##############."
 2104 ???? 7FFE     	CHR16X24 ".##############."
 2105 ???? 1FF8     	CHR16X24 "...##########..."
 2106 ???? 0000     	CHR16X24 "................"
 2107 ???? 0000     	CHR16X24 "................"
 2108              	
 2109 ???? 0000     	CHR16X24 "................"
 2110 ???? 0000     	CHR16X24 "................"
 2111 ???? 0000     	CHR16X24 "................"
 2112 ???? 0000     	CHR16X24 "................"
 2113 ???? 0000     	CHR16X24 "................"
 2114 ???? 0000     	CHR16X24 "................"
 2115 ???? 0000     	CHR16X24 "................"
 2116 ???? 0000     	CHR16X24 "................"
 2117 ???? 0000     	CHR16X24 "................"
 2118 ???? 0000     	CHR16X24 "................"
 2119 ???? FFFF     	CHR16X24 "################"
 2120 ???? FFFF     	CHR16X24 "################"
 2121 ???? FFFF     	CHR16X24 "################"
 2122 ???? FFFF     	CHR16X24 "################"
 2123 ???? 0000     	CHR16X24 "................"
 2124 ???? 0000     	CHR16X24 "................"
 2125 ???? 0000     	CHR16X24 "................"
 2126 ???? 0000     	CHR16X24 "................"
 2127 ???? 0000     	CHR16X24 "................"
 2128 ???? 0000     	CHR16X24 "................"
 2129 ???? 0000     	CHR16X24 "................"
 2130 ???? 0000     	CHR16X24 "................"
 2131 ???? 0000     	CHR16X24 "................"
 2132 ???? 0000     	CHR16X24 "................"
 2133              	
 2134 ???? F00F     	CHR16X24 "####........####"
 2135 ???? F01F     	CHR16X24 "####.......#####"
 2136 ???? F03F     	CHR16X24 "####......######"
 2137 ???? F07E     	CHR16X24 "####.....######."
 2138 ???? F1F8     	CHR16X24 "####...######..."
 2139 ???? F3F0     	CHR16X24 "####..######...."
 2140 ???? F7E0     	CHR16X24 "####.######....."
 2141 ???? FF80     	CHR16X24 "#########......."
 2142 ???? FF00     	CHR16X24 "########........"
 2143 ???? FE00     	CHR16X24 "#######........."
 2144 ???? FC00     	CHR16X24 "######.........."
 2145 ???? FC00     	CHR16X24 "######.........."
 2146 ???? FE00     	CHR16X24 "#######........."
 2147 ???? FF00     	CHR16X24 "########........"
 2148 ???? FF80     	CHR16X24 "#########......."
 2149 ???? F7E0     	CHR16X24 "####.######....."
 2150 ???? F3F0     	CHR16X24 "####..######...."
 2151 ???? F1F8     	CHR16X24 "####...######..."
 2152 ???? F07E     	CHR16X24 "####.....######."
 2153 ???? F03F     	CHR16X24 "####......######"
 2154 ???? F01F     	CHR16X24 "####.......#####"
 2155 ???? F00F     	CHR16X24 "####........####"
 2156 ???? 0000     	CHR16X24 "................"
 2157 ???? 0000     	CHR16X24 "................"
 2158              	
 2159 ???? 0000     	CHR16X24 "................"
 2160 ???? 0000     	CHR16X24 "................"
 2161 ???? 0000     	CHR16X24 "................"
 2162 ???? 0000     	CHR16X24 "................"
 2163 ???? 0000     	CHR16X24 "................"
 2164 ???? 0000     	CHR16X24 "................"
 2165 ???? 0000     	CHR16X24 "................"
 2166 ???? 0000     	CHR16X24 "................"
 2167 ???? 0000     	CHR16X24 "................"
 2168 ???? 0000     	CHR16X24 "................"
 2169 ???? 0000     	CHR16X24 "................"
 2170 ???? 0000     	CHR16X24 "................"
 2171 ???? 0180     	CHR16X24 ".......##......."
 2172 ???? 03C0     	CHR16X24 "......####......"
 2173 ???? 03C0     	CHR16X24 "......####......"
 2174 ???? 07E0     	CHR16X24 ".....######....."
 2175 ???? 07E0     	CHR16X24 ".....######....."
 2176 ???? 03C0     	CHR16X24 "......####......"
 2177 ???? 03C0     	CHR16X24 "......####......"
 2178 ???? 0180     	CHR16X24 ".......##......."
 2179 ???? 0000     	CHR16X24 "................"
 2180 ???? 0000     	CHR16X24 "................"
 2181 ???? 0000     	CHR16X24 "................"
 2182 ???? 0000     	CHR16X24 "................"
 2183              	
 2184 ???? FFFF     	CHR16X24 "################"
 2185 ???? FFFF     	CHR16X24 "################"
 2186 ???? FFFF     	CHR16X24 "################"
 2187 ???? FFFF     	CHR16X24 "################"
 2188 ???? 000F     	CHR16X24 "............####"
 2189 ???? 001F     	CHR16X24 "...........#####"
 2190 ???? 003F     	CHR16X24 "..........######"
 2191 ???? 007E     	CHR16X24 ".........######."
 2192 ???? 00FC     	CHR16X24 "........######.."
 2193 ???? 01F8     	CHR16X24 ".......######..."
 2194 ???? 03F0     	CHR16X24 "......######...."
 2195 ???? 07E0     	CHR16X24 ".....######....."
 2196 ???? 0FC0     	CHR16X24 "....######......"
 2197 ???? 1F80     	CHR16X24 "...######......."
 2198 ???? 3F00     	CHR16X24 "..######........"
 2199 ???? 7E00     	CHR16X24 ".######........."
 2200 ???? FC00     	CHR16X24 "######.........."
 2201 ???? F800     	CHR16X24 "#####..........."
 2202 ???? FFFF     	CHR16X24 "################"
 2203 ???? FFFF     	CHR16X24 "################"
 2204 ???? FFFF     	CHR16X24 "################"
 2205 ???? FFFF     	CHR16X24 "################"
 2206 ???? 0000     	CHR16X24 "................"
 2207 ???? 0000     	CHR16X24 "................"
 2208              	
 2209 ???? 0003     	CHR16X24 "..............##"
 2210 ???? 0007     	CHR16X24 ".............###"
 2211 ???? 0007     	CHR16X24 ".............###"
 2212 ???? 000E     	CHR16X24 "............###."
 2213 ???? 001E     	CHR16X24 "...........####."
 2214 ???? 001C     	CHR16X24 "...........###.."
 2215 ???? 0038     	CHR16X24 "..........###..."
 2216 ???? 0078     	CHR16X24 ".........####..."
 2217 ???? 0070     	CHR16X24 ".........###...."
 2218 ???? 00E0     	CHR16X24 "........###....."
 2219 ???? 01E0     	CHR16X24 ".......####....."
 2220 ???? 01C0     	CHR16X24 ".......###......"
 2221 ???? 0380     	CHR16X24 "......###......."
 2222 ???? 0780     	CHR16X24 ".....####......."
 2223 ???? 0700     	CHR16X24 ".....###........"
 2224 ???? 0E00     	CHR16X24 "....###........."
 2225 ???? 1E00     	CHR16X24 "...####........."
 2226 ???? 1C00     	CHR16X24 "...###.........."
 2227 ???? 3800     	CHR16X24 "..###..........."
 2228 ???? 7800     	CHR16X24 ".####..........."
 2229 ???? 7000     	CHR16X24 ".###............"
 2230 ???? E000     	CHR16X24 "###............."
 2231 ???? E000     	CHR16X24 "###............."
 2232 ???? C000     	CHR16X24 "##.............."
 2233              	
 2234 ???? 0000     	CHR16X24 "................"
 2235 ???? 0000     	CHR16X24 "................"
 2236 ???? 0000     	CHR16X24 "................"
 2237 ???? 0000     	CHR16X24 "................"
 2238 ???? 0000     	CHR16X24 "................"
 2239 ???? 0000     	CHR16X24 "................"
 2240 ???? 0180     	CHR16X24 ".......##......."
 2241 ???? 0380     	CHR16X24 "......###......."
 2242 ???? 0380     	CHR16X24 "......###......."
 2243 ???? 0380     	CHR16X24 "......###......."
 2244 ???? 0180     	CHR16X24 ".......##......."
 2245 ???? 0000     	CHR16X24 "................"
 2246 ???? 0000     	CHR16X24 "................"
 2247 ???? 0000     	CHR16X24 "................"
 2248 ???? 0000     	CHR16X24 "................"
 2249 ???? 0180     	CHR16X24 ".......##......."
 2250 ???? 0380     	CHR16X24 "......###......."
 2251 ???? 0380     	CHR16X24 "......###......."
 2252 ???? 0380     	CHR16X24 "......###......."
 2253 ???? 0180     	CHR16X24 ".......##......."
 2254 ???? 0180     	CHR16X24 ".......##......."
 2255 ???? 0700     	CHR16X24 ".....###........"
 2256 ???? 0600     	CHR16X24 ".....##........."
 2257 ???? 0000     	CHR16X24 "................"
 2258              	
 2259 ???? 0000     	CHR16X24 "................"
 2260 ???? 0000     	CHR16X24 "................"
 2261 ???? 0000     	CHR16X24 "................"
 2262 ???? 0000     	CHR16X24 "................"
 2263 ???? 0000     	CHR16X24 "................"
 2264 ???? 0000     	CHR16X24 "................"
 2265 ???? 0180     	CHR16X24 ".......##......."
 2266 ???? 0380     	CHR16X24 "......###......."
 2267 ???? 0380     	CHR16X24 "......###......."
 2268 ???? 0380     	CHR16X24 "......###......."
 2269 ???? 0180     	CHR16X24 ".......##......."
 2270 ???? 0000     	CHR16X24 "................"
 2271 ???? 0000     	CHR16X24 "................"
 2272 ???? 0000     	CHR16X24 "................"
 2273 ???? 0000     	CHR16X24 "................"
 2274 ???? 0180     	CHR16X24 ".......##......."
 2275 ???? 0380     	CHR16X24 "......###......."
 2276 ???? 0380     	CHR16X24 "......###......."
 2277 ???? 0380     	CHR16X24 "......###......."
 2278 ???? 0180     	CHR16X24 ".......##......."
 2279 ???? 0000     	CHR16X24 "................"
 2280 ???? 0000     	CHR16X24 "................"
 2281 ???? 0000     	CHR16X24 "................"
 2282 ???? 0000     	CHR16X24 "................"
 2283              	
 2284 ???? 03C0     	CHR16X24 "......####......"
 2285 ???? 03C0     	CHR16X24 "......####......"
 2286 ???? 03C0     	CHR16X24 "......####......"
 2287 ???? 03C0     	CHR16X24 "......####......"
 2288 ???? 03C0     	CHR16X24 "......####......"
 2289 ???? 03C0     	CHR16X24 "......####......"
 2290 ???? 03C0     	CHR16X24 "......####......"
 2291 ???? 03C0     	CHR16X24 "......####......"
 2292 ???? 03C0     	CHR16X24 "......####......"
 2293 ???? 03C0     	CHR16X24 "......####......"
 2294 ???? 03C0     	CHR16X24 "......####......"
 2295 ???? 03C0     	CHR16X24 "......####......"
 2296 ???? 0180     	CHR16X24 ".......##......."
 2297 ???? 0180     	CHR16X24 ".......##......."
 2298 ???? 0180     	CHR16X24 ".......##......."
 2299 ???? 0180     	CHR16X24 ".......##......."
 2300 ???? 0000     	CHR16X24 "................"
 2301 ???? 0000     	CHR16X24 "................"
 2302 ???? 0000     	CHR16X24 "................"
 2303 ???? 0000     	CHR16X24 "................"
 2304 ???? 0180     	CHR16X24 ".......##......."
 2305 ???? 0180     	CHR16X24 ".......##......."
 2306 ???? 0180     	CHR16X24 ".......##......."
 2307 ???? 0180     	CHR16X24 ".......##......."
 2308              	
 2309 ???? 0180     	CHR16X24 ".......##......."
 2310 ???? 0180     	CHR16X24 ".......##......."
 2311 ???? 0180     	CHR16X24 ".......##......."
 2312 ???? 0180     	CHR16X24 ".......##......."
 2313 ???? 0180     	CHR16X24 ".......##......."
 2314 ???? 0180     	CHR16X24 ".......##......."
 2315 ???? 0180     	CHR16X24 ".......##......."
 2316 ???? 0180     	CHR16X24 ".......##......."
 2317 ???? 0180     	CHR16X24 ".......##......."
 2318 ???? 0180     	CHR16X24 ".......##......."
 2319 ???? FFFF     	CHR16X24 "################"
 2320 ???? FFFF     	CHR16X24 "################"
 2321 ???? FFFF     	CHR16X24 "################"
 2322 ???? FFFF     	CHR16X24 "################"
 2323 ???? 0180     	CHR16X24 ".......##......."
 2324 ???? 0180     	CHR16X24 ".......##......."
 2325 ???? 0180     	CHR16X24 ".......##......."
 2326 ???? 0180     	CHR16X24 ".......##......."
 2327 ???? 0180     	CHR16X24 ".......##......."
 2328 ???? 0180     	CHR16X24 ".......##......."
 2329 ???? 0180     	CHR16X24 ".......##......."
 2330 ???? 0180     	CHR16X24 ".......##......."
 2331 ???? 0180     	CHR16X24 ".......##......."
 2332 ???? 0180     	CHR16X24 ".......##......."
 2333              	
 2334 ???? 1FF8     	CHR16X24 "...##########..."
 2335 ???? 7FFE     	CHR16X24 ".##############."
 2336 ???? 7FFE     	CHR16X24 ".##############."
 2337 ???? 7FFE     	CHR16X24 ".##############."
 2338 ???? E007     	CHR16X24 "###..........###"
 2339 ???? E007     	CHR16X24 "###..........###"
 2340 ???? E007     	CHR16X24 "###..........###"
 2341 ???? E7E7     	CHR16X24 "###..######..###"
 2342 ???? E7E7     	CHR16X24 "###..######..###"
 2343 ???? E7E7     	CHR16X24 "###..######..###"
 2344 ???? E667     	CHR16X24 "###..##..##..###"
 2345 ???? E667     	CHR16X24 "###..##..##..###"
 2346 ???? E667     	CHR16X24 "###..##..##..###"
 2347 ???? E667     	CHR16X24 "###..##..##..###"
 2348 ???? E7FE     	CHR16X24 "###..##########."
 2349 ???? E7FE     	CHR16X24 "###..##########."
 2350 ???? E7FC     	CHR16X24 "###..#########.."
 2351 ???? E000     	CHR16X24 "###............."
 2352 ???? E000     	CHR16X24 "###............."
 2353 ???? E007     	CHR16X24 "###..........###"
 2354 ???? 7FFE     	CHR16X24 ".##############."
 2355 ???? 7FFE     	CHR16X24 ".##############."
 2356 ???? 7FFE     	CHR16X24 ".##############."
 2357 ???? 1FF8     	CHR16X24 "...##########..."
 2358              	
 2359 ???? 0180     	CHR16X24 ".......##......."
 2360 ???? 0180     	CHR16X24 ".......##......."
 2361 ???? 0180     	CHR16X24 ".......##......."
 2362 ???? 0180     	CHR16X24 ".......##......."
 2363 ???? 0180     	CHR16X24 ".......##......."
 2364 ???? 0180     	CHR16X24 ".......##......."
 2365 ???? 03C0     	CHR16X24 "......####......"
 2366 ???? 03C0     	CHR16X24 "......####......"
 2367 ???? FFFF     	CHR16X24 "################"
 2368 ???? FFFF     	CHR16X24 "################"
 2369 ???? 7FFE     	CHR16X24 ".##############."
 2370 ???? 1FF8     	CHR16X24 "...##########..."
 2371 ???? 0FF0     	CHR16X24 "....########...."
 2372 ???? 07E0     	CHR16X24 ".....######....."
 2373 ???? 07E0     	CHR16X24 ".....######....."
 2374 ???? 0FF0     	CHR16X24 "....########...."
 2375 ???? 0FF0     	CHR16X24 "....########...."
 2376 ???? 1E78     	CHR16X24 "...####..####..."
 2377 ???? 1E78     	CHR16X24 "...####..####..."
 2378 ???? 1C38     	CHR16X24 "...###....###..."
 2379 ???? 1818     	CHR16X24 "...##......##..."
 2380 ???? 1008     	CHR16X24 "...#........#..."
 2381 ???? 0000     	CHR16X24 "................"
 2382 ???? 0000     	CHR16X24 "................"
 2383              	
 2384 ???? 0000     	CHR16X24 "................"
 2385 ???? 0000     	CHR16X24 "................"
 2386 ???? 0000     	CHR16X24 "................"
 2387 ???? 0000     	CHR16X24 "................"
 2388 ???? 0000     	CHR16X24 "................"
 2389 ???? 0000     	CHR16X24 "................"
 2390 ???? 0000     	CHR16X24 "................"
 2391 ???? 0000     	CHR16X24 "................"
 2392 ???? 0000     	CHR16X24 "................"
 2393 ???? 0000     	CHR16X24 "................"
 2394 ???? 0000     	CHR16X24 "................"
 2395 ???? 0000     	CHR16X24 "................"
 2396 ???? 0000     	CHR16X24 "................"
 2397 ???? 0000     	CHR16X24 "................"
 2398 ???? 0000     	CHR16X24 "................"
 2399 ???? 0180     	CHR16X24 ".......##......."
 2400 ???? 0380     	CHR16X24 "......###......."
 2401 ???? 0380     	CHR16X24 "......###......."
 2402 ???? 0380     	CHR16X24 "......###......."
 2403 ???? 0180     	CHR16X24 ".......##......."
 2404 ???? 0180     	CHR16X24 ".......##......."
 2405 ???? 0700     	CHR16X24 ".....###........"
 2406 ???? 0600     	CHR16X24 ".....##........."
 2407 ???? 0000     	CHR16X24 "................"
 2408              	
 2409 ???? FFFF     	CHR16X24 "################"
 2410 ???? FFFF     	CHR16X24 "################"
 2411 ???? FFFF     	CHR16X24 "################"
 2412 ???? FFFF     	CHR16X24 "################"
 2413 ???? FFFF     	CHR16X24 "################"
 2414 ???? FFFF     	CHR16X24 "################"
 2415 ???? FFFF     	CHR16X24 "################"
 2416 ???? FFFF     	CHR16X24 "################"
 2417 ???? FFFF     	CHR16X24 "################"
 2418 ???? FFFF     	CHR16X24 "################"
 2419 ???? FFFF     	CHR16X24 "################"
 2420 ???? FFFF     	CHR16X24 "################"
 2421 ???? FFFF     	CHR16X24 "################"
 2422 ???? FFFF     	CHR16X24 "################"
 2423 ???? FFFF     	CHR16X24 "################"
 2424 ???? FFFF     	CHR16X24 "################"
 2425 ???? FFFF     	CHR16X24 "################"
 2426 ???? FFFF     	CHR16X24 "################"
 2427 ???? FFFF     	CHR16X24 "################"
 2428 ???? FFFF     	CHR16X24 "################"
 2429 ???? FFFF     	CHR16X24 "################"
 2430 ???? FFFF     	CHR16X24 "################"
 2431 ???? FFFF     	CHR16X24 "################"
 2432 ???? FFFF     	CHR16X24 "################"
 2433              	
 2434 ???? 00000000 	CHR32X32 "................................"
 2435 ???? 00000000 	CHR32X32 "................................"
 2436 ???? 00000000 	CHR32X32 "................................"
 2437 ???? 00000000 	CHR32X32 "................................"
 2438 ???? 0F0000F0 	CHR32X32 "....####................####...."
 2439 ???? 0F0003F0 	CHR32X32 "....####..............######...."
 2440 ???? 0F000FF0 	CHR32X32 "....####............########...."
 2441 ???? 0F003FF0 	CHR32X32 "....####..........##########...."
 2442 ???? 0F00FFC0 	CHR32X32 "....####........##########......"
 2443 ???? 0F03FF00 	CHR32X32 "....####......##########........"
 2444 ???? 0F0FFC00 	CHR32X32 "....####....##########.........."
 2445 ???? 0F3FF000 	CHR32X32 "....####..##########............"
 2446 ???? 0FFFC000 	CHR32X32 "....##############.............."
 2447 ???? 0FFF0000 	CHR32X32 "....############................"
 2448 ???? 0FFC0000 	CHR32X32 "....##########.................."
 2449 ???? 0FF00000 	CHR32X32 "....########...................."
 2450 ???? 0FF00000 	CHR32X32 "....########...................."
 2451 ???? 0FFC0000 	CHR32X32 "....##########.................."
 2452 ???? 0FFF0000 	CHR32X32 "....############................"
 2453 ???? 0FFFC000 	CHR32X32 "....##############.............."
 2454 ???? 0F3FF000 	CHR32X32 "....####..##########............"
 2455 ???? 0F0FFC00 	CHR32X32 "....####....##########.........."
 2456 ???? 0F03FF00 	CHR32X32 "....####......##########........"
 2457 ???? 0F00FFC0 	CHR32X32 "....####........##########......"
 2458 ???? 0F003FF0 	CHR32X32 "....####..........##########...."
 2459 ???? 0F000FF0 	CHR32X32 "....####............########...."
 2460 ???? 0F0003F0 	CHR32X32 "....####..............######...."
 2461 ???? 0F0000F0 	CHR32X32 "....####................####...."
 2462 ???? 00000000 	CHR32X32 "................................"
 2463 ???? 00000000 	CHR32X32 "................................"
 2464 ???? 00000000 	CHR32X32 "................................"
 2465 ???? 00000000 	CHR32X32 "................................"
 2466              	
 2467 ???? 00000000 	CHR32X32 "................................"
 2468 ???? 00000000 	CHR32X32 "................................"
 2469 ???? 00000000 	CHR32X32 "................................"
 2470 ???? 00000000 	CHR32X32 "................................"
 2471 ???? 00000000 	CHR32X32 "................................"
 2472 ???? 00000000 	CHR32X32 "................................"
 2473 ???? 00000000 	CHR32X32 "................................"
 2474 ???? 00000000 	CHR32X32 "................................"
 2475 ???? 00000000 	CHR32X32 "................................"
 2476 ???? 00000000 	CHR32X32 "................................"
 2477 ???? 00000000 	CHR32X32 "................................"
 2478 ???? 00000000 	CHR32X32 "................................"
 2479 ???? 00000000 	CHR32X32 "................................"
 2480 ???? 00000000 	CHR32X32 "................................"
 2481 ???? 00000000 	CHR32X32 "................................"
 2482 ???? 00000000 	CHR32X32 "................................"
 2483 ???? 00018000 	CHR32X32 "...............##..............."
 2484 ???? 0007E000 	CHR32X32 ".............######............."
 2485 ???? 0007E000 	CHR32X32 ".............######............."
 2486 ???? 000FF000 	CHR32X32 "............########............"
 2487 ???? 000FF000 	CHR32X32 "............########............"
 2488 ???? 0007E000 	CHR32X32 ".............######............."
 2489 ???? 0007E000 	CHR32X32 ".............######............."
 2490 ???? 00018000 	CHR32X32 "...............##..............."
 2491 ???? 00000000 	CHR32X32 "................................"
 2492 ???? 00000000 	CHR32X32 "................................"
 2493 ???? 00000000 	CHR32X32 "................................"
 2494 ???? 00000000 	CHR32X32 "................................"
 2495 ???? 00000000 	CHR32X32 "................................"
 2496 ???? 00000000 	CHR32X32 "................................"
 2497 ???? 00000000 	CHR32X32 "................................"
 2498 ???? 00000000 	CHR32X32 "................................"
 2499              	
 2500 ???? 00000000 	CHR32X32 "................................"
 2501 ???? 00000000 	CHR32X32 "................................"
 2502 ???? 00000000 	CHR32X32 "................................"
 2503 ???? 00000000 	CHR32X32 "................................"
 2504 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2505 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2506 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2507 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2508 ???? 000007E0 	CHR32X32 ".....................######....."
 2509 ???? 00000FC0 	CHR32X32 "....................######......"
 2510 ???? 00001F80 	CHR32X32 "...................######......."
 2511 ???? 00003F00 	CHR32X32 "..................######........"
 2512 ???? 00007E00 	CHR32X32 ".................######........."
 2513 ???? 0000FC00 	CHR32X32 "................######.........."
 2514 ???? 0001F800 	CHR32X32 "...............######..........."
 2515 ???? 0003F000 	CHR32X32 "..............######............"
 2516 ???? 0007E000 	CHR32X32 ".............######............."
 2517 ???? 000FC000 	CHR32X32 "............######.............."
 2518 ???? 001F8000 	CHR32X32 "...........######..............."
 2519 ???? 003F0000 	CHR32X32 "..........######................"
 2520 ???? 007E0000 	CHR32X32 ".........######................."
 2521 ???? 00FC0000 	CHR32X32 "........######.................."
 2522 ???? 01F80000 	CHR32X32 ".......######..................."
 2523 ???? 03F00000 	CHR32X32 "......######...................."
 2524 ???? 07FFFFF0 	CHR32X32 ".....#######################...."
 2525 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2526 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2527 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2528 ???? 00000000 	CHR32X32 "................................"
 2529 ???? 00000000 	CHR32X32 "................................"
 2530 ???? 00000000 	CHR32X32 "................................"
 2531 ???? 00000000 	CHR32X32 "................................"
 2532              	
 2533 ???? 00000000 	CHR32X32 "................................"
 2534 ???? 00000000 	CHR32X32 "................................"
 2535 ???? 00000000 	CHR32X32 "................................"
 2536 ???? 00000000 	CHR32X32 "................................"
 2537 ???? 00000070 	CHR32X32 ".........................###...."
 2538 ???? 000000F0 	CHR32X32 "........................####...."
 2539 ???? 000001F0 	CHR32X32 ".......................#####...."
 2540 ???? 000003E0 	CHR32X32 "......................#####....."
 2541 ???? 000007C0 	CHR32X32 ".....................#####......"
 2542 ???? 00000F80 	CHR32X32 "....................#####......."
 2543 ???? 00001F00 	CHR32X32 "...................#####........"
 2544 ???? 00003E00 	CHR32X32 "..................#####........."
 2545 ???? 00007C00 	CHR32X32 ".................#####.........."
 2546 ???? 0000F800 	CHR32X32 "................#####..........."
 2547 ???? 0001F000 	CHR32X32 "...............#####............"
 2548 ???? 0003E000 	CHR32X32 "..............#####............."
 2549 ???? 0007C000 	CHR32X32 ".............#####.............."
 2550 ???? 000F8000 	CHR32X32 "............#####..............."
 2551 ???? 001F0000 	CHR32X32 "...........#####................"
 2552 ???? 003E0000 	CHR32X32 "..........#####................."
 2553 ???? 007C0000 	CHR32X32 ".........#####.................."
 2554 ???? 00F80000 	CHR32X32 "........#####..................."
 2555 ???? 01F00000 	CHR32X32 ".......#####...................."
 2556 ???? 03E00000 	CHR32X32 "......#####....................."
 2557 ???? 07C00000 	CHR32X32 ".....#####......................"
 2558 ???? 0F800000 	CHR32X32 "....#####......................."
 2559 ???? 0F000000 	CHR32X32 "....####........................"
 2560 ???? 0E000000 	CHR32X32 "....###........................."
 2561 ???? 00000000 	CHR32X32 "................................"
 2562 ???? 00000000 	CHR32X32 "................................"
 2563 ???? 00000000 	CHR32X32 "................................"
 2564 ???? 00000000 	CHR32X32 "................................"
 2565              	
 2566 ???? 00000000 	CHR32X32 "................................"
 2567 ???? 00000000 	CHR32X32 "................................"
 2568 ???? 00000000 	CHR32X32 "................................"
 2569 ???? 00000000 	CHR32X32 "................................"
 2570 ???? 00000000 	CHR32X32 "................................"
 2571 ???? 00000000 	CHR32X32 "................................"
 2572 ???? 00000000 	CHR32X32 "................................"
 2573 ???? 00000000 	CHR32X32 "................................"
 2574 ???? 00000000 	CHR32X32 "................................"
 2575 ???? 00000000 	CHR32X32 "................................"
 2576 ???? 00038000 	CHR32X32 "..............###..............."
 2577 ???? 0007C000 	CHR32X32 ".............#####.............."
 2578 ???? 0007C000 	CHR32X32 ".............#####.............."
 2579 ???? 0007C000 	CHR32X32 ".............#####.............."
 2580 ???? 00038000 	CHR32X32 "..............###..............."
 2581 ???? 00000000 	CHR32X32 "................................"
 2582 ???? 00000000 	CHR32X32 "................................"
 2583 ???? 00000000 	CHR32X32 "................................"
 2584 ???? 00000000 	CHR32X32 "................................"
 2585 ???? 00038000 	CHR32X32 "..............###..............."
 2586 ???? 0007C000 	CHR32X32 ".............#####.............."
 2587 ???? 0007C000 	CHR32X32 ".............#####.............."
 2588 ???? 0007C000 	CHR32X32 ".............#####.............."
 2589 ???? 00038000 	CHR32X32 "..............###..............."
 2590 ???? 00038000 	CHR32X32 "..............###..............."
 2591 ???? 000F0000 	CHR32X32 "............####................"
 2592 ???? 000E0000 	CHR32X32 "............###................."
 2593 ???? 00000000 	CHR32X32 "................................"
 2594 ???? 00000000 	CHR32X32 "................................"
 2595 ???? 00000000 	CHR32X32 "................................"
 2596 ???? 00000000 	CHR32X32 "................................"
 2597 ???? 00000000 	CHR32X32 "................................"
 2598              	
 2599 ???? 00000000 	CHR32X32 "................................"
 2600 ???? 00000000 	CHR32X32 "................................"
 2601 ???? 00000000 	CHR32X32 "................................"
 2602 ???? 00000000 	CHR32X32 "................................"
 2603 ???? 00000000 	CHR32X32 "................................"
 2604 ???? 00000000 	CHR32X32 "................................"
 2605 ???? 00000000 	CHR32X32 "................................"
 2606 ???? 00000000 	CHR32X32 "................................"
 2607 ???? 00000000 	CHR32X32 "................................"
 2608 ???? 00000000 	CHR32X32 "................................"
 2609 ???? 00038000 	CHR32X32 "..............###..............."
 2610 ???? 0007C000 	CHR32X32 ".............#####.............."
 2611 ???? 0007C000 	CHR32X32 ".............#####.............."
 2612 ???? 0007C000 	CHR32X32 ".............#####.............."
 2613 ???? 00038000 	CHR32X32 "..............###..............."
 2614 ???? 00000000 	CHR32X32 "................................"
 2615 ???? 00000000 	CHR32X32 "................................"
 2616 ???? 00000000 	CHR32X32 "................................"
 2617 ???? 00000000 	CHR32X32 "................................"
 2618 ???? 00038000 	CHR32X32 "..............###..............."
 2619 ???? 0007C000 	CHR32X32 ".............#####.............."
 2620 ???? 0007C000 	CHR32X32 ".............#####.............."
 2621 ???? 0007C000 	CHR32X32 ".............#####.............."
 2622 ???? 00038000 	CHR32X32 "..............###..............."
 2623 ???? 00000000 	CHR32X32 "................................"
 2624 ???? 00000000 	CHR32X32 "................................"
 2625 ???? 00000000 	CHR32X32 "................................"
 2626 ???? 00000000 	CHR32X32 "................................"
 2627 ???? 00000000 	CHR32X32 "................................"
 2628 ???? 00000000 	CHR32X32 "................................"
 2629 ???? 00000000 	CHR32X32 "................................"
 2630 ???? 00000000 	CHR32X32 "................................"
 2631              	
 2632 ???? 00000000 	CHR32X32 "................................"
 2633 ???? 00000000 	CHR32X32 "................................"
 2634 ???? 00000000 	CHR32X32 "................................"
 2635 ???? 00000000 	CHR32X32 "................................"
 2636 ???? 0007E000 	CHR32X32 ".............######............."
 2637 ???? 0007E000 	CHR32X32 ".............######............."
 2638 ???? 0007E000 	CHR32X32 ".............######............."
 2639 ???? 0007E000 	CHR32X32 ".............######............."
 2640 ???? 0007E000 	CHR32X32 ".............######............."
 2641 ???? 0007E000 	CHR32X32 ".............######............."
 2642 ???? 0007E000 	CHR32X32 ".............######............."
 2643 ???? 0007E000 	CHR32X32 ".............######............."
 2644 ???? 0007E000 	CHR32X32 ".............######............."
 2645 ???? 0007E000 	CHR32X32 ".............######............."
 2646 ???? 0007E000 	CHR32X32 ".............######............."
 2647 ???? 0007E000 	CHR32X32 ".............######............."
 2648 ???? 0003C000 	CHR32X32 "..............####.............."
 2649 ???? 0003C000 	CHR32X32 "..............####.............."
 2650 ???? 0003C000 	CHR32X32 "..............####.............."
 2651 ???? 0003C000 	CHR32X32 "..............####.............."
 2652 ???? 00000000 	CHR32X32 "................................"
 2653 ???? 00000000 	CHR32X32 "................................"
 2654 ???? 00000000 	CHR32X32 "................................"
 2655 ???? 00000000 	CHR32X32 "................................"
 2656 ???? 0003C000 	CHR32X32 "..............####.............."
 2657 ???? 0003C000 	CHR32X32 "..............####.............."
 2658 ???? 0003C000 	CHR32X32 "..............####.............."
 2659 ???? 0003C000 	CHR32X32 "..............####.............."
 2660 ???? 00000000 	CHR32X32 "................................"
 2661 ???? 00000000 	CHR32X32 "................................"
 2662 ???? 00000000 	CHR32X32 "................................"
 2663 ???? 00000000 	CHR32X32 "................................"
 2664              	
 2665 ???? 00000000 	CHR32X32 "................................"
 2666 ???? 00000000 	CHR32X32 "................................"
 2667 ???? 00000000 	CHR32X32 "................................"
 2668 ???? 00000000 	CHR32X32 "................................"
 2669 ???? 0003C000 	CHR32X32 "..............####.............."
 2670 ???? 0003C000 	CHR32X32 "..............####.............."
 2671 ???? 0003C000 	CHR32X32 "..............####.............."
 2672 ???? 0003C000 	CHR32X32 "..............####.............."
 2673 ???? 0003C000 	CHR32X32 "..............####.............."
 2674 ???? 0003C000 	CHR32X32 "..............####.............."
 2675 ???? 0003C000 	CHR32X32 "..............####.............."
 2676 ???? 0003C000 	CHR32X32 "..............####.............."
 2677 ???? 0003C000 	CHR32X32 "..............####.............."
 2678 ???? 0003C000 	CHR32X32 "..............####.............."
 2679 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2680 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2681 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2682 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2683 ???? 0003C000 	CHR32X32 "..............####.............."
 2684 ???? 0003C000 	CHR32X32 "..............####.............."
 2685 ???? 0003C000 	CHR32X32 "..............####.............."
 2686 ???? 0003C000 	CHR32X32 "..............####.............."
 2687 ???? 0003C000 	CHR32X32 "..............####.............."
 2688 ???? 0003C000 	CHR32X32 "..............####.............."
 2689 ???? 0003C000 	CHR32X32 "..............####.............."
 2690 ???? 0003C000 	CHR32X32 "..............####.............."
 2691 ???? 0003C000 	CHR32X32 "..............####.............."
 2692 ???? 0003C000 	CHR32X32 "..............####.............."
 2693 ???? 00000000 	CHR32X32 "................................"
 2694 ???? 00000000 	CHR32X32 "................................"
 2695 ???? 00000000 	CHR32X32 "................................"
 2696 ???? 00000000 	CHR32X32 "................................"
 2697              	
 2698 ???? 00000000 	CHR32X32 "................................"
 2699 ???? 00000000 	CHR32X32 "................................"
 2700 ???? 00000000 	CHR32X32 "................................"
 2701 ???? 00000000 	CHR32X32 "................................"
 2702 ???? 00FFFF00 	CHR32X32 "........################........"
 2703 ???? 03FFFFC0 	CHR32X32 "......####################......"
 2704 ???? 07FFFFE0 	CHR32X32 ".....######################....."
 2705 ???? 07FFFFE0 	CHR32X32 ".....######################....."
 2706 ???? 0F8001F0 	CHR32X32 "....#####..............#####...."
 2707 ???? 0F0000F0 	CHR32X32 "....####................####...."
 2708 ???? 0F0000F0 	CHR32X32 "....####................####...."
 2709 ???? 0F0FF0F0 	CHR32X32 "....####....########....####...."
 2710 ???? 0F1FF8F0 	CHR32X32 "....####...##########...####...."
 2711 ???? 0F1FF8F0 	CHR32X32 "....####...##########...####...."
 2712 ???? 0F1C38F0 	CHR32X32 "....####...###....###...####...."
 2713 ???? 0F1C38F0 	CHR32X32 "....####...###....###...####...."
 2714 ???? 0F1C38F0 	CHR32X32 "....####...###....###...####...."
 2715 ???? 0F1C39F0 	CHR32X32 "....####...###....###..#####...."
 2716 ???? 0F1FFFE0 	CHR32X32 "....####...################....."
 2717 ???? 0F1FFFE0 	CHR32X32 "....####...################....."
 2718 ???? 0F0FFF80 	CHR32X32 "....####....#############......."
 2719 ???? 0F000000 	CHR32X32 "....####........................"
 2720 ???? 0F000000 	CHR32X32 "....####........................"
 2721 ???? 0F8001F0 	CHR32X32 "....#####..............#####...."
 2722 ???? 07FFFFE0 	CHR32X32 ".....######################....."
 2723 ???? 07FFFFE0 	CHR32X32 ".....######################....."
 2724 ???? 03FFFFC0 	CHR32X32 "......####################......"
 2725 ???? 00FFFF00 	CHR32X32 "........################........"
 2726 ???? 00000000 	CHR32X32 "................................"
 2727 ???? 00000000 	CHR32X32 "................................"
 2728 ???? 00000000 	CHR32X32 "................................"
 2729 ???? 00000000 	CHR32X32 "................................"
 2730              	
 2731 ???? 00000000 	CHR32X32 "................................"
 2732 ???? 00000000 	CHR32X32 "................................"
 2733 ???? 00000000 	CHR32X32 "................................"
 2734 ???? 00000000 	CHR32X32 "................................"
 2735 ???? 00018000 	CHR32X32 "...............##..............."
 2736 ???? 00018000 	CHR32X32 "...............##..............."
 2737 ???? 00018000 	CHR32X32 "...............##..............."
 2738 ???? 0003C000 	CHR32X32 "..............####.............."
 2739 ???? 0003C000 	CHR32X32 "..............####.............."
 2740 ???? 0003C000 	CHR32X32 "..............####.............."
 2741 ???? 0007E000 	CHR32X32 ".............######............."
 2742 ???? 0007E000 	CHR32X32 ".............######............."
 2743 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2744 ???? 0FFFFFF0 	CHR32X32 "....########################...."
 2745 ???? 03FFFFC0 	CHR32X32 "......####################......"
 2746 ???? 00FFFF00 	CHR32X32 "........################........"
 2747 ???? 003FFC00 	CHR32X32 "..........############.........."
 2748 ???? 001FF800 	CHR32X32 "...........##########..........."
 2749 ???? 001FF800 	CHR32X32 "...........##########..........."
 2750 ???? 003FFC00 	CHR32X32 "..........############.........."
 2751 ???? 003FFC00 	CHR32X32 "..........############.........."
 2752 ???? 007E7E00 	CHR32X32 ".........######..######........."
 2753 ???? 007C3E00 	CHR32X32 ".........#####....#####........."
 2754 ???? 00781E00 	CHR32X32 ".........####......####........."
 2755 ???? 00E00700 	CHR32X32 "........###..........###........"
 2756 ???? 00C00300 	CHR32X32 "........##............##........"
 2757 ???? 00000000 	CHR32X32 "................................"
 2758 ???? 00000000 	CHR32X32 "................................"
 2759 ???? 00000000 	CHR32X32 "................................"
 2760 ???? 00000000 	CHR32X32 "................................"
 2761 ???? 00000000 	CHR32X32 "................................"
 2762 ???? 00000000 	CHR32X32 "................................"
 2763              	
 2764 ???? 00000000 	CHR32X32 "................................"
 2765 ???? 00000000 	CHR32X32 "................................"
 2766 ???? 00000000 	CHR32X32 "................................"
 2767 ???? 00000000 	CHR32X32 "................................"
 2768 ???? 00000000 	CHR32X32 "................................"
 2769 ???? 00000000 	CHR32X32 "................................"
 2770 ???? 00000000 	CHR32X32 "................................"
 2771 ???? 00000000 	CHR32X32 "................................"
 2772 ???? 00000000 	CHR32X32 "................................"
 2773 ???? 00000000 	CHR32X32 "................................"
 2774 ???? 00000000 	CHR32X32 "................................"
 2775 ???? 00000000 	CHR32X32 "................................"
 2776 ???? 00000000 	CHR32X32 "................................"
 2777 ???? 00000000 	CHR32X32 "................................"
 2778 ???? 00000000 	CHR32X32 "................................"
 2779 ???? 00000000 	CHR32X32 "................................"
 2780 ???? 00000000 	CHR32X32 "................................"
 2781 ???? 00000000 	CHR32X32 "................................"
 2782 ???? 00000000 	CHR32X32 "................................"
 2783 ???? 00038000 	CHR32X32 "..............###..............."
 2784 ???? 0007C000 	CHR32X32 ".............#####.............."
 2785 ???? 0007C000 	CHR32X32 ".............#####.............."
 2786 ???? 0007C000 	CHR32X32 ".............#####.............."
 2787 ???? 00038000 	CHR32X32 "..............###..............."
 2788 ???? 00038000 	CHR32X32 "..............###..............."
 2789 ???? 000F0000 	CHR32X32 "............####................"
 2790 ???? 000E0000 	CHR32X32 "............###................."
 2791 ???? 00000000 	CHR32X32 "................................"
 2792 ???? 00000000 	CHR32X32 "................................"
 2793 ???? 00000000 	CHR32X32 "................................"
 2794 ???? 00000000 	CHR32X32 "................................"
 2795 ???? 00000000 	CHR32X32 "................................"
 2796              	
 2797 ???? 03FFFFC0 	CHR32X32 "......####################......"
 2798 ???? 1FFFFFF8 	CHR32X32 "...##########################..."
 2799 ???? 3C00003C 	CHR32X32 "..####....................####.."
 2800 ???? 7000000E 	CHR32X32 ".###........................###."
 2801 ???? FFFFFFFF 	CHR32X32 "################################"
 2802 ???? FFFFFFFF 	CHR32X32 "################################"
 2803 ???? FFFFFFFF 	CHR32X32 "################################"
 2804 ???? FFFFFFFF 	CHR32X32 "################################"
 2805 ???? FFFFFFFF 	CHR32X32 "################################"
 2806 ???? FFFFFFFF 	CHR32X32 "################################"
 2807 ???? FFFFFFFF 	CHR32X32 "################################"
 2808 ???? FFFFFFFF 	CHR32X32 "################################"
 2809 ???? FFFFFFFF 	CHR32X32 "################################"
 2810 ???? FFFFFFFF 	CHR32X32 "################################"
 2811 ???? FFFFFFFF 	CHR32X32 "################################"
 2812 ???? FFFFFFFF 	CHR32X32 "################################"
 2813 ???? FFFFFFFF 	CHR32X32 "################################"
 2814 ???? FFFFFFFF 	CHR32X32 "################################"
 2815 ???? FFFFFFFF 	CHR32X32 "################################"
 2816 ???? FFFFFFFF 	CHR32X32 "################################"
 2817 ???? FFFFFFFF 	CHR32X32 "################################"
 2818 ???? FFFFFFFF 	CHR32X32 "################################"
 2819 ???? FFFFFFFF 	CHR32X32 "################################"
 2820 ???? FFFFFFFF 	CHR32X32 "################################"
 2821 ???? FFFFFFFF 	CHR32X32 "################################"
 2822 ???? FFFFFFFF 	CHR32X32 "################################"
 2823 ???? FFFFFFFF 	CHR32X32 "################################"
 2824 ???? FFFFFFFF 	CHR32X32 "################################"
 2825 ???? 7000000E 	CHR32X32 ".###........................###."
 2826 ???? 3C000008 	CHR32X32 "..####......................#..."
 2827 ???? 08080808 	CHR32X32 "....#.......#.......#.......#..."
 2828 ???? 08080808 	CHR32X32 "....#.......#.......#.......#..."
 2829              	
 1683              	.endif
 1684              	.ifdef I_HAVE_AT_LEAST_1GB_RAM
 1685              	 .incbin "newcode.dat"
 1686              	.else
 1687 ???? C9C6D091 	 .incbin "color.dat"
 1687      00802C31 
 1687      CA9A9AE5 
 1687      000000D2 
 1687      0AD24C96 
 1687      000000E8 
 1687      0AA09889 
 1687      0A1D9BC5 
 1687      00000079 
 1687      6A5771C0 
 1687      08030000 
 1688              	.endif
 1689              	.ifdef MANDELBROT
 1690              	 .incbin "new_mandelbrot.blk"
 1691              	.endif
 1692              	.end start
DEFINED SYMBOLS
           color.asm:86     *ABS*:0000000000000400 hp
           color.asm:87     *ABS*:0000000000000300 vp
           color.asm:93     *ABS*:0000000000004117 vesa
           color.asm:100    *ABS*:0000000000025c00 buffer
            boot.asm:8      .text:0000000000000000 start
            boot.asm:74     .text:0000000000000058 start0
            boot.asm:25     .text:0000000000000025 command
            boot.asm:33     .text:0000000000000027 cylinder
            boot.asm:54     .text:0000000000000030 nc
            boot.asm:55     .text:0000000000000034 gdt
            boot.asm:63     .text:0000000000000040 gdt0
            boot.asm:106    .text:000000000000007b loc
            boot.asm:117    .text:000000000000008b relocate
            boot.asm:128    .text:000000000000009c protected
                            *ABS*:00000000000a0000 gods
            boot.asm:139    .text:00000000000000b1 a20
            boot.asm:331    .text:000000000000018d dma
            boot.asm:166    .text:00000000000000dd cold
                            *ABS*:000000000009f448 godd
            boot.asm:188    .text:0000000000000100 start2
            boot.asm:270    .text:0000000000000161 sense_
            boot.asm:371    .text:00000000000001b8 read
            boot.asm:305    .text:000000000000017d stop
           color.asm:114    .text:00000000000002a3 start1
            boot.asm:191    *ABS*:00000000000000a6 us
            boot.asm:192    *ABS*:0000000000028870 ms
            boot.asm:193    .text:000000000000010a spin
            boot.asm:312    .text:000000000000017f onoff
            boot.asm:230    .text:0000000000000146 cmd
            boot.asm:214    .text:000000000000012f cmdi
            boot.asm:219    .text:0000000000000137 ready
            boot.asm:229    .text:0000000000000144 transfer
            boot.asm:233    .text:000000000000014e cmd0
            boot.asm:236    .text:0000000000000151 cmd1
            boot.asm:289    .text:0000000000000175 seek
            boot.asm:406    .text:0000000000000204 write
            boot.asm:435    .text:000000000000021f flop
            boot.asm:491    .text:0000000000000238 readf
            boot.asm:498    .text:000000000000024a readf1
            boot.asm:504    .text:0000000000000253 writef
            boot.asm:513    .text:0000000000000267 seekf
            boot.asm:523    .text:0000000000000281 cmdf
            boot.asm:530    .text:0000000000000292 readyf
           color.asm:109    *ABS*:0000000000003000 icons
           color.asm:113    .text:000000000000029e warm
             gen.asm:22     .text:0000000000001ec0 displ
           color.asm:195    .text:0000000000000327 show0
           color.asm:524    .text:00000000000007e0 forths
           color.asm:553    .text:0000000000000ae8 forth1
           color.asm:543    .text:00000000000009fc forth0
           color.asm:523    .text:00000000000007dc macros
           color.asm:529    .text:00000000000007fc macro1
           color.asm:527    .text:00000000000007e4 macro0
           color.asm:486    .text:000000000000075d load
           color.asm:974    .text:000000000000244f accept
           color.asm:136    *ABS*:000000000009dcd8 mains
           color.asm:137    *ABS*:000000000009d120 maind
           color.asm:140    .text:00000000000002d4 me
           color.asm:155    .text:00000000000002e1 god
           color.asm:141    .text:00000000000002d8 screen
           color.asm:154    .text:00000000000002dc round
           color.asm:177    .text:0000000000000302 unpause
           color.asm:162    .text:00000000000002ea main
           color.asm:170    .text:00000000000002f0 pause
           color.asm:184    .text:000000000000030d act
           color.asm:197    .text:000000000000032d show
             gen.asm:83     .text:0000000000001efd graphic
             gen.asm:85     .text:0000000000001efe switch
           color.asm:207    .text:0000000000000352 c_
           color.asm:210    .text:0000000000000358 mark
           color.asm:518    .text:00000000000007bc mk
           color.asm:519    .text:00000000000007c8 h
           color.asm:219    .text:000000000000037d empty
           color.asm:521    .text:00000000000007d0 class
           color.asm:229    .text:00000000000003ac mfind
           color.asm:235    .text:00000000000003bc find
           color.asm:245    .text:00000000000003d0 ex1
           color.asm:969    .text:0000000000002448 words
           color.asm:267    .text:0000000000000421 abort1
           color.asm:580    .text:0000000000001500 forth2
           color.asm:254    .text:00000000000003ea execute
           color.asm:508    .text:00000000000007b8 lit
           color.asm:356    .text:00000000000005a4 alit
           color.asm:257    .text:0000000000000400 ex2
           color.asm:264    .text:0000000000000412 abort
           color.asm:1410   .text:0000000000002a54 curs
           color.asm:1402   .text:0000000000002a50 blk
           color.asm:497    .text:0000000000000778 spaces
           color.asm:285    .text:0000000000000483 forthd
           color.asm:367    .text:00000000000005d9 qcompile
           color.asm:344    .text:000000000000057d cnum
           color.asm:349    .text:000000000000058d cshort
           color.asm:723    .text:00000000000020fe echo_
           color.asm:276    .text:000000000000045d sdefine
           color.asm:498    .text:0000000000000784 adefine
           color.asm:278    .text:0000000000000464 macro_
           color.asm:279    .text:0000000000000469 macrod
           color.asm:284    .text:000000000000047e forth
           color.asm:520    .text:00000000000007cc last
           color.asm:522    .text:00000000000007d4 list
           color.asm:324    .text:0000000000000529 adup
           color.asm:304    .text:00000000000004e0 cdrop
           color.asm:310    .text:00000000000004f6 qdup
           color.asm:318    .text:0000000000000511 cdup
           color.asm:327    .text:000000000000052f var1
           color.asm:330    .text:000000000000053c variable
           color.asm:357    .text:00000000000005ae literal
           color.asm:564    .text:00000000000012e8 macro2
           color.asm:377    .text:000000000000060a call_
           color.asm:388    .text:0000000000000629 compile
           color.asm:395    .text:0000000000000647 short_
           color.asm:401    .text:0000000000000661 num
           color.asm:407    .text:0000000000000679 comma
           color.asm:416    .text:0000000000000695 comma1
           color.asm:419    .text:000000000000069c comma2
           color.asm:422    .text:00000000000006a3 comma3
           color.asm:425    .text:00000000000006aa semi
           color.asm:437    .text:00000000000006ce then
           color.asm:444    .text:00000000000006e1 begin
           color.asm:445    .text:00000000000006e7 here
           color.asm:449    .text:00000000000006f2 qlit
           color.asm:463    .text:000000000000072e q1
           color.asm:468    .text:0000000000000739 less
           color.asm:473    .text:0000000000000740 qignore
           color.asm:477    .text:000000000000074f nul
           color.asm:479    .text:0000000000000750 jump
           color.asm:490    .text:0000000000000764 inter
           color.asm:528    *ABS*:0000000000000000 packed
           color.asm:528    *ABS*:0000000000000000 bitcount
           color.asm:528    *ABS*:0000000000000000 stoppacking
           color.asm:528    *ABS*:00000000ccd89640 savepacked
           color.asm:528    *ABS*:000000000000002f huffindex
           color.asm:528    *ABS*:000000000000007f huffcode
           color.asm:528    *ABS*:0000000000000007 bitshift
           color.asm:606    .text:0000000000001dec boot
           color.asm:675    .text:0000000000001e84 nc_
           color.asm:1663   .text:0000000000002e02 pad
           color.asm:610    .text:0000000000001df2 erase
           color.asm:624    .text:0000000000001e05 copy
             gen.asm:136    .text:0000000000001f93 emit
           color.asm:1151   .text:00000000000026b9 edig
             gen.asm:159    .text:0000000000001fd3 emit2
           color.asm:1195   .text:000000000000272a dot10
           color.asm:1169   .text:00000000000026e5 hdot
           color.asm:1162   .text:00000000000026d3 hdotn
           color.asm:776    .text:00000000000021a7 cr
             gen.asm:155    .text:0000000000001fc8 space
           color.asm:741    .text:000000000000212d down
           color.asm:1514   .text:0000000000002be7 edit
           color.asm:1517   .text:0000000000002bed e
           color.asm:783    .text:00000000000021c1 lms
           color.asm:787    .text:00000000000021c8 rms
             gen.asm:179    .text:000000000000200e text1
           color.asm:848    .text:000000000000225a keyboard
           color.asm:638    .text:0000000000001e2c debug
           color.asm:791    .text:00000000000021cf at
           color.asm:797    .text:00000000000021de pat
           color.asm:679    .text:0000000000001e8f xy_
           color.asm:683    .text:0000000000001e9a fov_
             gen.asm:82     .text:0000000000001efc fifof
             gen.asm:196    .text:000000000000204a box
             gen.asm:184    .text:000000000000202c line
             gen.asm:39     .text:0000000000001ef0 color
           color.asm:803    .text:00000000000021ef octant
           color.asm:687    .text:0000000000001ea5 sps
           color.asm:691    .text:0000000000001eb0 last_
           color.asm:1224   .text:000000000000277b unpack
           color.asm:668    .text:0000000000001e70 xy
                            *ABS*:0000000000000019 vc
                            *ABS*:000000000000001e ih
           color.asm:1178   .text:00000000000026f9 dot
           color.asm:653    *ABS*:0000000000000016 iw
           color.asm:655    *ABS*:000000000000002e hc
           color.asm:669    .text:0000000000001e74 lm
           color.asm:670    .text:0000000000001e78 rm
           color.asm:671    .text:0000000000001e7c xycr
           color.asm:672    .text:0000000000001e80 fov
             gen.asm:15     .text:0000000000001ebc frame
             gen.asm:23     .text:0000000000001ec4 fore
             gen.asm:24     .text:0000000000001ec8 xc
             gen.asm:25     .text:0000000000001ecc yc
             gen.asm:28     .text:0000000000001ed0 rgb
             gen.asm:37     .text:0000000000001ee6 white
             gen.asm:96     .text:0000000000001f1a clip
             gen.asm:113    .text:0000000000001f52 bit16
             gen.asm:116    .text:0000000000001f5b b16
             gen.asm:123    .text:0000000000001f6a bit32
             gen.asm:126    .text:0000000000001f73 b32
           color.asm:772    .text:0000000000002197 qcr
             gen.asm:154    .text:0000000000001fc7 bl_
           color.asm:764    .text:000000000000217e top
             gen.asm:220    .text:0000000000002096 no
           color.asm:697    *ABS*:0000000000ffff00 yellow
           color.asm:698    .text:0000000000002099 cyan
           color.asm:701    .text:00000000000020a8 magenta
           color.asm:704    .text:00000000000020b7 silver
           color.asm:707    .text:00000000000020c6 blue
           color.asm:710    .text:00000000000020d5 red
           color.asm:713    .text:00000000000020e4 green
           color.asm:717    .text:00000000000020f3 history
           color.asm:733    .text:0000000000002117 right
           color.asm:748    .text:0000000000002149 zero
           color.asm:754    .text:0000000000002154 blank
           color.asm:821    .text:000000000000220e eight
           color.asm:825    .text:000000000000221e four
           color.asm:827    .text:0000000000002223 four1
           color.asm:837    .text:0000000000002239 stack
           color.asm:1193   .text:0000000000002721 qdot
           color.asm:951    .text:0000000000002428 board
           color.asm:965    .text:0000000000002438 keyc
           color.asm:962    .text:000000000000242c shift
           color.asm:873    .text:00000000000022f4 alpha
           color.asm:879    .text:000000000000230c graphics
           color.asm:885    .text:0000000000002324 numbers
           color.asm:891    .text:000000000000233c octals
           color.asm:897    .text:0000000000002354 letter
           color.asm:904    .text:0000000000002362 keys
           color.asm:911    .text:000000000000238c key
           color.asm:938    .text:00000000000023b0 graph0
           color.asm:972    .text:000000000000244c nul0
           color.asm:1123   .text:0000000000002638 alph0
           color.asm:940    .text:00000000000023c4 graph1
           color.asm:1061   .text:0000000000002549 word0
           color.asm:1039   .text:00000000000024e2 x
           color.asm:1025   .text:00000000000024bb lj
           color.asm:1131   .text:0000000000002660 alph
           color.asm:942    .text:00000000000023d8 alpha0
           color.asm:1096   .text:00000000000025d8 number
           color.asm:1126   .text:000000000000264a star0
           color.asm:944    .text:00000000000023ec alpha1
           color.asm:1138   .text:0000000000002672 graph
           color.asm:946    .text:0000000000002400 numb0
           color.asm:1090   .text:00000000000025ce minus
           color.asm:1122   .text:0000000000002637 alphn
           color.asm:1075   .text:000000000000258f octal
           color.asm:948    .text:0000000000002414 numb1
           color.asm:1094   .text:00000000000025d5 number0
           color.asm:1080   .text:00000000000025a8 xn
           color.asm:1118   .text:000000000000262b endn
           color.asm:963    .text:0000000000002430 base
           color.asm:964    .text:0000000000002434 current
           color.asm:1065   .text:0000000000002551 decimal
           color.asm:966    .text:000000000000243c chars
           color.asm:967    .text:0000000000002440 aword
           color.asm:968    .text:0000000000002444 anumber
           color.asm:975    .text:000000000000244f acceptn
           color.asm:977    .text:000000000000245f accept1
           color.asm:1143   .text:000000000000268d first
           color.asm:984    .text:000000000000247b bits
           color.asm:997    .text:0000000000002483 pack
           color.asm:1030   .text:00000000000024c2 full
           color.asm:1019   .text:00000000000024af lj0
           color.asm:1045   .text:00000000000024f5 word_
           color.asm:1051   .text:0000000000002520 word1
           color.asm:1070   .text:0000000000002570 hex
           color.asm:1084   .text:00000000000025af digit
           color.asm:1089   .text:00000000000025cd sign
           color.asm:1114   .text:000000000000261e number2
           color.asm:1099   .text:00000000000025e7 number3
           color.asm:1148   .text:00000000000026a4 hicon
           color.asm:1150   .text:00000000000026b4 edig1
           color.asm:1157   .text:00000000000026c7 odig
           color.asm:1190   .text:000000000000271e Lh
           color.asm:1185   .text:000000000000270f Lh1
           color.asm:1399   .text:0000000000002a28 tens
           color.asm:1214   .text:0000000000002765 d_1
           color.asm:1217   .text:000000000000276d d_2
           color.asm:1244   .text:00000000000027aa qring
           color.asm:1256   .text:00000000000027d0 ring
           color.asm:1412   .text:0000000000002a5c pcad
           color.asm:1411   .text:0000000000002a58 cad
           color.asm:1271   .text:0000000000002819 rw
           color.asm:1321   .text:00000000000028d7 type_
           color.asm:1278   .text:0000000000002838 gw
           color.asm:1280   .text:0000000000002842 mw
           color.asm:1282   .text:000000000000284c ww
           color.asm:1287   .text:000000000000285d type0
           color.asm:1322   .text:00000000000028d7 type1
           color.asm:1413   .text:0000000000002a60 lcad
           color.asm:1299   .text:000000000000288c cap
           color.asm:1325   .text:00000000000028e6 type2
           color.asm:1309   .text:00000000000028ae caps
           color.asm:1320   .text:00000000000028d2 text
           color.asm:1335   .text:00000000000028fc gsw
           color.asm:1346   .text:000000000000291a gnw1
           color.asm:1339   .text:0000000000002908 var
           color.asm:1344   .text:0000000000002912 gnw
           color.asm:1401   .text:0000000000002a4c bas
           color.asm:1354   .text:0000000000002937 sw
           color.asm:1361   .text:000000000000294b nw1
           color.asm:1359   .text:0000000000002943 nw
           color.asm:1371   .text:0000000000002978 refresh
           color.asm:1381   .text:00000000000029a7 ref1
           color.asm:1395   .text:00000000000029e8 display
           color.asm:1414   .text:0000000000002a64 trash
           color.asm:1418   .text:0000000000002a68 ekeys
           color.asm:1629   .text:0000000000002d9f del
           color.asm:1533   .text:0000000000002c44 eout
           color.asm:1544   .text:0000000000002c7b destack
           color.asm:1452   .text:0000000000002b29 act1
           color.asm:1454   .text:0000000000002b2d act3
           color.asm:1456   .text:0000000000002b31 act4
           color.asm:1505   .text:0000000000002bd9 shadow
           color.asm:1484   .text:0000000000002b8f mcur
           color.asm:1489   .text:0000000000002b9e mmcur
           color.asm:1493   .text:0000000000002bb2 ppcur
           color.asm:1486   .text:0000000000002b97 pcur
           color.asm:1499   .text:0000000000002bc5 mblk
           color.asm:1474   .text:0000000000002b65 actv
           color.asm:1464   .text:0000000000002b41 act7
           color.asm:1496   .text:0000000000002bba pblk
           color.asm:1462   .text:0000000000002b3d act11
           color.asm:1460   .text:0000000000002b39 act10
           color.asm:1458   .text:0000000000002b35 act9
           color.asm:1431   .text:0000000000002ac8 ekbd0
           color.asm:1433   .text:0000000000002adc ekbd
           color.asm:1441   .text:0000000000002af4 actc
           color.asm:1445   .text:0000000000002b24 vector
           color.asm:1449   .text:0000000000002b28 action
           color.asm:1591   .text:0000000000002d13 insert
           color.asm:1469   .text:0000000000002b59 actn
           color.asm:1509   .text:0000000000002be4 e0
           color.asm:1596   .text:0000000000002d2a format
           color.asm:1558   .text:0000000000002cac insert0
           color.asm:1567   .text:0000000000002cd1 insert1
           color.asm:1616   .text:0000000000002d6e format2
           color.asm:1641   .text:0000000000002dc7 enstack
           color.asm:1660   .text:0000000000002e00 ens

UNDEFINED SYMBOLS
CM2001
JF2005
